Search.setIndex({"docnames": ["content/citation", "content/contributing", "content/gallery", "content/getting_started", "content/getting_started_mech_interp", "content/news/release-2.0", "content/special_cases", "content/tutorials", "generated/code/modules", "generated/code/transformer_lens", "generated/code/transformer_lens.ActivationCache", "generated/code/transformer_lens.FactoredMatrix", "generated/code/transformer_lens.HookedEncoder", "generated/code/transformer_lens.HookedEncoderDecoder", "generated/code/transformer_lens.HookedTransformer", "generated/code/transformer_lens.HookedTransformerConfig", "generated/code/transformer_lens.SVDInterpreter", "generated/code/transformer_lens.components", "generated/code/transformer_lens.components.abstract_attention", "generated/code/transformer_lens.components.attention", "generated/code/transformer_lens.components.bert_block", "generated/code/transformer_lens.components.bert_embed", "generated/code/transformer_lens.components.bert_mlm_head", "generated/code/transformer_lens.components.embed", "generated/code/transformer_lens.components.grouped_query_attention", "generated/code/transformer_lens.components.layer_norm", "generated/code/transformer_lens.components.layer_norm_pre", "generated/code/transformer_lens.components.pos_embed", "generated/code/transformer_lens.components.rms_norm", "generated/code/transformer_lens.components.rms_norm_pre", "generated/code/transformer_lens.components.t5_attention", "generated/code/transformer_lens.components.t5_block", "generated/code/transformer_lens.components.token_typed_embed", "generated/code/transformer_lens.components.transformer_block", "generated/code/transformer_lens.components.unembed", "generated/code/transformer_lens.evals", "generated/code/transformer_lens.head_detector", "generated/code/transformer_lens.hook_points", "generated/code/transformer_lens.loading_from_pretrained", "generated/code/transformer_lens.past_key_value_caching", "generated/code/transformer_lens.patching", "generated/code/transformer_lens.pretrained", "generated/code/transformer_lens.pretrained.weight_conversions", "generated/code/transformer_lens.pretrained.weight_conversions.bert", "generated/code/transformer_lens.pretrained.weight_conversions.bloom", "generated/code/transformer_lens.pretrained.weight_conversions.coder", "generated/code/transformer_lens.pretrained.weight_conversions.gemma", "generated/code/transformer_lens.pretrained.weight_conversions.gpt2", "generated/code/transformer_lens.pretrained.weight_conversions.gptj", "generated/code/transformer_lens.pretrained.weight_conversions.llama", "generated/code/transformer_lens.pretrained.weight_conversions.mingpt", "generated/code/transformer_lens.pretrained.weight_conversions.mistral", "generated/code/transformer_lens.pretrained.weight_conversions.mixtral", "generated/code/transformer_lens.pretrained.weight_conversions.nanogpt", "generated/code/transformer_lens.pretrained.weight_conversions.neel_solu_old", "generated/code/transformer_lens.pretrained.weight_conversions.neo", "generated/code/transformer_lens.pretrained.weight_conversions.neox", "generated/code/transformer_lens.pretrained.weight_conversions.opt", "generated/code/transformer_lens.pretrained.weight_conversions.phi", "generated/code/transformer_lens.pretrained.weight_conversions.phi3", "generated/code/transformer_lens.pretrained.weight_conversions.qwen", "generated/code/transformer_lens.pretrained.weight_conversions.qwen2", "generated/code/transformer_lens.pretrained.weight_conversions.t5", "generated/code/transformer_lens.train", "generated/code/transformer_lens.utilities", "generated/code/transformer_lens.utilities.activation_functions", "generated/code/transformer_lens.utilities.addmm", "generated/code/transformer_lens.utilities.attention", "generated/code/transformer_lens.utilities.devices", "generated/code/transformer_lens.utils", "generated/demos/Exploratory_Analysis_Demo", "generated/demos/Main_Demo", "generated/model_properties_table", "index"], "filenames": ["content/citation.md", "content/contributing.md", "content/gallery.md", "content/getting_started.md", "content/getting_started_mech_interp.md", "content/news/release-2.0.md", "content/special_cases.md", "content/tutorials.md", "generated/code/modules.rst", "generated/code/transformer_lens.rst", "generated/code/transformer_lens.ActivationCache.rst", "generated/code/transformer_lens.FactoredMatrix.rst", "generated/code/transformer_lens.HookedEncoder.rst", "generated/code/transformer_lens.HookedEncoderDecoder.rst", "generated/code/transformer_lens.HookedTransformer.rst", "generated/code/transformer_lens.HookedTransformerConfig.rst", "generated/code/transformer_lens.SVDInterpreter.rst", "generated/code/transformer_lens.components.rst", "generated/code/transformer_lens.components.abstract_attention.rst", "generated/code/transformer_lens.components.attention.rst", "generated/code/transformer_lens.components.bert_block.rst", "generated/code/transformer_lens.components.bert_embed.rst", "generated/code/transformer_lens.components.bert_mlm_head.rst", "generated/code/transformer_lens.components.embed.rst", "generated/code/transformer_lens.components.grouped_query_attention.rst", "generated/code/transformer_lens.components.layer_norm.rst", "generated/code/transformer_lens.components.layer_norm_pre.rst", "generated/code/transformer_lens.components.pos_embed.rst", "generated/code/transformer_lens.components.rms_norm.rst", "generated/code/transformer_lens.components.rms_norm_pre.rst", "generated/code/transformer_lens.components.t5_attention.rst", "generated/code/transformer_lens.components.t5_block.rst", "generated/code/transformer_lens.components.token_typed_embed.rst", "generated/code/transformer_lens.components.transformer_block.rst", "generated/code/transformer_lens.components.unembed.rst", "generated/code/transformer_lens.evals.rst", "generated/code/transformer_lens.head_detector.rst", "generated/code/transformer_lens.hook_points.rst", "generated/code/transformer_lens.loading_from_pretrained.rst", "generated/code/transformer_lens.past_key_value_caching.rst", "generated/code/transformer_lens.patching.rst", "generated/code/transformer_lens.pretrained.rst", "generated/code/transformer_lens.pretrained.weight_conversions.rst", "generated/code/transformer_lens.pretrained.weight_conversions.bert.rst", "generated/code/transformer_lens.pretrained.weight_conversions.bloom.rst", "generated/code/transformer_lens.pretrained.weight_conversions.coder.rst", "generated/code/transformer_lens.pretrained.weight_conversions.gemma.rst", "generated/code/transformer_lens.pretrained.weight_conversions.gpt2.rst", "generated/code/transformer_lens.pretrained.weight_conversions.gptj.rst", "generated/code/transformer_lens.pretrained.weight_conversions.llama.rst", "generated/code/transformer_lens.pretrained.weight_conversions.mingpt.rst", "generated/code/transformer_lens.pretrained.weight_conversions.mistral.rst", "generated/code/transformer_lens.pretrained.weight_conversions.mixtral.rst", "generated/code/transformer_lens.pretrained.weight_conversions.nanogpt.rst", "generated/code/transformer_lens.pretrained.weight_conversions.neel_solu_old.rst", "generated/code/transformer_lens.pretrained.weight_conversions.neo.rst", "generated/code/transformer_lens.pretrained.weight_conversions.neox.rst", "generated/code/transformer_lens.pretrained.weight_conversions.opt.rst", "generated/code/transformer_lens.pretrained.weight_conversions.phi.rst", "generated/code/transformer_lens.pretrained.weight_conversions.phi3.rst", "generated/code/transformer_lens.pretrained.weight_conversions.qwen.rst", "generated/code/transformer_lens.pretrained.weight_conversions.qwen2.rst", "generated/code/transformer_lens.pretrained.weight_conversions.t5.rst", "generated/code/transformer_lens.train.rst", "generated/code/transformer_lens.utilities.rst", "generated/code/transformer_lens.utilities.activation_functions.rst", "generated/code/transformer_lens.utilities.addmm.rst", "generated/code/transformer_lens.utilities.attention.rst", "generated/code/transformer_lens.utilities.devices.rst", "generated/code/transformer_lens.utils.rst", "generated/demos/Exploratory_Analysis_Demo.ipynb", "generated/demos/Main_Demo.ipynb", "generated/model_properties_table.md", "index.md"], "titles": ["Citation", "Contributing", "Gallery", "Getting Started", "Getting Started in Mechanistic Interpretability", "TransformerLens 2.0", "Special Cases", "Tutorials", "Transformer Lens API", "transformer_lens", "transformer_lens.ActivationCache", "transformer_lens.FactoredMatrix", "transformer_lens.HookedEncoder", "transformer_lens.HookedEncoderDecoder", "transformer_lens.HookedTransformer", "transformer_lens.HookedTransformerConfig", "transformer_lens.SVDInterpreter", "transformer_lens.components", "transformer_lens.components.abstract_attention", "transformer_lens.components.attention", "transformer_lens.components.bert_block", "transformer_lens.components.bert_embed", "transformer_lens.components.bert_mlm_head", "transformer_lens.components.embed", "transformer_lens.components.grouped_query_attention", "transformer_lens.components.layer_norm", "transformer_lens.components.layer_norm_pre", "transformer_lens.components.pos_embed", "transformer_lens.components.rms_norm", "transformer_lens.components.rms_norm_pre", "transformer_lens.components.t5_attention", "transformer_lens.components.t5_block", "transformer_lens.components.token_typed_embed", "transformer_lens.components.transformer_block", "transformer_lens.components.unembed", "transformer_lens.evals", "transformer_lens.head_detector", "transformer_lens.hook_points", "transformer_lens.loading_from_pretrained", "transformer_lens.past_key_value_caching", "transformer_lens.patching", "transformer_lens.pretrained", "transformer_lens.pretrained.weight_conversions", "transformer_lens.pretrained.weight_conversions.bert", "transformer_lens.pretrained.weight_conversions.bloom", "transformer_lens.pretrained.weight_conversions.coder", "transformer_lens.pretrained.weight_conversions.gemma", "transformer_lens.pretrained.weight_conversions.gpt2", "transformer_lens.pretrained.weight_conversions.gptj", "transformer_lens.pretrained.weight_conversions.llama", "transformer_lens.pretrained.weight_conversions.mingpt", "transformer_lens.pretrained.weight_conversions.mistral", "transformer_lens.pretrained.weight_conversions.mixtral", "transformer_lens.pretrained.weight_conversions.nanogpt", "transformer_lens.pretrained.weight_conversions.neel_solu_old", "transformer_lens.pretrained.weight_conversions.neo", "transformer_lens.pretrained.weight_conversions.neox", "transformer_lens.pretrained.weight_conversions.opt", "transformer_lens.pretrained.weight_conversions.phi", "transformer_lens.pretrained.weight_conversions.phi3", "transformer_lens.pretrained.weight_conversions.qwen", "transformer_lens.pretrained.weight_conversions.qwen2", "transformer_lens.pretrained.weight_conversions.t5", "transformer_lens.train", "transformer_lens.utilities", "transformer_lens.utilities.activation_functions", "transformer_lens.utilities.addmm", "transformer_lens.utilities.attention", "transformer_lens.utilities.devices", "transformer_lens.utils", "Exploratory Analysis Demo", "Transformer Lens Main Demo Notebook", "Model Properties Table", "TransformerLens"], "terms": {"pleas": [0, 1, 3, 4, 5, 71], "cite": 0, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 63, 67, 68, 69, 71, 73], "librari": [0, 2, 3, 4, 5, 7, 10, 35, 69, 70], "misc": 0, "nanda2022transformerlen": 0, "titl": [0, 1, 70, 71], "transformerlen": [0, 2, 3, 4, 7, 10, 14, 18, 38, 69, 70, 71], "author": [0, 70], "neel": [0, 2, 4, 7, 14, 16, 71], "nanda": [0, 2, 4, 14, 71], "joseph": [0, 5], "bloom": [0, 5, 14, 18, 38, 42, 72], "year": 0, "2022": [0, 69], "howpublish": 0, "url": [0, 3], "http": [0, 1, 3, 7, 10, 14, 15, 18, 24, 32, 35, 36, 40, 66, 69, 70, 71], "github": [0, 1, 3, 7, 14, 66], "com": [0, 3, 7, 10, 14, 18, 66, 70, 71], "transformerlensorg": [0, 3, 7], "For": [1, 5, 10, 12, 13, 14, 18, 32, 36, 69, 70], "one": [1, 3, 4, 5, 10, 12, 13, 14, 15, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 36, 37, 38, 39, 40, 69, 70, 71, 73], "click": [1, 71], "your": [1, 3, 5, 7, 14, 15, 36, 37, 70, 71], "develop": [1, 5, 7, 70, 71], "environ": [1, 3, 73], "project": [1, 5, 7, 10, 18, 24, 63, 70], "includ": [1, 4, 5, 7, 10, 12, 13, 14, 15, 35, 36, 37, 70], "It": [1, 3, 5, 7, 10, 12, 13, 14, 15, 18, 35, 37, 40, 69, 70, 71, 73], "can": [1, 2, 3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 24, 35, 36, 37, 38, 39, 40, 69, 70, 71, 73], "us": [1, 2, 3, 5, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 24, 26, 31, 33, 35, 36, 37, 38, 39, 40, 63, 67, 68, 69, 70, 71, 73], "local": [1, 14, 15, 18, 19, 24, 38, 69, 71], "v": [1, 10, 12, 13, 14, 15, 18, 24, 40, 70, 71], "code": [1, 4, 5, 10, 14, 15, 18, 35, 36, 37, 38, 69, 70, 71], "codespac": 1, "poetri": 1, "packag": 1, "manag": [1, 5, 10, 14, 37, 69], "instal": [1, 5, 70, 71], "follow": [1, 3, 5, 10, 14, 69, 71, 73], "also": [1, 5, 7, 10, 12, 13, 14, 15, 16, 31, 36, 37, 38, 68, 69, 70, 71], "virtual": 1, "config": [1, 14, 15, 18, 19, 24, 38, 40, 63], "virtualenv": 1, "true": [1, 10, 12, 13, 14, 15, 30, 31, 35, 36, 37, 38, 40, 68, 69, 70, 71], "dev": 1, "doc": [1, 5, 8, 10, 14, 71], "jupyt": 1, "If": [1, 3, 5, 8, 10, 12, 13, 14, 15, 25, 28, 32, 36, 37, 38, 40, 68, 69, 70, 71], "ad": [1, 7, 13, 14, 15, 18, 37, 70, 71], "featur": [1, 3, 5, 7, 12, 13, 16, 18, 40, 69, 70, 73], "add": [1, 5, 14, 15, 18, 37, 39, 66, 69, 70, 71, 73], "unit": [1, 5], "you": [1, 3, 4, 5, 7, 10, 12, 13, 14, 15, 16, 30, 35, 36, 37, 38, 68, 69, 70, 71, 73], "need": [1, 3, 5, 10, 13, 14, 15, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 69, 70, 71, 73], "model": [1, 2, 3, 6, 7, 10, 12, 13, 14, 15, 16, 18, 19, 21, 24, 35, 36, 37, 38, 40, 45, 63, 68, 69, 70], "ones": [1, 12, 13, 14, 31, 36, 70], "ar": [1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 18, 20, 24, 35, 36, 37, 38, 39, 40, 68, 69, 71, 73], "cach": [1, 10, 13, 14, 15, 31, 33, 36, 37, 39, 40, 69, 70, 73], "action": [1, 2, 70], "so": [1, 5, 7, 10, 11, 12, 13, 14, 15, 16, 35, 37, 38, 39, 40, 69, 70, 71], "quickli": [1, 5, 7, 73], "cd": [1, 70, 71], "These": [1, 70, 71], "gpt2": [1, 14, 15, 16, 18, 19, 24, 35, 38, 42, 70, 71, 72], "attn": [1, 10, 12, 13, 14, 15, 18, 30, 38, 40, 69, 70, 71, 72], "onli": [1, 2, 5, 10, 11, 12, 13, 14, 15, 18, 19, 24, 26, 31, 33, 36, 37, 38, 69, 70, 71, 72], "1l": [1, 38, 70, 71, 72], "2l": [1, 14, 38, 71, 72], "3l": [1, 38, 71, 72], "4l": [1, 38, 71, 72], "tini": [1, 10, 14, 38, 69, 70, 71, 72], "stori": [1, 10, 14, 38, 40, 69, 70, 72], "1m": [1, 10, 14, 38, 69, 72], "note": [1, 3, 5, 10, 11, 12, 13, 14, 15, 18, 24, 35, 37, 38, 66, 69, 70, 71], "i": [1, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 22, 24, 26, 31, 32, 33, 35, 36, 37, 38, 39, 40, 63, 67, 68, 69, 70, 73], "quit": [1, 5], "slow": [1, 71], "we": [1, 2, 5, 8, 10, 13, 14, 15, 36, 39, 40, 68, 69, 70, 71, 73], "have": [1, 3, 5, 10, 12, 13, 14, 18, 19, 24, 36, 40, 69, 70, 71, 73], "cpu": [1, 10, 12, 13, 14, 15, 18, 38, 70, 71], "smaller": [1, 5, 71], "like": [1, 3, 4, 5, 7, 12, 13, 14, 15, 21, 30, 35, 36, 40, 69, 70, 71, 73], "prefer": 1, "possibl": [1, 5, 12, 13, 14, 36, 40, 69, 70, 71, 73], "via": [1, 2, 3, 4, 5, 12, 13, 14, 40, 70], "make": [1, 3, 5, 7, 11, 12, 13, 14, 36, 37, 70, 71, 73], "accept": [1, 3, 5, 12, 13, 14, 37, 70], "notebook": [1, 3, 7, 70, 73], "all": [1, 4, 5, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 40, 65, 68, 69, 70, 73], "suit": 1, "mention": [1, 5, 71], "pycln": 1, "isort": 1, "black": [1, 71], "pull": [1, 5], "request": [1, 5], "check": [1, 3, 5, 7, 14, 16, 18, 35, 36, 37, 69, 70, 71], "file": [1, 5, 69], "line": [1, 5, 70, 71], "length": [1, 10, 12, 13, 14, 15, 18, 25, 26, 27, 28, 29, 69, 70, 71], "set": [1, 2, 5, 10, 12, 13, 14, 15, 18, 35, 36, 37, 40, 63, 69, 70, 71], "100": [1, 35, 70, 71], "pyproject": 1, "toml": 1, "instead": [1, 6, 10, 13, 14, 15, 18, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 70, 71], "default": [1, 6, 10, 13, 14, 15, 16, 18, 19, 24, 27, 31, 33, 35, 36, 37, 38, 40, 69, 70, 71], "88": [1, 71], "sure": [1, 3, 5, 14, 70, 71], "thorough": 1, "ani": [1, 3, 10, 12, 13, 14, 15, 18, 19, 24, 37, 69, 70, 71, 73], "should": [1, 5, 7, 10, 12, 13, 14, 18, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 36, 37, 63, 68, 69, 70, 71], "do": [1, 3, 4, 5, 7, 10, 12, 13, 14, 18, 35, 37, 40, 69, 70, 71, 73], "directli": [1, 5, 12, 13, 15, 69, 70, 71], "automat": [1, 5, 7, 14, 15, 69, 70, 71], "gener": [1, 5, 7, 13, 14, 18, 31, 33, 35, 39, 40, 69, 70], "api": [1, 5, 37, 70], "when": [1, 3, 5, 7, 10, 11, 12, 13, 14, 15, 24, 31, 33, 35, 37, 38, 39, 40, 67, 69, 70, 71], "merg": [1, 5, 14], "main": [1, 3, 5, 6, 7, 10, 37, 70], "thei": [1, 4, 5, 14, 15, 18, 35, 40, 69, 70, 71, 73], "pytest": 1, "doctest": 1, "want": [1, 5, 7, 10, 14, 16, 35, 36, 37, 39, 69, 70, 71], "view": [1, 2], "chang": [1, 2, 3, 5, 14, 15, 37, 40, 69, 70, 71], "hot": [1, 70, 71], "reload": [1, 70, 71], "give": [1, 5, 10, 14, 15, 35, 38, 40, 69, 70, 71, 73], "real": [1, 7, 69, 70, 71, 73], "time": [1, 5, 7, 8, 10, 13, 14, 36, 37, 69, 70, 71], "edit": [1, 7, 14, 40, 70, 71, 73], "googl": [1, 7, 38, 70, 71], "python": [1, 2, 15, 30, 35, 38, 69, 71, 72], "write": [1, 2, 3, 5, 14, 69, 70, 71, 73], "some": [1, 3, 5, 10, 13, 14, 16, 18, 35, 37, 40, 69, 70], "from": [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 24, 32, 35, 36, 38, 40, 69, 70, 71, 73], "restructuredtext": 1, "rest": [1, 5, 10, 14, 15, 35, 38, 69, 71], "In": [1, 2, 5, 6, 10, 12, 13, 14, 35, 37, 70, 71], "case": [1, 2, 5, 10, 13, 14, 15, 35, 36, 37, 38, 40, 69, 70, 71, 72], "A": [1, 2, 4, 5, 10, 11, 12, 13, 14, 18, 24, 31, 32, 33, 35, 37, 39, 40, 69, 70, 71], "descript": 1, "what": [1, 3, 5, 7, 10, 14, 36, 37, 40, 71, 73], "doe": [1, 5, 10, 12, 13, 14, 15, 36, 37, 40, 69, 70, 71], "much": [1, 5, 10, 13, 14, 35, 36, 40, 68, 69, 70, 71], "detail": [1, 5, 10, 14, 15, 18, 24, 33, 37, 38, 40, 69, 70, 71], "necessari": [1, 5, 71], "fulli": [1, 40, 70], "understand": [1, 10, 14, 36, 71], "warn": [1, 10, 14, 36, 37, 69], "user": [1, 2, 5, 14, 15, 38, 69, 71], "e": [1, 5, 10, 12, 13, 14, 15, 18, 36, 37, 38, 69, 70, 71, 72], "g": [1, 5, 10, 12, 13, 14, 36, 37, 38, 69, 71], "common": [1, 5, 7, 10, 14, 15, 18, 69, 70, 71], "pitfal": 1, "exampl": [1, 2, 10, 12, 13, 14, 16, 18, 32, 35, 37, 69, 70], "here": [1, 2, 3, 5, 14, 15, 18, 19, 24, 35, 36, 69, 70, 71], "print": [1, 10, 35, 63, 69, 70, 71], "1": [1, 3, 4, 5, 10, 12, 13, 14, 15, 18, 19, 20, 24, 30, 31, 32, 36, 37, 38, 39, 69, 70, 71, 72], "2": [1, 3, 4, 10, 12, 13, 14, 15, 18, 35, 36, 38, 69, 70, 71, 72, 73], "3": [1, 6, 10, 11, 12, 13, 14, 15, 18, 35, 38, 40, 68, 69, 70, 71, 72, 73], "arg": [1, 24, 37], "param_without_type_signatur": 1, "each": [1, 5, 10, 11, 12, 13, 14, 15, 18, 36, 37, 38, 39, 40, 67, 68, 69, 70, 71], "indent": 1, "onc": [1, 3, 5, 14, 69, 70, 71], "more": [1, 5, 7, 10, 11, 13, 14, 15, 18, 32, 36, 40, 69, 70, 71, 73], "param_2": 1, "anoth": [1, 5, 70, 71, 73], "paramet": [1, 5, 7, 10, 12, 13, 14, 15, 16, 18, 19, 24, 25, 26, 27, 31, 33, 35, 36, 37, 38, 40, 68, 69, 70], "return": [1, 5, 10, 11, 12, 13, 14, 18, 24, 27, 31, 33, 35, 36, 37, 38, 40, 63, 68, 69, 70, 71], "without": [1, 3, 5, 10, 14, 28, 29, 69, 70, 71], "type": [1, 6, 7, 10, 12, 13, 14, 15, 16, 21, 24, 27, 31, 32, 33, 36, 37, 38, 40, 63, 68, 69, 70, 71], "signatur": [1, 12, 13, 14, 71], "rais": [1, 14, 36, 38, 68, 69, 71], "inform": [1, 14, 15, 32, 37, 38, 70, 71], "about": [1, 5, 7, 10, 14, 35, 37, 40, 69, 70, 71, 73], "error": [1, 10, 14, 36, 38, 68, 71], "mai": [1, 5, 10, 12, 13, 14, 15, 18, 69, 70, 71], "part": [1, 5, 10, 14, 15, 26, 40, 70, 71, 73], "codebas": [1, 71], "cross": [1, 10, 14, 30, 31, 69, 70, 71], "referenc": [1, 5], "omit": [1, 36, 71], "full": [1, 4, 5, 10, 12, 14, 15, 18, 69, 71], "path": [1, 4, 69], "same": [1, 3, 5, 10, 11, 13, 14, 15, 18, 36, 37, 39, 40, 67, 68, 69, 70, 71], "mod": 1, "transformer_len": [1, 3, 5, 8, 70, 71], "modul": [1, 5, 8, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40, 69, 71], "const": 1, "loading_from_pretrain": [1, 8, 9, 14, 71], "official_model_nam": [1, 14, 38], "hookedtransform": [1, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 35, 36, 38, 40, 63, 68, 69, 70, 71], "meth": [1, 10], "from_pretrain": [1, 3, 6, 10, 12, 13, 14, 16, 35, 38, 69, 70, 71], "attr": 1, "cfg": [1, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 44, 45, 51, 52, 58, 59, 60, 61, 62, 68, 69, 70, 71], "latex": 1, "re": [1, 3, 4, 7, 10, 14, 15, 36, 70, 71], "place": [1, 5, 7, 12, 13, 14, 69, 70, 71, 73], "string": [1, 12, 13, 14, 15, 35, 36, 37, 38, 68, 69, 70, 71], "backward": [1, 37, 70, 71], "slash": 1, "must": [1, 10, 12, 14, 15, 18, 36, 37, 66, 69, 70, 71], "repeat": [1, 14, 35, 39, 69, 70, 71], "inlin": 1, "displai": [1, 70, 71], "mode": [1, 10, 14, 15, 18, 26, 69, 70, 71], "b": [1, 11, 12, 14, 32, 35, 38, 40, 67, 69, 71, 72], "2ab": 1, "nowrap": 1, "begin": [1, 3, 5, 13, 14, 35, 36, 69, 70, 71], "eqnarrai": 1, "y": [1, 10, 14, 36, 70, 71], "ax": [1, 14, 40, 71], "bx": 1, "c": [1, 38, 69, 71, 72], "f": [1, 70, 71], "x": [1, 5, 10, 14, 18, 25, 26, 28, 29, 36, 37, 38, 66, 69, 70, 71], "2xy": 1, "end": [1, 5, 7, 13, 14, 37, 40, 69, 70, 71], "ital": 1, "text": [1, 7, 10, 13, 14, 15, 18, 31, 33, 35, 37, 38, 39, 69, 70], "bold": 1, "list": [1, 3, 4, 10, 12, 13, 14, 15, 35, 36, 37, 39, 40, 68, 69, 70, 71], "item": [1, 5, 10, 69, 70, 71], "number": [1, 5, 10, 13, 14, 15, 16, 18, 35, 38, 40, 63, 68, 69, 70, 71], "quot": 1, "level": [1, 37, 70, 71, 73], "extern": [1, 70], "link": [1, 14, 35], "domain": 1, "invalid": 1, "research": [2, 3, 4, 5, 7, 70, 71, 73], "done": [2, 4, 5, 6, 10, 14, 15, 18, 37, 70, 71], "involv": [2, 5, 70, 71], "progress": [2, 5, 13, 14, 71], "measur": [2, 35, 36, 40, 69, 70], "grokk": [2, 7], "mechanist": [2, 3, 7, 40, 70, 71], "interpret": [2, 3, 7, 10, 14, 16, 36, 40, 69, 70], "iclr": 2, "spotlight": 2, "2023": 2, "lawrenc": 2, "chan": 2, "tom": [2, 70], "lieberum": 2, "jess": 2, "smith": 2, "jacob": 2, "steinhardt": 2, "find": [2, 5, 7, 10, 11, 14, 40, 70, 71], "neuron": [2, 7, 10, 14, 70, 71], "haystack": 2, "studi": [2, 4, 40, 70, 71], "spars": [2, 5], "probe": 2, "gurne": 2, "matthew": 2, "pauli": 2, "katherin": 2, "harvei": 2, "dmitrii": 2, "troitskii": 2, "dimitri": 2, "bertsima": 2, "toward": [2, 18, 40, 70], "autom": 2, "circuit": [2, 12, 14, 18, 35, 36, 40, 69, 70, 71], "discoveri": 2, "arthur": [2, 71], "conmi": [2, 71], "augustin": 2, "n": [2, 14, 18, 63, 66, 69, 70, 71], "mavor": 2, "parker": 2, "aengu": 2, "lynch": 2, "stefan": 2, "heimersheim": 2, "adri\u00e0": 2, "garriga": 2, "alonso": 2, "actual": [2, 5, 14, 36, 37, 71], "othello": [2, 7, 38, 72], "gpt": [2, 3, 4, 7, 10, 12, 13, 14, 15, 18, 19, 24, 35, 38, 69, 70, 71, 72, 73], "ha": [2, 3, 4, 5, 10, 11, 12, 13, 14, 18, 24, 35, 38, 39, 40, 67, 68, 69, 70, 71], "linear": [2, 7, 12, 13, 14, 18, 38, 67, 70, 71], "emerg": [2, 7], "world": [2, 5, 7, 71, 73], "represent": [2, 7], "docstr": 2, "4": [2, 3, 5, 15, 18, 35, 38, 69, 70, 71, 72], "layer": [2, 6, 10, 12, 13, 14, 15, 16, 18, 19, 21, 24, 25, 26, 36, 37, 38, 39, 40, 67, 68, 69, 71], "attent": [2, 7, 10, 12, 13, 14, 15, 17, 18, 20, 24, 27, 30, 31, 33, 36, 40, 64, 69, 71], "transform": [2, 3, 4, 7, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 38, 39, 40, 66, 69, 70], "jett": 2, "janiak": 2, "toi": [2, 14], "univers": 2, "icml": 2, "bilal": 2, "chughtai": 2, "n2g": 2, "scalabl": 2, "approach": [2, 5, 10, 70, 71], "quantifi": [2, 36], "larg": [2, 5, 7, 15, 18, 38, 69, 71, 72, 73], "languag": [2, 12, 14, 35, 63, 69, 70, 71], "workshop": 2, "rtml": 2, "alex": [2, 71], "foot": [2, 14, 71], "esben": 2, "kran": 2, "ioanni": 2, "konsta": 2, "fazl": 2, "barez": 2, "elicit": 2, "latent": 2, "predict": [2, 7, 10, 12, 14, 22, 35, 36, 69, 70, 71], "tune": [2, 12, 13, 38, 69, 71, 72], "len": [2, 10, 38], "nora": 2, "belros": 2, "zach": 2, "furman": 2, "logan": 2, "danni": 2, "halawi": 2, "igor": 2, "ostrovski": 2, "lev": 2, "mckinnei": 2, "stella": 2, "biderman": 2, "contribut": [2, 5, 10, 14, 70], "being": [2, 5, 10, 12, 13, 14, 15, 36, 37, 40, 69, 70, 71], "induct": [2, 4, 35, 36, 38], "head": [2, 4, 7, 10, 12, 13, 14, 15, 16, 18, 22, 24, 35, 36, 38, 40, 67, 69], "phase": 2, "replic": [2, 4, 14, 16, 35, 70, 71], "partial": [2, 70, 71], "context": [2, 10, 13, 14, 37, 40, 69, 70, 71], "learn": [2, 3, 7, 15, 63, 69, 70, 71, 73], "connor": 2, "kissan": 2, "decis": [2, 3], "script": [2, 7], "train": [2, 7, 8, 9, 10, 12, 13, 14, 15, 35, 38, 69, 70, 73], "which": [2, 3, 5, 6, 7, 10, 12, 13, 14, 15, 35, 36, 37, 38, 39, 40, 69, 70, 71, 73], "intermedi": [2, 10, 14, 37, 71], "activ": [2, 3, 4, 5, 7, 10, 12, 13, 14, 15, 16, 37, 40, 65, 69, 73], "perform": [2, 6, 7, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 35, 37, 69, 70, 71], "attribut": [2, 4, 7, 10, 18, 40, 69, 71], "ablat": [2, 70, 71], "up": [2, 3, 4, 5, 10, 14, 15, 37, 40, 63, 69, 70, 71], "initi": [2, 5, 8, 14, 15, 24, 37, 68, 69, 70, 71], "work": [2, 3, 4, 5, 7, 10, 12, 13, 14, 18, 37, 38, 69, 70, 71, 73], "found": [2, 3, 5, 6, 14, 15, 70, 71], "demo": [3, 5, 16, 38, 72, 73], "how": [3, 5, 7, 10, 13, 14, 36, 40, 63, 68, 70, 71, 73], "basic": [3, 7, 14, 35, 69, 70], "To": [3, 4, 5, 10, 13, 14, 15, 18, 37, 70, 71], "see": [3, 5, 7, 10, 12, 13, 14, 15, 18, 24, 32, 33, 36, 37, 38, 40, 69, 70, 71, 73], "exploratori": [3, 7, 36, 69, 71, 73], "analysi": [3, 7, 10, 14, 36, 69, 71, 73], "practic": [3, 4, 7, 70, 71], "look": [3, 4, 5, 7, 8, 10, 14, 18, 36, 40, 68, 69, 70, 71, 73], "out": [3, 5, 7, 10, 14, 16, 40, 68, 69, 70, 71], "my": [3, 5, 7, 14, 15, 69, 70, 71, 73], "analys": [3, 7, 10, 14, 71], "indirect": [3, 4, 7, 35], "object": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 35, 37, 38, 39, 63, 69], "identif": [3, 4, 7, 35], "record": [3, 7, 71], "myself": [3, 5, 7, 71], "veri": [3, 4, 5, 7, 10, 15, 16, 35, 70, 71, 73], "young": [3, 4, 71], "small": [3, 4, 5, 6, 7, 10, 14, 15, 35, 38, 69, 70, 71, 72, 73], "field": [3, 4, 5, 14, 69, 71, 73], "lot": [3, 4, 5, 7, 10, 11, 39, 40, 69, 70, 71, 73], "open": [3, 4, 5, 14, 35, 73], "problem": [3, 4, 5, 71, 73], "would": [3, 4, 5, 12, 18, 32, 70, 71, 73], "help": [3, 4, 5, 15, 40, 70, 71, 73], "try": [3, 4, 10, 14, 36, 70, 71], "concret": [3, 4, 70, 71], "figur": [3, 40, 70, 71], "where": [3, 5, 6, 10, 11, 12, 13, 14, 15, 18, 33, 36, 37, 38, 40, 63, 69, 70, 71], "skill": [3, 71], "kei": [3, 4, 5, 10, 12, 13, 14, 15, 18, 19, 24, 30, 31, 33, 35, 36, 39, 40, 69, 70, 71], "resourc": [3, 4, 5], "new": [3, 7, 10, 13, 14, 37, 38, 39, 69, 70, 71], "tutori": [3, 4, 5, 70, 71], "scratch": [3, 4, 70], "an": [3, 4, 7, 10, 11, 12, 13, 14, 15, 18, 35, 36, 37, 38, 39, 40, 63, 67, 69, 70, 73], "accompani": [3, 4, 7, 71], "templat": [3, 35], "yourself": [3, 14, 70, 71], "One": [3, 5, 14, 70, 71, 73], "signific": [3, 37, 70, 71], "design": [3, 5, 10, 70, 71, 73], "made": [3, 5, 35, 70, 71], "wa": [3, 5, 6, 10, 12, 13, 14, 15, 35, 40, 70, 71], "singl": [3, 5, 10, 12, 13, 14, 18, 31, 32, 33, 39, 40, 69, 70, 71], "implement": [3, 5, 12, 13, 14, 18, 40, 66, 69, 70, 71], "could": [3, 5, 70, 71], "support": [3, 5, 7, 12, 13, 14, 15, 30, 36, 37, 65, 66, 68, 69, 70, 71], "rang": [3, 4, 5, 14, 16, 36, 40, 69, 70, 71], "subtli": [3, 18], "differ": [3, 5, 6, 10, 12, 13, 14, 15, 18, 35, 36, 37, 40, 68, 69, 70, 71], "style": [3, 5, 10, 12, 13, 14, 15, 19, 36, 70, 71, 73], "upsid": 3, "just": [3, 4, 5, 10, 13, 14, 15, 35, 40, 69, 70, 71], "arbitrari": [3, 14, 70, 71], "name": [3, 5, 10, 14, 15, 35, 36, 37, 38, 40, 63, 69], "But": [3, 10, 14, 40, 69, 70, 71], "downsid": 3, "py": [3, 5, 12, 13, 66], "compon": [3, 8, 9, 10, 12, 13, 14, 15, 67, 69, 70, 71], "difficult": [3, 10], "recommend": [3, 8, 10, 14, 15, 16, 37, 70, 71], "clean": [3, 40, 69, 70, 71], "minim": [3, 5, 71], "intern": [3, 5, 10, 14, 40, 70, 71, 73], "architectur": [3, 12, 13, 70], "significantli": [3, 12, 13, 14, 35, 40, 70, 71], "clearer": 3, "better": [3, 14, 15, 35, 36, 38, 70, 71], "document": [3, 14, 69, 71], "pip": [3, 5, 70, 71], "git": 3, "import": [3, 5, 10, 14, 16, 35, 39, 40, 69, 73], "known": [3, 73], "easytransform": [3, 71, 73], "break": [3, 5, 10, 70, 71], "been": [3, 5, 10, 14, 69, 71], "sinc": [3, 5, 10, 14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 70, 71], "renam": [3, 5], "old": [3, 5, 38, 71], "version": [3, 7, 14, 35, 37, 66, 70, 71], "legaci": [3, 36], "run": [3, 5, 6, 10, 13, 14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 38, 39, 40, 63, 68, 70, 73], "v1": 3, "avail": [3, 5, 7, 10, 14, 15, 36, 38, 68], "requir": [3, 5, 12, 13, 14, 40, 69, 71], "luckili": 3, "provid": [3, 10, 12, 13, 14, 25, 28, 32, 37, 68, 69], "wai": [3, 5, 6, 10, 14, 15, 37, 69, 70, 71], "those": [3, 5, 6, 14, 37, 69, 70], "configur": [3, 5, 15, 63, 68], "environment": 3, "variabl": [3, 12, 13], "simpli": [3, 5, 70], "token": [3, 7, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 27, 31, 32, 33, 35, 36, 38, 40, 69, 70], "hf_token": 3, "agreement": 3, "issu": [3, 5, 14, 70, 71], "attempt": [3, 5, 14], "ue": 3, "befor": [3, 10, 12, 13, 14, 15, 18, 19, 20, 37, 69, 70, 71], "relat": [3, 14, 18, 37, 70, 71], "consol": 3, "output": [3, 5, 7, 10, 12, 13, 14, 15, 18, 36, 37, 40, 70, 71], "point": [3, 5, 10, 12, 13, 14, 15, 16, 33, 37, 69, 70, 73], "As": [3, 14, 15, 69, 70, 71], "23": [3, 70, 71], "24": [3, 14, 69, 70, 71, 72], "current": [3, 5, 10, 12, 13, 14, 15, 18, 19, 24, 36, 68, 70, 71], "co": [3, 69], "mistralai": [3, 38], "mixtral": [3, 5, 6, 38, 42, 72], "8x7b": [3, 38], "v0": [3, 38, 72], "mistral": [3, 15, 18, 35, 38, 42, 72], "7b": [3, 5, 7, 38, 71, 72], "instruct": [3, 38, 71, 72], "mean": [4, 5, 10, 14, 15, 16, 18, 19, 24, 28, 29, 36, 37, 69, 70, 71], "": [4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 35, 36, 37, 38, 40, 68, 69, 71, 73], "both": [4, 5, 10, 14, 15, 18, 36, 37, 39, 66, 70, 71], "low": [4, 11, 14, 15, 18, 69, 71], "hang": [4, 71], "fruit": [4, 71], "bar": [4, 13, 14], "entri": [4, 18, 39, 40, 68, 71], "The": [4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 24, 27, 31, 32, 33, 35, 36, 37, 38, 39, 40, 63, 68, 69, 70, 71, 73], "standard": [4, 6, 14, 15, 70, 71], "answer": [4, 10, 40, 69, 70, 71], "why": [4, 5, 10, 18, 69, 70, 71], "yet": [4, 5, 12, 13, 14, 70, 71, 73], "aren": [4, 38, 71], "t": [4, 5, 10, 11, 12, 13, 14, 15, 16, 18, 35, 38, 69, 70, 71, 73], "enough": [4, 5, 10, 70, 71], "peopl": [4, 5, 71], "guid": [4, 71], "arena": 4, "callum": [4, 71], "mcdougal": [4, 71], "comprehens": [4, 71], "introduct": 4, "mech": [4, 70], "interp": [4, 70], "written": [4, 5, 7, 70], "snippet": 4, "copi": [4, 12, 13, 70], "come": [4, 5, 14, 15, 40, 70, 71], "exercis": [4, 70], "solut": [4, 5, 70, 71], "notabl": [4, 14, 37, 70, 71], "video": [4, 7, 70, 71], "me": [4, 5, 38, 71, 73], "good": [4, 5, 7, 10, 35, 69, 70, 71, 73], "cover": [4, 14, 71], "foundat": [4, 71], "concept": [4, 70, 71], "wild": [4, 10, 70, 71], "techniqu": [4, 7, 14, 40, 70, 71], "direct": [4, 5, 10, 14, 16, 37, 40, 71], "logit": [4, 5, 6, 7, 10, 12, 13, 14, 15, 22, 35, 40, 69, 71], "patch": [4, 5, 7, 8, 9], "paper": [4, 7, 10, 14, 15, 18, 32, 35, 40, 71], "read": [4, 5, 7, 10, 14, 71], "200": [4, 71], "explain": [4, 7, 70, 71], "jargon": 4, "unfamiliar": [4, 70], "term": [4, 10, 14, 70], "go": [4, 5, 7, 40, 71, 73], "across": [4, 5, 10, 12, 13, 14, 16, 38, 40, 68, 70, 71], "youtub": 4, "channel": 4, "content": [4, 35, 70, 71], "walkthrough": [4, 70, 71], "am": 5, "happi": 5, "announc": 5, "now": [5, 7, 14, 15, 68, 70, 71], "releas": 5, "recent": 5, "primari": 5, "motiv": [5, 70], "behind": [5, 18, 70], "jump": [5, 71], "transit": [5, 70], "strictli": [5, 10, 71], "describ": [5, 15, 69, 70], "At": [5, 70], "last": [5, 10, 14, 69, 71], "minut": 5, "did": [5, 10, 68, 69, 70, 71], "remov": [5, 10, 11, 14, 18, 37, 68, 69, 70, 71, 73], "hookedsa": 5, "had": [5, 70, 71], "saelen": 5, "bundl": [5, 71], "major": 5, "hand": [5, 70, 71], "modif": 5, "affect": [5, 14, 15, 40, 70], "bryce": 5, "meyer": 5, "softwar": 5, "engin": [5, 40, 70, 71, 73], "littl": [5, 15, 71, 73], "under": [5, 10, 14, 24], "15": [5, 70, 71], "profession": [5, 7], "experi": [5, 7, 15, 70, 71, 73], "wide": 5, "expertis": 5, "embed": [5, 7, 10, 12, 13, 14, 15, 18, 21, 22, 27, 33, 70, 71], "comput": [5, 10, 11, 14, 20, 21, 22, 23, 25, 26, 28, 29, 30, 32, 34, 36, 37, 39, 40, 69, 70, 71, 73], "coupl": 5, "gotten": [5, 14], "ml": [5, 70, 71, 73], "especi": [5, 14, 70, 71], "ai": [5, 15, 18, 38, 69, 71], "safeti": 5, "nine": 5, "march": 5, "chat": [5, 38, 71, 72], "bit": [5, 15, 70, 71], "he": [5, 71], "ask": 5, "might": [5, 10, 12, 13, 70], "interest": [5, 7, 12, 13, 14, 70, 71], "take": [5, 7, 10, 13, 14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 40, 68, 69, 70, 71, 73], "role": 5, "maintain": 5, "basi": [5, 12, 14], "april": 5, "far": [5, 14, 69, 70, 71], "pretti": [5, 10, 14, 69, 70, 71], "mani": [5, 14, 24, 39, 40, 63, 70, 71], "kind": [5, 10, 70, 71], "address": 5, "everi": [5, 10, 12, 13, 14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 40, 63, 69, 70, 71], "await": 5, "repli": 5, "total": [5, 70, 71], "around": [5, 6, 10, 12, 13, 14, 37, 40, 68, 70, 71], "30": [5, 70, 71, 72], "20": [5, 69, 70, 71, 72], "pr": 5, "were": [5, 10, 14, 15, 35, 69, 70, 71, 73], "limit": [5, 12, 13, 14, 70], "llama": [5, 7, 15, 38, 42, 72], "quantiz": [5, 15], "hookedsaetransform": 5, "brand": 5, "class": [5, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 63, 69], "splice": 5, "autoencod": 5, "two": [5, 6, 11, 12, 32, 36, 38, 40, 69, 70, 71], "goal": [5, 70, 71, 73], "posit": [5, 7, 10, 12, 13, 14, 15, 18, 21, 27, 30, 33, 35, 36, 37, 38, 40, 69, 70, 71], "while": [5, 12, 13, 14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 70, 71], "remain": [5, 10, 14, 37, 71], "power": [5, 71], "who": 5, "push": 5, "second": [5, 14, 35, 68, 70, 71], "base": [5, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 63, 68, 69, 70, 71, 72], "easier": [5, 14, 35, 70, 71, 73], "futur": 5, "llm": 5, "continu": [5, 40, 70, 71], "acceler": [5, 70, 71], "feel": [5, 70, 71, 73], "massiv": [5, 70, 71], "amount": [5, 10, 15, 68, 70], "momentum": [5, 63], "moment": [5, 18, 19, 24, 68], "hope": [5, 71], "carri": 5, "over": [5, 10, 14, 40, 69, 70, 71], "background": [5, 70], "know": [5, 7, 10, 12, 13, 70, 71], "talk": [5, 71], "ensur": [5, 14, 70], "meet": 5, "person": [5, 70], "spoken": 5, "dozen": 5, "commun": 5, "happen": [5, 70, 71], "appoint": 5, "curiou": 5, "hear": 5, "anyon": [5, 35], "tool": [5, 7, 71, 73], "absolut": [5, 6, 12, 13, 14, 15, 18, 27, 36, 69, 70, 71], "beginn": 5, "complet": [5, 10, 18, 69, 70, 71], "expert": [5, 15], "Not": [5, 18, 19, 24, 26], "idea": [5, 14, 18, 40, 70, 71, 73], "evolv": 5, "biggest": [5, 10], "previous": [5, 70], "offici": [5, 38, 71], "instanc": [5, 12, 13, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 36, 37, 70], "compat": [5, 14, 38, 73], "through": [5, 14, 37, 68, 70, 71], "forward": [5, 10, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 39, 71], "start": [5, 10, 13, 14, 15, 18, 40, 69, 70, 71, 73], "todai": [5, 71, 73], "assur": 5, "abl": [5, 70, 71], "upgrad": 5, "worri": 5, "There": [5, 6, 10, 12, 13, 36, 38, 69, 70, 71, 73], "right": [5, 12, 13, 14, 18, 19, 40, 69, 70, 71], "move_model": [5, 10], "activationcach": [5, 8, 9, 12, 13, 14, 36, 40, 69, 70, 71], "function": [5, 10, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34, 36, 37, 38, 40, 63, 65, 66, 68, 69, 71, 73], "cache_al": [5, 37], "hook_point": [5, 8, 9, 14, 71], "keep": [5, 10, 13, 14, 37, 70, 71, 73], "thing": [5, 11, 14, 15, 18, 40, 70, 71, 73], "simpl": [5, 70, 71], "howev": [5, 10, 14, 24, 35, 70, 71], "them": [5, 10, 13, 14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 40, 69, 70, 71], "adapt": [5, 71], "awai": [5, 13, 14, 70], "along": [5, 14, 18, 69, 70, 71], "anyth": [5, 35, 70], "mark": [5, 70, 71], "whenev": [5, 37], "someth": [5, 14, 35, 70], "becom": [5, 70, 71], "promin": 5, "sort": [5, 37, 68, 71], "slip": 5, "scenario": 5, "situat": 5, "handl": [5, 14, 37], "persist": [5, 37], "allow": [5, 14, 36, 40, 69, 70, 71], "reli": 5, "interrupt": 5, "still": [5, 37, 70], "encourag": [5, 18, 69], "everyon": 5, "period": [5, 70, 71], "ey": 5, "don": [5, 10, 12, 13, 14, 15, 16, 35, 69, 70, 71, 73], "imagin": [5, 70], "often": [5, 10, 14, 15, 38, 69, 70, 71], "save": [5, 10, 14, 15, 36, 63, 69, 70, 71], "troubl": [5, 10], "move": [5, 10, 12, 13, 14, 40, 70, 71], "three": [5, 14, 40, 69, 70], "timefram": 5, "plan": 5, "state": [5, 10, 14, 31, 37, 70, 71, 73], "tracker": 5, "categor": 5, "easi": [5, 10, 14, 69, 70, 71, 73], "date": [5, 14], "below": [5, 12, 13, 14, 70], "draft": 5, "our": [5, 33, 70, 71, 73], "priorit": 5, "feedback": [5, 69, 70, 71, 73], "surfac": 5, "other": [5, 10, 12, 14, 18, 19, 24, 36, 37, 38, 40, 70], "improv": [5, 69, 70, 71], "achiev": [5, 10, 71], "diagnos": 5, "variou": [5, 15, 37, 70, 71, 73], "area": 5, "memori": [5, 10, 11, 12, 13, 14, 15, 68, 70, 71], "leak": 5, "occur": [5, 70], "seem": [5, 14, 15, 35, 38, 70, 71], "refer": [5, 10, 14, 19, 37, 70, 71], "properli": [5, 35, 68, 70], "thu": 5, "caus": 5, "garbag": 5, "collect": [5, 71], "correctli": [5, 14], "identifi": [5, 7, 14, 40, 68, 70, 71], "proper": 5, "overal": [5, 15, 70], "deal": [5, 14, 18, 69, 70], "larger": [5, 10, 35, 70, 71], "task": [5, 7, 12, 14, 15, 35, 40, 63, 70], "explor": [5, 69, 71], "abil": [5, 10, 40, 70], "batch": [5, 10, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 63, 66, 67, 69, 70, 71], "process": [5, 13, 14, 15, 38, 70, 71], "alreadi": [5, 10, 14, 69, 70, 71], "share": 5, "well": [5, 7, 14, 16, 37, 40, 69, 70, 71], "togeth": [5, 14, 69, 70, 71], "separ": [5, 12, 13, 14, 15, 37, 67, 69, 70, 71], "volunt": 5, "said": [5, 71], "submiss": 5, "discuss": [5, 70], "think": [5, 14, 35, 69, 70, 71], "few": [5, 10, 12, 13, 68, 70, 71], "week": 5, "confus": [5, 70, 71], "among": 5, "calcul": [5, 10, 11, 12, 14, 15, 18, 24, 36, 67, 68, 69, 70, 71], "match": [5, 10, 14, 36, 66, 70], "huggingfac": [5, 12, 13, 14, 15, 35, 38, 66, 69, 71, 73], "solv": [5, 37, 70, 71, 73], "systemat": 5, "submit": 5, "show": [5, 7, 13, 14, 16, 36, 70, 71, 73], "order": [5, 14, 18, 38, 40, 68, 69, 70], "allevi": 5, "build": [5, 37, 71, 73], "spit": 5, "tabl": [5, 70, 71], "u": [5, 11, 14, 40, 69, 70, 71], "snapshot": 5, "store": [5, 10, 14, 15, 24, 37, 39, 40, 63, 70, 71], "repo": [5, 70], "regener": 5, "cumul": [5, 13, 14, 69], "valu": [5, 7, 10, 11, 12, 13, 14, 15, 18, 24, 30, 31, 33, 36, 38, 39, 40, 69, 70, 71, 73], "creat": [5, 7, 10, 14, 18, 37, 70, 71], "robust": [5, 10, 70], "big": [5, 36, 38, 69, 70, 71], "famili": [5, 15, 71], "hard": [5, 14, 70, 71], "even": [5, 7, 11, 14, 15, 18, 35, 38, 70, 71, 73], "smallest": [5, 71], "thought": [5, 10, 70, 71], "thrown": 5, "topic": [5, 7], "best": [5, 7, 14, 68, 70, 71], "guess": [5, 70], "reason": [5, 18, 19, 24, 70, 71], "untrain": 5, "eg": [5, 10, 14, 35, 40, 69, 70, 71], "randomli": [5, 14, 15, 71], "weight": [5, 7, 12, 13, 14, 15, 18, 24, 26, 63, 66, 69, 70, 71, 73], "verifi": [5, 7, 70, 71], "load": [5, 10, 12, 13, 14, 15, 35, 38, 69, 70, 73], "result": [5, 10, 12, 13, 14, 15, 21, 30, 33, 36, 38, 40, 69, 70, 71, 73], "accur": 5, "sens": [5, 11, 37, 70, 71], "consist": [5, 14, 70, 71], "sampl": [5, 13, 14, 35, 69], "size": [5, 10, 13, 14, 15, 18, 35, 63, 69, 70, 71], "against": [5, 70], "bite": 5, "success": [5, 70], "turn": [5, 10, 14, 69, 70, 71], "effici": [5, 11, 18, 69, 71], "proof": [5, 70], "put": [5, 70, 71], "strong": 5, "opinion": 5, "most": [5, 10, 14, 37, 68, 69, 70, 71, 73], "roundtabl": 5, "wrapper": [5, 10, 12, 13, 14, 40, 68, 71], "plugin": 5, "addit": [5, 7, 12, 13, 14, 70, 71], "outsid": 5, "publish": 5, "themselv": [5, 14], "final": [5, 6, 10, 12, 13, 14, 15, 18, 69, 70, 71], "overhaul": 5, "composit": [5, 14, 70, 71], "util": [5, 8, 9, 10, 11, 14, 36, 37, 38, 63, 70, 71], "isol": [5, 70], "rapidli": 5, "itself": [5, 36, 69, 70], "none": [5, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 33, 35, 36, 37, 38, 40, 63, 68, 69, 70, 71], "pain": [5, 71], "rel": [5, 15, 30, 70], "grow": 5, "exponenti": 5, "whole": [5, 70, 71], "explod": 5, "section": [5, 15, 70, 71], "relev": [5, 14, 15, 18, 40, 69, 70, 71], "skip": [5, 14, 70, 71], "setup": [5, 14, 37, 40], "act": [5, 37, 40, 69, 70, 71], "vast": 5, "due": [5, 6, 14, 71], "potenti": 5, "mismatch": [5, 36], "between": [5, 10, 14, 15, 18, 36, 40, 68, 69, 70, 71, 73], "meant": 5, "repres": [5, 11, 12, 15, 32, 36, 40, 69, 70, 71], "updat": [5, 7, 14, 39, 40, 68, 70, 71], "readi": 5, "sent": 5, "justifi": 5, "bug": [5, 7, 10, 15, 71], "fix": [5, 37, 70, 71], "exist": [5, 14, 36, 38, 68, 70, 71], "split": [5, 14, 18, 38, 69, 70, 71], "group": [5, 14, 15, 18, 24], "call": [5, 10, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34, 37, 38, 69, 70, 71], "again": [5, 70], "piec": [5, 70], "tradition": 5, "everyth": [5, 37, 40, 69, 71], "That": [5, 70], "mock": 5, "spi": 5, "control": [5, 15, 40, 70, 71], "input": [5, 10, 12, 13, 14, 15, 24, 27, 32, 37, 38, 39, 40, 66, 67, 69, 70, 71], "side": [5, 11, 13, 14], "effect": [5, 10, 14, 15, 40, 70, 71], "certain": [5, 15, 40], "logic": 5, "entir": [5, 10, 13, 14, 40, 70], "rule": 5, "incredibli": [5, 71], "cannot": [5, 14, 69, 71], "origin": [5, 15, 16, 18, 70, 71], "pass": [5, 10, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 68, 69, 71], "bunch": [5, 10, 12, 13, 14, 37, 70, 71], "Being": [5, 70], "live": [5, 12, 13, 14, 70, 71], "ci": 5, "report": 5, "great": [5, 7, 71, 73], "get": [5, 7, 10, 12, 13, 14, 15, 16, 18, 35, 36, 37, 40, 68, 70, 71, 73], "review": 5, "meaning": [5, 15, 40], "than": [5, 6, 10, 14, 15, 18, 20, 35, 36, 37, 40, 69, 70, 71], "ever": [5, 69], "substanti": 5, "let": [5, 15, 69, 70, 71, 73], "shift": [5, 40, 71], "favor": 5, "individu": [5, 7, 10, 14, 18, 70], "3000": 5, "18": [5, 69, 70, 71, 72], "distinct": 5, "either": [5, 13, 14, 36, 37, 38, 40, 68, 70, 71], "interdepend": 5, "least": [5, 40, 71], "depend": [5, 10, 14, 71], "its": [5, 10, 14, 18, 37, 70, 71, 73], "own": [5, 7, 70, 71], "realli": [5, 35, 36, 69, 70, 71], "anywher": [5, 40], "els": [5, 14, 15, 18, 38, 69, 70, 71], "mlp": [5, 10, 12, 13, 14, 15, 20, 33, 40, 69, 70, 71], "exactli": [5, 13, 14, 38, 66, 70, 71], "thank": [5, 71], "excit": 5, "standpoint": 5, "perspect": [5, 71], "comparison": [5, 36], "worth": [5, 7, 10, 70, 71], "enabl": [5, 10, 14, 70, 71, 73], "huge": 5, "impact": [5, 10], "bring": 5, "realiti": [5, 70], "semver": 5, "older": [5, 71], "log": [5, 14, 63, 69, 70, 71], "data": [5, 6, 7, 14, 35, 69, 70, 71], "expos": [5, 14, 73], "properti": [5, 11, 12, 13, 14, 18, 24, 69, 70, 71], "minor": [5, 70], "bump": [5, 71], "whatsoev": 5, "With": [5, 18, 71], "fact": [5, 14, 70, 71, 73], "discov": 5, "earlier": [5, 70, 71], "extent": 5, "probabl": [5, 7, 13, 14, 35, 36, 40, 69, 70, 71], "regardless": [5, 69], "stand": 5, "reliabl": 5, "17": [5, 70, 71], "possibli": 5, "easiest": [5, 70], "fresh": 5, "consum": [5, 10, 11], "top": [6, 13, 14, 69, 70, 71], "k": [6, 10, 11, 12, 13, 14, 16, 18, 24, 40, 69, 70, 71], "gate": [6, 14], "hidden": [6, 15, 31, 71], "amplifi": 6, "greatli": [6, 71, 73], "select": [6, 10, 69, 70, 71], "lead": [6, 7, 12, 13, 37, 69, 71], "higher": [6, 13, 14, 70], "normal": [6, 10, 14, 15, 26, 69, 70, 71, 73], "varianc": [6, 70], "test": [6, 7, 14, 35, 36, 69, 70, 71], "half": [6, 11, 12, 13, 14, 18, 35, 71], "precis": [6, 36, 40, 70, 71], "deviat": [6, 15, 71], "compar": [6, 35, 69, 71, 73], "2e": 6, "mitig": 6, "disabl": [6, 14, 36, 37, 70], "preprocess": [6, 12, 13, 70], "option": [6, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 24, 25, 27, 28, 30, 31, 33, 35, 36, 37, 38, 39, 40, 63, 68, 69], "from_pretrained_no_process": [6, 14], "increas": [6, 40, 70, 71], "colab": [7, 70, 71, 73], "blob": [7, 66], "ipynb": 7, "causal": [7, 12, 15, 40, 70, 71], "intervent": [7, 40, 70, 71], "matter": [7, 14, 40, 70, 71], "produc": [7, 13, 14, 40, 70], "incomplet": 7, "gradient": [7, 10, 37, 63, 71], "approxim": [7, 70, 71], "bad": [7, 14], "residu": [7, 10, 12, 13, 14, 15, 18, 31, 33, 34, 40, 71], "stream": [7, 10, 12, 13, 14, 15, 31, 33, 40, 69, 71], "after": [7, 10, 14, 15, 20, 26, 37, 63, 70, 71, 73], "demonstr": [7, 16, 70, 71], "focus": [7, 70, 71], "less": [7, 14, 18, 70, 71], "rigor": [7, 70, 71], "grasp": 7, "steal": 7, "liber": [7, 37], "phenomenon": 7, "memoris": 7, "minimis": 7, "loss": [7, 10, 14, 35, 37, 40, 63, 69, 70, 71], "longer": 7, "generalis": [7, 70, 71], "sharp": [7, 71], "decreas": [7, 18, 69, 70], "modular": [7, 69], "grok": 7, "light": 7, "explan": [7, 40, 70], "ll": [7, 14, 36, 70, 71], "pair": [7, 11, 14, 18, 36, 69, 70, 71], "seri": [7, 10, 71], "detector": [7, 36], "detect": [7, 36, 70, 71], "sever": [7, 10, 14, 69, 70, 71], "custom": [7, 14, 15, 21, 35, 37, 69, 70, 71], "algorithm": [7, 11, 15, 71, 73], "interact": [7, 65, 70, 71], "neuroscop": [7, 71], "hacki": [7, 69], "web": [7, 71], "visualis": [7, 70], "front": 7, "visual": [7, 12, 13, 71], "dynam": [7, 15, 71], "convert": [7, 12, 13, 14, 38, 69, 70, 71], "meta": [7, 14, 38, 69, 70, 71, 72], "until": [7, 10, 13, 14, 37, 70, 71], "multi": [7, 10, 68, 69, 71], "gpu": [7, 10, 11, 12, 13, 14, 68, 70, 71], "access": [7, 10, 15, 37, 69, 70], "No": [7, 71], "previou": [7, 10, 13, 14, 31, 33, 36, 70, 71], "port": 7, "excel": [7, 10, 70, 71, 73], "sequenc": [7, 12, 13, 14, 15, 18, 32, 35, 36, 37, 40, 69, 70, 71], "investig": [7, 10, 14, 36, 70, 71], "svd": [7, 11, 14, 16, 71], "conjectur": 7, "post": [7, 10, 15, 16, 70, 71], "singular": [7, 11, 14, 16, 71], "decomposit": [7, 10, 11, 14, 70, 71], "matric": [7, 11, 12, 13, 14, 16, 18, 19, 24, 66, 70, 71, 73], "surprisingli": 7, "reproduc": [7, 15, 36], "further": [7, 10, 14, 69, 70, 71], "tracr": 7, "cool": 7, "deepmind": 7, "compil": 7, "program": [7, 71, 73], "rasp": 7, "jax": 7, "form": [7, 10, 11, 14, 40, 70, 71], "pytorch": [7, 14, 15, 35, 37, 71], "brows": 8, "first": [8, 10, 14, 15, 35, 38, 40, 68, 69, 70, 71], "submodul": 8, "factoredmatrix": [8, 9, 12, 13, 18, 69, 71], "hookedencod": [8, 9, 68], "hookedencoderdecod": [8, 9, 68], "hookedtransformerconfig": [8, 9, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 44, 45, 51, 52, 58, 59, 60, 61, 62, 68], "svdinterpret": [8, 9], "eval": [8, 9, 71], "head_detector": [8, 9], "past_key_value_cach": [8, 9], "subpackag": 8, "pretrain": [8, 9, 10, 12, 13, 14, 15, 35, 38, 69, 70, 71], "core": [10, 14, 70, 71, 73], "varieti": [10, 71], "helper": [10, 14, 18, 35, 37, 40, 69, 71], "skim": 10, "method": [10, 12, 13, 14, 15, 37, 38, 39, 69, 70, 71], "back": [10, 15, 18, 19, 24, 71], "cache_dict": 10, "dict": [10, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 69], "str": [10, 12, 13, 14, 15, 18, 19, 24, 30, 35, 36, 37, 38, 39, 40, 63, 68, 69, 70, 71], "tensor": [10, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 66, 67, 69, 70, 71, 73], "has_batch_dim": 10, "bool": [10, 12, 13, 14, 15, 30, 31, 35, 36, 37, 38, 39, 40, 63, 69], "run_with_cach": [10, 12, 13, 14, 37, 70, 71], "particular": [10, 16, 36, 70, 71], "behaviour": [10, 14, 70, 71], "modal": 10, "step": [10, 14, 15, 38, 63, 69, 70, 71], "respons": [10, 15, 70], "prompt": [10, 14, 18, 35, 40, 69, 70, 71], "chicken": 10, "road": [10, 69], "specif": [10, 12, 13, 14, 18, 36, 38, 40, 68, 70, 71], "sublay": 10, "commonli": 10, "fall": 10, "categori": [10, 70], "dla": 10, "_logit": 10, "residual_stream": 10, "label": [10, 14, 15, 18, 19, 24, 38, 70, 71], "decompose_resid": [10, 70], "return_label": [10, 70], "0": [10, 12, 13, 14, 15, 16, 18, 27, 32, 36, 38, 63, 68, 69, 70, 71, 72], "emb": [10, 14, 17, 21, 27, 32, 69, 71], "pos_emb": [10, 15, 17, 71], "0_attn_out": 10, "proceed": 10, "space": [10, 12, 14, 69, 70, 71], "logit_attr": 10, "shape": [10, 12, 13, 14, 18, 19, 24, 31, 32, 33, 40, 69, 70, 71], "torch": [10, 12, 13, 14, 15, 18, 24, 27, 31, 33, 37, 38, 40, 66, 68, 69, 70, 71], "10": [10, 13, 14, 16, 69, 70, 71, 72], "7": [10, 35, 70, 71, 72], "most_important_component_idx": 10, "argmax": [10, 70], "3_attn_out": 10, "dig": [10, 70, 71, 73], "granular": 10, "get_full_resid_decomposit": 10, "stack": [10, 12, 13, 14, 40, 69, 70, 71], "equal": [10, 15, 71], "struggl": 10, "construct": [10, 12, 13], "joke": 10, "trivial": 10, "accumulated_resid": [10, 70], "footgun": [10, 37], "sourc": [10, 14, 15, 18, 35, 40, 73], "track": [10, 70], "index": [10, 12, 13, 14, 15, 16, 18, 19, 24, 38, 40, 68, 69, 70, 71], "dimens": [10, 14, 15, 18, 24, 25, 28, 37, 40, 66, 67, 69, 70, 71], "vector": [10, 11, 14, 16, 18, 40, 70, 71], "q": [10, 12, 13, 14, 18, 24, 40], "z": [10, 14, 24, 36, 40, 70, 71], "po": [10, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 67, 69, 70, 71], "head_index": [10, 14, 16, 18, 19, 24, 25, 26, 30, 31, 40, 67, 70, 71], "d_head": [10, 12, 13, 14, 15, 18, 19, 24, 38, 39, 67, 69, 70, 71, 72], "pattern": [10, 12, 13, 14, 18, 19, 24, 36, 40, 71], "softmax": [10, 14, 15, 18, 19, 24, 26, 69, 71], "attn_scor": [10, 15, 18, 19], "pre": [10, 14, 15, 18, 19, 24, 26, 29, 36, 69], "query_po": [10, 18, 19, 24, 70], "key_po": [10, 18, 19, 24, 70], "d_model": [10, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 33, 34, 38, 67, 69, 70, 71, 72], "mid": [10, 70], "solu_ln": [10, 15], "layernorm": [10, 12, 13, 14, 15, 20, 25, 26, 28, 69, 70], "d_mlp": [10, 12, 13, 14, 15, 26, 38, 69, 71, 72], "resid_pr": [10, 15, 20, 31, 33, 40, 70, 71], "resid_mid": [10, 40], "resid_post": [10, 15, 70], "attn_out": [10, 14, 15, 40, 70], "mlp_out": [10, 14, 15, 40, 70], "ln": [10, 14, 15, 70, 71], "lnpre": [10, 15], "scale": [10, 14, 15, 18, 19, 24, 69, 70, 71], "sometim": [10, 35, 70], "miss": [10, 70], "becaus": [10, 11, 12, 13, 14, 15, 18, 35, 69, 70, 71, 73], "appli": [10, 14, 15, 18, 20, 33, 37, 40, 69, 70, 71], "remove_batch_dim": [10, 37, 69, 71], "batch_siz": [10, 12, 13, 14, 32, 35, 37, 39, 63, 70, 71], "annot": [10, 71], "layers_cov": 10, "queri": [10, 12, 13, 14, 15, 18, 19, 24, 30, 36, 40, 71], "batch_and_pos_dim": 10, "ve": [10, 14, 18, 35, 37, 70, 73], "slice": [10, 37, 69, 70], "dictionari": [10, 12, 13, 14, 15, 36, 37, 38, 69, 71], "whether": [10, 12, 13, 14, 15, 18, 32, 35, 37, 38, 40, 63, 69, 70, 71], "int": [10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 63, 68, 69, 70, 71], "incl_mid": [10, 70], "fals": [10, 12, 13, 14, 15, 30, 35, 36, 37, 38, 39, 40, 63, 69, 70, 71], "apply_ln": [10, 70], "pos_slic": [10, 37, 70], "union": [10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 38, 39, 40, 68, 69, 70], "tupl": [10, 11, 12, 13, 14, 18, 24, 36, 37, 40, 68, 69, 71], "ndarrai": [10, 14, 37, 69], "mlp_input": [10, 14], "float": [10, 11, 12, 13, 14, 15, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 38, 39, 40, 63, 66, 67, 69, 70, 71], "accumul": [10, 14, 70], "sub": [10, 71], "www": 10, "lesswrong": 10, "ackrb8wdpdan6v6ru": 10, "believ": [10, 35, 70], "vocabulari": [10, 15, 70, 71], "rememb": 10, "norm": [10, 11, 14, 15, 21, 25, 26, 28, 29, 38, 63, 70, 71], "decod": [10, 13, 15, 31], "therefor": [10, 14, 69], "multipli": [10, 14, 18, 19, 36, 66, 70, 71], "unembed": [10, 12, 13, 14, 70, 71], "matrix": [10, 11, 12, 13, 14, 15, 16, 18, 24, 36, 69, 70], "w_u": [10, 12, 13, 14, 70, 71], "broken": [10, 37, 69, 70, 71], "down": [10, 14, 18, 19, 24, 70, 71], "einop": [10, 70, 71], "einsum": [10, 70, 71], "panda": [10, 40], "pd": [10, 40], "devic": [10, 12, 13, 14, 15, 16, 18, 30, 35, 37, 38, 39, 63, 64, 70, 71], "answer_token": [10, 70], "to_single_token": [10, 14, 70, 71], "2975": 10, "accum_resid": 10, "last_token_accum": 10, "9": [10, 69, 70, 71, 72], "64": [10, 38, 69, 71, 72], "50257": [10, 38, 71, 72], "layers_unembed": 10, "d_vocab": [10, 12, 13, 14, 15, 16, 38, 40, 69, 71, 72], "rank": [10, 11, 14, 18, 69, 70, 71], "correct": [10, 40, 68, 69, 70, 71], "sorted_indic": 10, "argsort": 10, "dim": [10, 14, 69, 70, 71], "descend": [10, 71], "rank_answ": 10, "nonzero": 10, "as_tupl": 10, "0_pre": 10, "4442": 10, "1_pre": [10, 70], "382": 10, "2_pre": 10, "982": 10, "3_pre": 10, "1160": 10, "4_pre": 10, "408": 10, "5_pre": 10, "145": 10, "6_pre": 10, "78": 10, "7_pre": 10, "387": 10, "final_post": 10, "6": [10, 14, 38, 69, 70, 71, 72], "dtype": [10, 12, 13, 14, 15, 18, 38, 68, 70, 71], "int64": [10, 69], "exclud": [10, 36], "n_layer": [10, 12, 13, 14, 15, 38, 40, 68, 70, 71, 72], "immedi": [10, 19, 69, 70, 71], "indic": [10, 12, 13, 32, 37, 40, 68, 69, 70, 71], "taken": [10, 13, 14, 71], "l": [10, 12, 13, 14, 70, 71], "noth": [10, 12, 13, 14, 37, 69, 70, 71], "essenti": [10, 14, 70, 71, 73], "rather": [10, 14, 15, 20, 40, 69, 70, 71], "graph": [10, 70, 71], "apply_ln_to_stack": [10, 14, 69, 70], "residual_stack": [10, 70], "num_compon": 10, "batch_slic": 10, "batch_and_pos_dims_out": 10, "treat": [10, 14, 15, 70, 71], "factor": [10, 11, 14, 15, 68, 70], "simul": [10, 14, 70, 71], "global": [10, 14, 18, 19, 24, 30, 37, 38, 69, 70, 71], "element": [10, 14, 18, 36, 40, 69, 71], "rmsnorm": [10, 15, 28], "unchang": [10, 12, 13, 14, 69, 70, 71], "whose": [10, 12, 13, 14, 35, 69, 70], "trail": [10, 11, 69], "assum": [10, 12, 13, 14, 15, 25, 28, 32, 37, 40, 63, 69, 70], "hook_scal": [10, 69, 70, 71], "unemb": [10, 14, 15, 17, 70, 71], "map": [10, 12, 13, 14, 15, 18, 36, 37, 70, 71], "ie": [10, 12, 13, 14, 15, 18, 38, 40, 69, 70, 71], "ln2": [10, 33, 69, 71], "ln1": [10, 15, 33, 69, 71], "ln_final": [10, 14, 70, 71], "apply_slice_to_batch_dim": 10, "compute_head_result": 10, "sum": [10, 11, 14, 15, 21, 36, 69, 70, 71], "plu": 10, "b_o": [10, 12, 13, 14, 71], "intend": [10, 15, 69], "use_attn_result": [10, 14, 15], "forget": 10, "liter": [10, 12, 13, 14, 16, 36, 37, 40], "incl_emb": 10, "decompos": 10, "incl": 10, "expand_neuron": 10, "bias": [10, 12, 13, 14, 15, 63, 70], "expand": [10, 14, 24], "get_neuron_result": 10, "neuron_slic": 10, "num_neuron": 10, "subset": [10, 15, 35, 70, 71], "specifi": [10, 12, 13, 14, 15, 24, 35, 36, 37, 68, 69, 71], "expens": [10, 11, 71], "cheap": 10, "hook_emb": [10, 69, 71], "hook_pos_emb": [10, 71], "block": [10, 14, 15, 18, 19, 20, 24, 31, 33, 40, 69, 70, 71], "hook_resid_pr": [10, 71], "incorrect_token": [10, 70], "typic": [10, 12, 14, 32, 36, 70, 71], "revers": [10, 11, 40, 69, 70, 71, 73], "dot": [10, 14, 18, 19, 69], "product": [10, 11, 12, 13, 18, 19, 71], "incorrect": [10, 14, 40, 70, 71], "arxiv": [10, 14, 15, 18, 24, 32, 35], "org": [10, 14, 15, 18, 24, 32, 35, 71, 73], "ab": [10, 11, 14, 24, 36, 70, 71], "2211": [10, 35], "00593": [10, 35], "john": [10, 70, 71], "mari": [10, 70, 71], "went": [10, 70, 71], "shop": [10, 70, 71], "gave": [10, 35, 70, 71], "bag": [10, 70], "choos": [10, 70, 71], "final_ln": 10, "residual_stack_item": 10, "dure": [10, 15, 24, 37, 39, 71, 73], "stack_activ": 10, "activation_nam": [10, 40, 70], "sublayer_typ": 10, "flexibl": 10, "given": [10, 11, 12, 13, 14, 16, 36, 37, 38, 40, 68, 69, 70, 71], "get_act_nam": [10, 69, 70, 71], "infer": [10, 13, 14, 26, 40, 70, 71], "incl_remaind": 10, "stack_head_result": [10, 70], "axi": [10, 18, 40, 69, 70, 71], "n_head": [10, 12, 13, 14, 15, 18, 24, 38, 39, 40, 69, 70, 71, 72], "notat": [10, 70, 73], "l0h0": 10, "stack_neuron_result": 10, "l0n0": 10, "super": [10, 14, 71], "short": [10, 69, 70, 71, 73], "mostli": [10, 13, 70, 71], "finish": [10, 13, 14, 69, 70, 71], "oper": [10, 68, 70, 71], "slower": 10, "unless": [10, 14, 15, 35, 71], "deprec": [10, 68], "toggle_autodiff": 10, "toggl": [10, 14], "autodiff": [10, 71], "set_grad_en": [10, 70, 71], "danger": 10, "off": [10, 14, 35, 69, 70, 71], "realis": [10, 30, 70], "downstream": 10, "delet": [10, 69, 70], "stick": [10, 70], "mess": [10, 14, 69, 71], "inference_mod": 10, "decor": 10, "similar": [10, 12, 13, 14, 20, 24, 36, 70, 71], "requires_grad": 10, "eigenvalu": 11, "ldim": [11, 71], "mdim": [11, 71], "rdim": [11, 71], "leading_dim": [11, 69], "ba": 11, "vh": [11, 14], "collapse_l": 11, "collaps": [11, 70, 71], "left": [11, 14, 18, 69, 70, 71, 73], "orthogon": [11, 14], "self": [11, 12, 13, 14, 18, 69, 71], "collapse_r": 11, "analog": [11, 70, 71], "apart": [11, 69, 70, 71], "zero": [11, 14, 18, 36, 69, 70, 71], "bav": 11, "kv": 11, "abav": 11, "kav": 11, "av": 11, "eigenvector": [11, 71], "get_corn": [11, 69, 70], "make_even": 11, "sqrt": [11, 14, 15, 69], "diag": 11, "equival": [11, 14, 18, 70, 71], "factoris": [11, 14, 18, 71], "row": [11, 14, 40], "col": 11, "ndim": 11, "frobeniu": [11, 71], "squar": [11, 28, 29, 69, 71], "m": [11, 18, 66, 69, 70, 71], "st": 11, "transpos": [11, 69], "obviou": [11, 14, 70], "unsqueez": [11, 69], "hook": [12, 13, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 32, 33, 34, 37, 70], "encod": [12, 13, 18, 31, 69, 71], "contain": [12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 69, 70, 71], "bert": [12, 20, 21, 22, 32, 38, 42, 71, 72], "move_to_devic": [12, 13, 14], "kwarg": [12, 13, 14, 38, 69, 70, 71], "hookedrootmodul": [12, 13, 14, 37, 71], "hookpoint": [12, 13, 14, 37, 70, 71], "inherit": [12, 13, 71], "mvp": 12, "mask": [12, 13, 14, 18, 22, 27, 31, 33, 69, 70], "mlm": [12, 22], "next": [12, 14, 69, 70, 71], "sentenc": [12, 13, 14, 22, 32, 36, 70, 71], "nsp": 12, "dropout": [12, 13], "inconsist": [12, 13, 16], "fine": [12, 13, 71], "fold": [12, 13, 14, 18, 26, 38, 70], "ov": [12, 13, 14, 16, 18, 70, 71], "o": [12, 13, 66, 71], "qk": [12, 13, 14, 18, 70], "w_e": [12, 13, 14, 71], "conveni": [12, 13, 14, 15, 37, 69, 71], "w_e_po": [12, 14], "n_ctx": [12, 14, 15, 18, 38, 71, 72], "concaten": [12, 14, 69, 70, 71], "w_po": [12, 13, 14, 71], "overcomplet": [12, 14], "w_k": [12, 13, 14, 15, 18, 24, 71], "w_o": [12, 13, 14, 18, 19, 70, 71], "w_q": [12, 13, 14, 18, 24, 71], "w_v": [12, 13, 14, 18, 24, 71], "w_in": [12, 13, 14, 16, 71], "w_out": [12, 13, 14, 16, 71], "all_head_label": [12, 13, 14], "format": [12, 13, 14, 37, 70, 71], "h": [12, 13, 14, 70, 71], "b_k": [12, 13, 14, 18, 24, 71], "b_q": [12, 13, 14, 71], "b_u": [12, 13, 14, 70, 71], "bia": [12, 13, 14, 15, 18, 28, 29, 30, 66, 70, 71], "b_v": [12, 13, 14, 18, 24, 71], "b_in": [12, 13, 14, 71], "b_out": [12, 13, 14, 71], "buffer": [12, 13, 14], "modifi": [12, 13, 14], "cuda": [12, 13, 14, 15, 35, 38, 68], "associ": [12, 13, 14, 37], "optim": [12, 13, 14, 63, 70], "return_typ": [12, 13, 14, 37, 70, 71], "token_type_id": [12, 21, 32], "one_zero_attention_mask": [12, 13], "binari": [12, 13, 32], "id": [12, 13, 14, 15, 32], "belong": [12, 32], "cl": [12, 32, 71], "sep": [12, 32], "sequence_length": [12, 13, 32, 36, 69], "attend": [12, 13, 15, 18, 19, 24, 69, 70, 71], "ignor": [12, 13, 14, 15, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 69, 71], "primarili": [12, 13], "pad": [12, 13, 14, 18, 27, 31, 33, 69, 70, 71], "shorter": [12, 13, 14, 71], "classmethod": [12, 13, 14, 15, 39, 69], "model_nam": [12, 13, 14, 15, 38, 71], "checkpoint_index": [12, 13, 14, 15, 38, 71], "checkpoint_valu": [12, 13, 14, 15, 38, 71], "hf_model": [12, 13, 14], "float32": [12, 13, 14, 15, 18, 38, 70], "from_pretrained_kwarg": [12, 13, 14], "bertformaskedlm": [12, 13], "unlik": [12, 13, 14, 40, 71], "mp": [12, 13, 14], "model_arg": [12, 13, 14, 37], "return_cache_object": [12, 13, 14], "otherwis": [12, 13, 14, 35, 36, 69], "device_or_dtyp": [12, 13, 14, 68], "print_detail": [12, 13, 14, 68, 69], "cast": [12, 13, 14], "non_block": [12, 13, 14], "memory_format": [12, 13, 14], "channels_last": [12, 13, 14], "Its": [12, 13, 14], "complex": [12, 13, 14, 15, 70, 71], "integr": [12, 13, 14, 38], "tri": [12, 13, 14, 70, 71, 73], "asynchron": [12, 13, 14], "respect": [12, 13, 14, 37, 69, 71], "host": [12, 13, 14, 38], "pin": [12, 13, 14], "desir": [12, 13, 14], "4d": [12, 13, 14], "keyword": [12, 13, 14, 37, 71], "argument": [12, 13, 14, 15, 37, 38, 68, 69, 71], "xdoctest": [12, 13, 14], "ignore_w": [12, 13, 14], "non": [12, 13, 14, 15, 18, 35, 69, 70, 71], "determinist": [12, 13, 14, 69, 70], "nn": [12, 13, 14, 37, 71], "1913": [12, 13, 14], "3420": [12, 13, 14], "5113": [12, 13, 14], "2325": [12, 13, 14], "doubl": [12, 13, 14], "in_featur": [12, 13, 14], "out_featur": [12, 13, 14], "float64": [12, 13, 14], "env": [12, 13, 14], "torch_doctest_cuda1": [12, 13, 14], "gpu1": [12, 13, 14], "1914": [12, 13, 14], "5112": [12, 13, 14], "2324": [12, 13, 14], "float16": [12, 13, 14], "cdoubl": [12, 13, 14], "3741": [12, 13, 14], "j": [12, 13, 14, 15, 18, 38, 70, 71, 72], "2382": [12, 13, 14], "5593": [12, 13, 14], "4443": [12, 13, 14], "complex128": [12, 13, 14], "6122": [12, 13, 14], "1150": [12, 13, 14], "encoderdecod": [13, 15], "t5": [13, 15, 30, 31, 38, 42, 72], "decoder_input": 13, "decoder_po": 13, "bo": [13, 14, 15, 36, 38, 69, 70, 71], "vocab_s": [13, 69], "max_new_token": [13, 14, 71], "stop_at_eo": [13, 14], "eos_token_id": [13, 14, 69], "do_sampl": [13, 14], "top_k": [13, 14, 69, 70, 71], "top_p": [13, 14, 69], "temperatur": [13, 14, 69, 71], "freq_penalti": [13, 14, 69], "verbos": [13, 14], "new_token": [13, 39], "eos_token": [13, 14], "reach": [13, 14, 71], "adjust": [13, 15, 70, 71], "prepend_bo": [13, 14, 15, 35, 38, 69, 70], "avoid": [13, 14, 15, 39, 69, 70, 71], "fiddl": [13, 14], "rag": [13, 14], "eot": [13, 14], "throw": [13, 14], "enter": [13, 70, 71, 73], "messi": [13, 14, 71], "maximum": [13, 14, 15, 18, 63, 71], "stop": [13, 14, 71], "stable_lm": [13, 14], "distribut": [13, 14, 68, 69, 70, 71], "greedi": [13, 14, 69], "search": [13, 14, 36, 70, 71], "max": [13, 14, 70], "mass": [13, 14], "random": [13, 14, 15, 35, 63, 70, 71], "temp": [13, 14, 69], "inf": [13, 14], "uniform": [13, 14, 69], "frequenc": [13, 14, 15, 69, 70], "penalti": [13, 14, 69], "penalis": [13, 14], "whatev": [13, 14, 70], "tqdm": [13, 14, 71], "to_token": [13, 14, 69, 70, 71], "truncat": [13, 14, 35, 69, 71], "too": [13, 14, 40, 70], "long": [13, 14, 71], "window": [13, 14, 15, 69], "fairli": [14, 70, 71], "extract": [14, 71], "harder": [14, 40, 70], "aim": [14, 70, 73], "simplifi": [14, 70, 71], "attach": [14, 71], "within": [14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 36, 37, 40, 69, 70, 71], "inspect": [14, 70], "alter": 14, "facilit": 14, "deeper": 14, "pretrainedtokenizerbas": 14, "default_padding_sid": 14, "50": [14, 63, 71], "initialis": [14, 15], "although": [14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37], "instanti": [14, 15, 71], "__init__": [14, 18, 19, 24, 25, 26, 28, 29, 37, 69, 71], "test_prompt": [14, 69, 70, 71], "w_gate": 14, "tokenizer_nam": [14, 15], "explicitli": [14, 15, 18, 35, 38, 40, 71], "n_devic": [14, 15, 38, 68], "greater": [14, 36], "multipl": [14, 36, 68, 69, 71], "accumulated_bia": 14, "include_mlp_bias": 14, "all_composition_scor": [14, 69], "score": [14, 15, 18, 19, 24, 36, 40, 70], "l1": 14, "h1": 14, "l2": 14, "h2": [14, 70], "upper": [14, 18], "triangular": [14, 36, 69, 71], "third": [14, 71], "pub": [14, 69], "2021": 14, "framework": [14, 18, 70, 71], "html": [14, 69, 70], "20abov": 14, "20diagram": 14, "20show": 14, "20q": 14, "2d": [14, 66, 69], "2c": 14, "20k": [14, 69], "20and": 14, "20v": 14, "2dcomposit": 14, "metric": [14, 36, 40, 70, 71], "center_unemb": [14, 70], "state_dict": 14, "center": [14, 15, 26, 28, 29, 70, 71], "subtract": [14, 36, 70], "translat": [14, 70, 71], "invari": 14, "prob": [14, 69, 70, 71], "slightli": [14, 69, 70], "misl": 14, "center_writing_weight": [14, 70, 71], "fold_layer_norm": [14, 38], "check_hooks_to_add": [14, 37], "hook_point_nam": [14, 37], "dir": [14, 37], "fwd": [14, 37], "is_perman": [14, 37], "prepend": [14, 15, 35, 37, 38, 69, 71], "overrid": [14, 15, 37, 38, 69], "fold_bias": 14, "center_weight": 14, "rm": [14, 15, 28, 29], "neighbour": 14, "further_com": [14, 15], "md": [14, 15], "fold_value_bias": 14, "alwai": [14, 15, 40, 70, 71], "constant": [14, 15, 18, 70, 71], "doesn": [14, 35, 69, 70, 71], "formal": 14, "b_o_new": 14, "b_o_origin": 14, "sum_head": 14, "b_v_head": 14, "w_o_head": 14, "loss_per_token": 14, "use_default_valu": 14, "padding_sid": [14, 69, 70], "start_at_lay": 14, "shortformer_pos_emb": [14, 18, 33], "attention_mask": [14, 18, 27, 31, 33, 39, 69], "stop_at_lay": [14, 71], "past_kv_cach": [14, 27], "hookedtransformerkeyvaluecach": [14, 31, 33, 39], "flag": [14, 15, 35, 37, 40, 69, 70, 71], "entropi": [14, 69, 70, 71], "per": [14, 40, 70, 71], "averag": [14, 35, 70, 71], "scalar": [14, 18, 37, 71], "default_prepend_bo": [14, 15, 35, 38, 69, 71], "impli": 14, "usag": [14, 70], "accordingli": [14, 15, 18, 38, 70, 71], "lose": [14, 15, 38], "empir": [14, 15, 38, 40, 71], "inclus": 14, "neg": [14, 69, 70, 71], "shortform": [14, 15, 18, 33, 38], "positional_embedding_typ": [14, 15, 18], "exclus": [14, 69], "etc": [14, 15, 40, 70, 71, 73], "frozen": [14, 39], "pai": [14, 18, 70], "okai": 14, "twice": [14, 35, 70, 71], "accident": [14, 37], "fold_ln": [14, 38, 70, 71], "refactor_factored_attn_matric": [14, 70], "automodelforcausallm": 14, "first_n_lay": [14, 38], "autoregress": [14, 63], "neo": [14, 18, 19, 24, 38, 42, 71, 72], "gptj": [14, 38, 42], "opt": [14, 38, 42, 71, 72], "solu": [14, 15, 38, 69, 71, 72], "checkpoint": [14, 15, 38, 63], "neelnanda": [14, 38], "stanford": [14, 15, 18, 19, 24, 38, 71, 72], "crfm": [14, 38, 71], "load_and_process_state_dict": 14, "alia": [14, 37, 38, 68, 69, 71], "subsequ": [14, 38, 70, 71], "regular": [14, 18, 24], "batchnorm": [14, 70, 71], "mathemat": [14, 18, 70, 71], "w_": 14, "b_": 14, "w": [14, 67], "layernormpr": [14, 26, 29], "eff": 14, "ext": 14, "wise": [14, 36], "computation": [14, 71], "wish": 14, "defin": [14, 18, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 69, 70, 71], "x_1": [14, 71], "x_0": [14, 71], "x_2": [14, 71], "frac": [14, 71], "x_3": 14, "cdot": 14, "x_4": 14, "preced": [14, 69, 70, 71], "never": [14, 71], "w_write": 14, "keepdim": 14, "fed": [14, 36], "1000": [14, 35, 69, 71], "recreat": 14, "onto": [14, 38, 70], "By": [14, 35, 37, 38, 40, 69, 70, 71], "mix": [14, 69, 70, 71], "linearli": 14, "technic": [14, 70, 71], "deriv": [14, 71], "broadcast_b_v": 14, "broadcast": 14, "And": [14, 40, 70, 71], "destination_posit": [14, 71], "source_posit": [14, 71], "source_": 14, "destin": [14, 15, 40, 71], "behavior": [14, 15, 38, 70], "resolut": [14, 38], "cfg_dict": [14, 38], "cache_dir": [14, 69], "torch_dtyp": 14, "bfloat16": 14, "boolean": [14, 37, 40, 69, 70, 71], "hidden_s": 14, "use_past_kv_cach": 14, "pos_plus_new_token": 14, "precomput": [14, 30], "speed": [14, 70], "applic": [14, 15, 69], "get_pos_offset": 14, "get_residu": 14, "pos_offset": 14, "return_shortformer_pos_emb": 14, "get_token_posit": [14, 70, 71], "single_token": [14, 71], "present": 14, "gotcha": [14, 16, 70], "Be": 14, "care": [14, 20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 70, 71], "weird": [14, 15, 70, 71], "carefulli": [14, 70], "correspond": [14, 24, 36, 40, 69, 70, 71], "dummi": [14, 37, 71], "init_weight": [14, 15], "empti": [14, 37], "bulk": 14, "seed": [14, 15, 63, 71], "determin": [14, 18, 40, 68, 69, 70, 71], "NOT": [14, 37, 69, 71], "scheme": 14, "tell": [14, 35, 70, 71], "round": [14, 35, 70, 71], "18182": 14, "fan_in": [14, 69], "tha": 14, "kaim": [14, 69], "despit": [14, 71], "xavier": [14, 69], "fan_out": 14, "transformerencod": 14, "exact": 14, "72253": 14, "mup": [14, 15], "haven": 14, "2203": 14, "03466": 14, "input_to_emb": 14, "special": [14, 71], "redwood": [14, 70, 71], "load_sample_training_dataset": 14, "dataset": [14, 35, 63, 69, 71], "10k": [14, 35, 69], "get_dataset": [14, 69], "appropri": [14, 71], "info": [14, 15, 40, 69, 71], "download": [14, 69, 71], "locat": [14, 40, 70, 71], "pt": 14, "openwebtext": [14, 35, 69], "karma": [14, 35], "reddit": [14, 35], "pile": [14, 35, 38, 69, 71, 72], "imperfectli": 14, "suppli": 14, "valid": [14, 35, 70], "loss_fn": [14, 71], "per_token": [14, 69, 71], "lm_cross_entropy_loss": [14, 69], "move_model_modules_to_devic": 14, "process_weights_": 14, "cleaner": 14, "experiment": 14, "argu": [14, 71], "somewhat": [14, 70, 71], "w_qk": [14, 18, 71], "w_ov": [14, 18, 71], "hopefulli": [14, 73], "column": [14, 40, 69], "rotat": [14, 15, 18, 71], "nth": 14, "formula": 14, "r": 14, "refactor": 14, "diagon": [14, 70, 71], "asymmetri": 14, "fiddli": 14, "preserv": [14, 70, 71], "bilinear": [14, 71], "dimension": [14, 15], "coordin": 14, "sample_datapoint": 14, "implicitli": [14, 40, 71], "hasn": 14, "manual": [14, 69, 71], "replac": [14, 15, 40, 70, 71, 73], "choic": [14, 70], "set_token": [14, 15], "pretrainedtoken": 14, "set_ungroup_grouped_query_attent": 14, "ungroup_grouped_query_attent": [14, 15], "ungroup": [14, 15], "gqa": 14, "set_use_attn_in": 14, "use_attn_in": [14, 15], "set_use_attn_result": 14, "easili": [14, 69, 70, 71], "burn": 14, "set_use_hook_mlp_in": 14, "use_hook_mlp_in": [14, 15], "set_use_split_qkv_input": 14, "use_split_qkv_input": [14, 15], "to_single_str_token": 14, "int_token": 14, "uncertain": 14, "to_str_token": [14, 16, 70, 71], "weirdli": [14, 70, 71], "gotcha2": 14, "letter": [14, 71], "capit": [14, 70, 71], "shoot": [14, 71], "gotcha3": 14, "exce": 14, "str_token": [14, 70], "to_str": [14, 70, 71], "numpi": [14, 15, 69, 70], "arrai": [14, 16, 69], "tokens_to_residual_direct": [14, 70], "mislead": [14, 70], "integ": [14, 69, 70, 71], "residual_direct": 14, "namedtupl": 14, "dataclass": [15, 37], "act_fn": [15, 72], "ep": 15, "1e": [15, 38], "05": [15, 38], "use_attn_scal": 15, "attn_scal": 15, "use_local_attn": 15, "original_architectur": 15, "from_checkpoint": 15, "checkpoint_label_typ": [15, 71], "window_s": [15, 18, 19, 24], "attn_typ": [15, 18, 19, 24, 30], "init_mod": 15, "normalization_typ": 15, "attention_dir": 15, "attn_onli": [15, 72], "initializer_rang": 15, "scale_attn_by_inverse_layer_idx": 15, "final_rm": 15, "d_vocab_out": [15, 34], "parallel_attn_mlp": 15, "rotary_dim": [15, 18], "n_param": [15, 72], "use_hook_token": 15, "gated_mlp": 15, "tokenizer_prepends_bo": 15, "n_key_value_head": [15, 24, 72], "post_embedding_ln": 15, "rotary_bas": 15, "10000": [15, 18, 71], "trust_remote_cod": 15, "rotary_adjacent_pair": 15, "load_in_4bit": 15, "num_expert": 15, "experts_per_token": 15, "relative_attention_max_dist": 15, "relative_attention_num_bucket": 15, "decoder_start_token_id": 15, "tie_word_embed": 15, "use_normalization_before_and_aft": 15, "attn_scores_soft_cap": 15, "output_logits_soft_cap": 15, "use_ntk_by_parts_rop": 15, "ntk_by_parts_low_freq_factor": 15, "ntk_by_parts_high_freq_factor": 15, "ntk_by_parts_factor": 15, "8": [15, 18, 35, 36, 70, 71, 72], "AND": 15, "feedforward": 15, "network": [15, 70, 71], "vocab": 15, "lowercas": 15, "relu": [15, 69, 72], "gelu": [15, 38, 71, 72], "silu": [15, 72], "gelu_new": [15, 69], "gelu_fast": [15, 69], "epsilon": 15, "5": [15, 18, 35, 36, 38, 40, 69, 70, 71, 72], "THEN": 15, "intens": 15, "divid": [15, 36, 69, 70], "distanc": [15, 18, 70], "xavier_uniform": 15, "xavier_norm": 15, "kaiming_uniform": 15, "kaiming_norm": 15, "rmspre": 15, "pipelin": 15, "parallel": [15, 69, 70], "aka": 15, "unidirect": 15, "bidirect": [15, 71], "gain": [15, 69], "layer_id": [15, 18, 19, 24, 30], "numer": [15, 16, 18, 19, 24, 71], "stabil": [15, 18, 19, 24, 71], "fp16": 15, "rotari": [15, 18], "blog": [15, 18], "eleuth": [15, 18, 69, 71], "res_stream": 15, "sinusoid": 15, "dumb": 15, "mainli": 15, "curs": 15, "init": 15, "law": 15, "pdf": [15, 18, 32, 35], "2001": 15, "08361": 15, "Will": [15, 40], "interven": [15, 37, 40, 70], "add_bos_token": [15, 69], "bitsandbyt": 15, "moe": 15, "bucket": 15, "tie": 15, "word": [15, 69, 70, 71], "gemma": [15, 38, 42, 72], "softcap": 15, "soft_cap": 15, "tanh": 15, "squash": 15, "interv": [15, 36], "ntk": 15, "interpol": 15, "2309": 15, "00071": 15, "threshold": 15, "high": [15, 69, 70, 71], "rate": [15, 63, 71], "strategi": [15, 71], "from_dict": 15, "config_dict": 15, "is_layer_norm_activ": 15, "set_seed_everywher": 15, "to_dict": 15, "unwrap": [15, 69], "duplic": [15, 36, 70, 71], "get_singular_vector": 16, "vector_typ": 16, "layer_index": [16, 70], "num_vector": 16, "plot": [16, 71], "pysvelt": [16, 71], "instabl": 16, "d": [16, 35, 36, 38, 70, 72], "medium": [16, 38, 72], "svd_interpret": 16, "22": [16, 35, 69, 70, 71], "all_token": 16, "np": [16, 69, 70], "def": [16, 70, 71], "plot_matrix": 16, "filter": [16, 37, 38, 69, 71], "topk": [16, 70], "topktabl": 16, "obj_typ": 16, "abstract_attent": 17, "bert_block": 17, "bert_emb": 17, "bert_mlm_head": 17, "grouped_query_attent": 17, "layer_norm": [17, 70], "layer_norm_pr": 17, "rms_norm": 17, "rms_norm_pr": 17, "t5_attent": 17, "t5_block": 17, "token_typed_emb": 17, "transformer_block": 17, "abstractattent": [18, 19, 24, 30], "abc": [18, 71], "pure": 18, "glossari": 18, "sorri": 18, "underli": [18, 40, 70, 71], "destination_residu": 18, "destination_po": 18, "source_po": [18, 71], "abstract": [18, 70, 71], "groupedqueryattent": [18, 24], "enforc": 18, "child": 18, "better_abc": 18, "abstract_attribut": 18, "stackoverflow": 18, "question": [18, 70, 71], "23831510": 18, "256": [18, 19, 24, 71, 72], "alibi": 18, "apply_causal_mask": 18, "pos_plus_past_kv_pos_offset": 18, "past_kv_pos_offset": [18, 27, 69], "offset_po": [18, 27, 33, 69], "apply_rotari": 18, "calculate_attention_scor": [18, 24], "calculate_qkv_matric": [18, 24], "query_input": [18, 24], "key_input": [18, 24], "kv_po": [18, 30, 31], "value_input": [18, 24], "calculate_sin_cos_rotari": 18, "sine": 18, "cosin": 18, "wave": 18, "inexplic": 18, "adjac": [18, 70], "neox": [18, 38, 42, 71, 72], "clue": [18, 70], "resolv": 18, "calculate_z_scor": [18, 24], "static": [18, 35], "create_alibi_bia": 18, "head_idx": 18, "2108": 18, "12409": 18, "broad": [18, 70], "proport": [18, 69], "distant": 18, "0000": [18, 70], "0625": 18, "1250": 18, "1875": 18, "0039": 18, "0078": 18, "0117": 18, "create_alibi_multipli": 18, "geometr": 18, "ratio": [18, 69, 70, 71], "16": [18, 69, 70, 71, 72], "5000": 18, "2500": [18, 70], "0312": 18, "0156": 18, "7071": 18, "3536": 18, "1768": 18, "0884": 18, "0442": 18, "0221": 18, "0110": 18, "0055": 18, "create_alibi_slop": 18, "slope": 18, "triangl": 18, "lower": [18, 35, 36, 69, 70, 71], "bottom": [18, 71], "corner": 18, "kv_head_index": [18, 24], "past_kv_cache_entri": [18, 31, 33], "hookedtransformerkeyvaluecacheentri": [18, 31, 33, 39], "additive_attention_mask": [18, 20, 31], "position_bia": [18, 30, 31], "irrelev": [18, 70, 71], "past": [18, 39, 70], "rotate_every_two": 18, "x0": 18, "x1": 18, "param": [19, 63, 69, 71], "convent": [19, 69, 70, 71], "mistal": [19, 24], "bertblock": 20, "transformerblock": [20, 33], "except": [20, 70, 71], "overridden": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 69], "subclass": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37], "recip": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37], "afterward": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37], "former": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37], "regist": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37], "latter": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37, 71], "silent": [20, 21, 22, 23, 25, 26, 28, 29, 32, 34, 37], "bertemb": 21, "input_id": 21, "bertmlmhead": 22, "purpos": [22, 35, 70, 71], "resid": 22, "2305": 24, "13245": 24, "hood": 24, "_w_k": 24, "_w_v": 24, "getter": 24, "similarli": 24, "kept": 24, "repeat_interleav": 24, "unexpand": 24, "expan": 24, "n_query_head": 24, "gpa": 24, "normalis": [26, 70], "posemb": 27, "new_po": 27, "root": [28, 29, 71], "rmsnormpr": 29, "t5attent": [30, 31], "has_relative_attention_bia": 30, "expect": [30, 35, 36, 70, 71], "feed": [30, 35, 69, 71], "positional_bia": 30, "compute_relative_attention_bia": 30, "query_len": 30, "key_len": 30, "query_length": 30, "key_length": 30, "bin": 30, "t5block": 31, "block_index": [31, 33], "is_decod": 31, "t5layernorm": 31, "inst": 31, "usual": 31, "encoder_additive_attention_mask": 31, "encoder_po": 31, "encoder_hidden_st": 31, "_description_": 31, "_type_": [31, 37], "tokentypeemb": 32, "1810": 32, "04805": 32, "apply_mlp": 33, "normalized_resid": 33, "central": [33, 70], "positional_embeddings_typ": 33, "canbeusedasmlp": 33, "evalu": [35, 37, 70, 71], "rough": [35, 71], "cheapli": 35, "roughli": [35, 70, 71], "baselin": 35, "ioidataset": 35, "noun": 35, "num_sampl": 35, "symmetr": 35, "ioi_ev": 35, "476": 35, "met": 35, "alic": 35, "bob": 35, "charli": 35, "ball": [35, 70], "book": 35, "397": 35, "get_default_nam": 35, "get_default_noun": 35, "get_default_templ": 35, "get_sampl": 35, "evaluate_on_dataset": 35, "data_load": 35, "induction_loss": [35, 71], "subseq_len": 35, "384": [35, 71], "io": [35, 36, 70, 71], "accuraci": [35, 36, 69], "make_code_data_load": 35, "codeparrot": [35, 69], "dump": 35, "presum": [35, 70], "natur": [35, 70, 71], "make_owt_data_load": 35, "corpu": [35, 69], "make_pile_data_load": 35, "eleutherai": [35, 38], "english": [35, 71, 73], "academ": 35, "internet": [35, 71], "make_wiki_data_load": 35, "wikitext": 35, "wikipedia": [35, 69, 71], "articl": [35, 69, 70, 71], "bother": 35, "quarantin": 35, "nowadai": 35, "leakag": 35, "though": [35, 69, 70, 71], "sanity_check": 35, "paragraph": [35, 71], "zoom": [35, 40, 70], "quick": [35, 36, 71], "saniti": [35, 70], "ok": [35, 70, 71], "gone": [35, 70, 71], "wrong": [35, 37, 70], "compute_head_attention_similarity_scor": 36, "attention_pattern": [36, 71], "detection_pattern": 36, "exclude_bo": 36, "exclude_current_token": 36, "error_measur": 36, "mul": 36, "exclude_bcurrent_token": 36, "detect_head": 36, "seq": [36, 69], "previous_token_head": 36, "duplicate_token_head": 36, "induction_head": 36, "headnam": 36, "straightforward": [36, 70], "fraction": 36, "alloc": 36, "prohibit": [36, 71], "cours": [36, 70], "raw": [36, 70], "perfect": [36, 70], "examin": 36, "switch": 36, "advantag": 36, "closer": 36, "head_nam": 36, "ntensor": 36, "ioi": [36, 70, 71], "spacifi": 36, "analyz": 36, "paid": [36, 70, 71], "get_duplicate_token_head_detection_pattern": 36, "dynalist": 36, "n2zwtnoyhru1s4vnfsaq519j": 36, "2ukvedzonghl5uhugvhroxeo": 36, "get_induction_head_detection_pattern": 36, "_tfvup5csv5orithmqwj0gsi": 36, "get_previous_token_head_detection_pattern": 36, "0o5vohe9xezn8ertywkh7ioc": 36, "get_supported_head": 36, "hookfunct": 37, "_hookfunctionprotocol": 37, "inspir": [37, 71, 73], "garcon": [37, 71, 73], "ident": [37, 69, 70, 71], "wrap": [37, 71], "add_hook": [37, 70], "bwd": 37, "fn": 37, "hook_nam": 37, "add_perma_hook": [37, 71], "clear_context": 37, "remove_hook": 37, "including_perman": 37, "interfac": [37, 71, 73], "nice": [37, 70], "run_with_hook": [37, 70, 71], "temporari": [37, 69, 71], "debug": [37, 38, 63], "intent": 37, "reset_hook": [37, 71], "goe": [37, 70, 71], "reset_hooks_end": [37, 70], "add_caching_hook": 37, "names_filt": [37, 70, 71], "callabl": [37, 40], "incl_bwd": 37, "namesfilt": 37, "lambda": [37, 70, 71], "cache_som": 37, "check_and_add_hook": 37, "get_caching_hook": 37, "fwd_hook": [37, 70, 71], "bwd_hook": 37, "hook_dict": 37, "exit": [37, 69], "clear": [37, 71], "reset": 37, "my_hook": 37, "hooked_loss": 37, "mod_dict": 37, "remove_all_hook_fn": 37, "model_kwarg": 37, "degrad": 37, "lenshandl": 37, "removablehandl": 37, "context_level": 37, "hold": 37, "perman": 37, "hug": 38, "face": 38, "hub": [38, 69], "768": [38, 70, 71, 72], "layer_norm_ep": 38, "init_rang": 38, "02": 38, "1024": [38, 69, 71, 72], "3072": [38, 71, 72], "12": [38, 70, 71, 72], "model_alias": 38, "01": 38, "yi": [38, 72], "34b": [38, 72], "6b": [38, 71, 72], "arthurconmi": 38, "redwood_attn_2l": [38, 72], "baidicoot": 38, "3b": [38, 71, 72], "125m": [38, 71, 72], "20b": [38, 71, 72], "pythia": [38, 72], "4b": [38, 72], "dedup": [38, 72], "12b": [38, 72], "13b": [38, 71, 72], "14m": [38, 72], "160m": [38, 72], "seed1": [38, 72], "seed2": [38, 72], "seed3": [38, 72], "1b": [38, 72], "800m": 38, "8b": [38, 71, 72], "31m": [38, 72], "410m": [38, 72], "350m": 38, "9b": [38, 72], "70m": [38, 72], "19m": [38, 72], "2l512w": 38, "lr": [38, 63], "attn_only_1l512w_c4_cod": 38, "c4": [38, 69, 71], "attn_only_2l512w_c4_cod": 38, "attn_only_3l512w_c4_cod": 38, "attn_only_4l512w_c4_cod": 38, "gelu_1l512w_c4_cod": 38, "gelu_2l512w_c4_cod": 38, "gelu_3l512w_c4_cod": 38, "gelu_4l512w_c4_cod": 38, "solu_10l1280w_c4_cod": 38, "10l": [38, 71, 72], "solu_10l_v22_old": 38, "solu_12l1536w_c4_cod": 38, "12l": [38, 71, 72], "solu_12l_v23_old": 38, "solu_1l512w_c4_cod": 38, "solu_1l512w_wiki_finetun": 38, "wiki": [38, 69, 70, 71, 72], "finetun": 38, "solu_1l_v9_old": 38, "solu_2l512w_c4_cod": 38, "solu_2l_v10_old": 38, "solu_3l512w_c4_cod": 38, "solu_4l512w_c4_cod": 38, "solu_4l512w_wiki_finetun": 38, "solu_4l_v11_old": 38, "solu_6l768w_c4_cod": 38, "6l": [38, 71, 72], "solu_6l_v13_old": 38, "solu_8l1024w_c4_cod": 38, "8l": [38, 71, 72], "solu_8l_v21_old": 38, "qwen": [38, 42, 61, 72], "14b": [38, 72], "1_8b": 38, "qwen1": [38, 72], "5b": [38, 71, 72], "forev": 38, "mgpt": [38, 72], "bigcod": 38, "santacod": [38, 72], "bigscienc": 38, "1b1": [38, 72], "1b7": [38, 72], "560m": [38, 72], "7b1": [38, 72], "codellama": [38, 72], "hf": 38, "codellamallama": [38, 72], "distilgpt2": [38, 71], "distillgpt2": [38, 72], "distil": [38, 71], "facebook": 38, "xxl": 38, "30b": [38, 71, 72], "xxxl": 38, "xl": [38, 71, 72], "66b": [38, 71, 72], "xxxxl": 38, "27b": [38, 72], "2b": [38, 72], "65b": [38, 72], "70b": [38, 72], "microsoft": 38, "phi": [38, 42, 59, 72], "mini": 38, "4k": 38, "1_5": [38, 72], "nemo": [38, 72], "2407": [38, 72], "roneneldan": 38, "tinystori": 38, "1layer": 38, "21m": [38, 72], "28m": [38, 72], "2layer": 38, "33m": [38, 72], "3m": [38, 72], "8m": [38, 72], "instuct": 38, "stabilityai": 38, "stablelm": [38, 71, 72], "alpha": [38, 72], "x21": 38, "arwen": 38, "battlestar": 38, "x49": 38, "beren": 38, "caprica": 38, "x81": 38, "celebrimbor": 38, "darkmatt": 38, "x343": 38, "durin": 38, "eowyn": 38, "x777": 38, "expans": 38, "alias": 38, "non_hf_hosted_model_nam": 38, "qwen2": [38, 42, 72], "32b": [38, 72], "72b": [38, 72], "qwq": [38, 72], "preview": [38, 72], "get_checkpoint_label": [38, 71], "label_typ": 38, "get_num_params_of_pretrain": 38, "suffici": [38, 70], "get_pretrained_model_config": 38, "hf_cfg": 38, "automodel": 38, "autoconfig": 38, "infrastructur": [38, 70, 71, 73], "ourselv": [39, 69, 71, 73], "previous_attention_mask": 39, "pos_so_far": 39, "append": [39, 70, 71], "prefix": 39, "append_attention_mask": 39, "freez": 39, "init_cach": 39, "unfreez": 39, "past_kei": 39, "jaxtyp": [39, 70, 71], "past_valu": 39, "new_kei": 39, "new_valu": 39, "init_cache_entri": 39, "structur": [40, 71], "generic_activation_patch": 40, "specialis": [40, 70], "introduc": [40, 70], "rome": [40, 70, 71], "baulab": 40, "corrupt": [40, 70, 71], "iter": [40, 69, 70, 71], "localis": [40, 70, 71], "__from__": 40, "__to": 40, "__the": 40, "confid": [40, 70, 71], "intuit": [40, 70, 71], "diffus": [40, 70], "spread": [40, 70], "connect": [40, 70], "ultim": [40, 70], "tend": [40, 71], "extrem": [40, 70, 71, 73], "eiffel": 40, "tower": 40, "pari": 40, "factual": [40, 70], "recal": [40, 70], "colosseum": 40, "corrupted_token": [40, 70, 71], "clean_cach": [40, 70, 71], "patching_metr": 40, "patch_sett": 40, "index_axis_nam": 40, "src_po": [40, 70], "dest_po": [40, 70, 71], "index_df": 40, "datafram": 40, "return_index_df": 40, "counterfactu": [40, 70, 71], "Then": 40, "index_to_act_nam": 40, "recov": [40, 70, 71], "diff": [40, 70], "corrupted_activ": 40, "chunk": 40, "fill": 40, "flatten": [40, 70, 71], "patched_output": 40, "get_act_patch_attn_head_all_pos_everi": 40, "patch_typ": 40, "get_act_patch_attn_head_by_pos_everi": 40, "get_act_patch_attn_head_k_all_po": 40, "corruptedactiv": 40, "patchedactiv": 40, "layer_head_vector_patch_sett": 40, "axisnam": 40, "get_act_patch_attn_head_k_by_po": 40, "layer_pos_head_vector_patch_sett": 40, "get_act_patch_attn_head_out_all_po": 40, "get_act_patch_attn_head_out_by_po": 40, "get_act_patch_attn_head_pattern_all_po": 40, "layer_head_pattern_patch_sett": 40, "get_act_patch_attn_head_pattern_by_po": 40, "layer_head_pos_pattern_patch_sett": 40, "get_act_patch_attn_head_pattern_dest_src_po": 40, "layer_head_dest_src_pos_pattern_patch_sett": 40, "get_act_patch_attn_head_q_all_po": 40, "get_act_patch_attn_head_q_by_po": 40, "get_act_patch_attn_head_v_all_po": 40, "get_act_patch_attn_head_v_by_po": 40, "get_act_patch_attn_out": 40, "layer_pos_patch_sett": 40, "get_act_patch_block_everi": 40, "get_act_patch_mlp_out": 40, "get_act_patch_resid_mid": 40, "get_act_patch_resid_pr": 40, "clean_activ": 40, "weight_convers": 41, "coder": 42, "mingpt": 42, "nanogpt": 42, "neel_solu_old": 42, "phi3": 42, "convert_bloom_weight": 44, "convert_coder_weight": 45, "convert_mistral_weight": 51, "convert_mixtral_weight": 52, "convert_phi_weight": 58, "convert_phi3_weight": 59, "convert_qwen_weight": 60, "convert_qwen2_weight": 61, "convert_t5_weight": 62, "hookedtransformertrainconfig": 63, "num_epoch": 63, "001": 63, "max_grad_norm": 63, "weight_decai": 63, "optimizer_nam": 63, "adam": 63, "warmup_step": 63, "save_everi": 63, "save_dir": 63, "wandb": 63, "wandb_project_nam": 63, "print_everi": 63, "max_step": 63, "hyperparamet": [63, 69], "epoch": 63, "decai": 63, "warmup": 63, "wandb_project": 63, "termin": 63, "activation_funct": 64, "addmm": 64, "batch_addmm": 66, "d_out": [66, 69], "d_in": [66, 69], "fuse": 66, "conv1d": 66, "9ba9369a2557e53a01378199a9839ec6e82d8bc7": 66, "src": 66, "pytorch_util": 66, "l102": 66, "l106": 66, "vanilla_addmm": 66, "mat1": 66, "mat2": 66, "typecheck": 66, "complex_attn_linear": 67, "almost": [67, 70], "simple_attn_linear": 67, "extra": [67, 69], "assist": 68, "availabledevicememori": 68, "calculate_available_device_cuda_memori": 68, "determine_available_memory_for_available_devic": 68, "max_devic": 68, "precalcul": 68, "get_best_available_cuda_devic": 68, "whichev": 68, "environmenterror": 68, "get_best_available_devic": 68, "get_device_for_block_index": 68, "target": 68, "account": [68, 70], "move_to_and_update_config": 68, "sort_devices_based_on_available_memori": 68, "vari": [69, 70], "throughout": [69, 71], "locallyoverridendefault": 69, "restor": 69, "overriden": 69, "input_slic": 69, "syntax": [69, 70, 71], "reduc": [69, 70, 71], "leav": [69, 71], "elif": 69, "1d": 69, "sliceinput": 69, "valueerror": 69, "abov": [69, 70, 71], "max_ctx": 69, "int32": 69, "slice_input": 69, "calc_fan_in_and_fan_out": 69, "fan": 69, "composition_scor": 69, "broadcast_dim": 69, "leading_dims_left_and_right": 69, "download_file_from_hf": 69, "repo_nam": 69, "file_nam": 69, "subfold": 69, "home": 69, "runner": 69, "force_is_torch": 69, "json": 69, "pth": 69, "extens": [69, 70], "layer_typ": [69, 70], "shorthand": 69, "loop": [69, 70, 71, 73], "hack": [69, 71], "stuff": [69, 71], "readabl": 69, "digit": [69, 71], "k6": 69, "scale4ln1": 69, "appear": [69, 71], "distinguish": [69, 70], "hook_k": [69, 71], "hook_pr": [69, 71], "27": [69, 70, 71], "hook_norm": [69, 71], "pre5": 69, "get_attention_mask": 69, "leftmost": 69, "rightmost": 69, "consid": 69, "get_cumsum_along_dim": 69, "dataset_nam": 69, "000": [69, 71], "enorm": [69, 71], "100gb": 69, "2tb": 69, "effort": [69, 70], "dataload": 69, "fanci": 69, "data_dir": 69, "approx": [69, 70, 71], "ton": [69, 73], "divers": [69, 70, 71], "coloss": 69, "crawl": 69, "bigger": 69, "c4_code": 69, "friendli": 69, "22m": [69, 71], "5m": 69, "20220301": 69, "en": [69, 71], "get_devic": [69, 70, 71], "get_input_with_manually_prepended_bo": 69, "autotoken": 69, "get_nested_attr": 69, "obj": 69, "attr_str": 69, "retriev": 69, "nest": 69, "hierarchi": 69, "get_offset_position_id": 69, "offset": [69, 70, 71], "get_tokenizer_with_bo": 69, "Such": [69, 70], "llamatoken": 69, "get_tokens_with_bos_remov": 69, "init_kaiming_normal_": 69, "nonlinear": 69, "std": 69, "init_kaiming_uniform_": 69, "init_xavier_normal_": 69, "init_xavier_uniform_": 69, "is_lower_triangular": 69, "is_squar": 69, "keep_single_column": 69, "col_nam": 69, "lm_accuraci": 69, "seq_len": [69, 70, 71], "altern": 69, "override_or_use_default_valu": 69, "default_flag": 69, "print_gpu_mem": 69, "step_nam": 69, "repeat_along_head_dimens": 69, "clone_tensor": 69, "sample_logit": 69, "final_logit": [69, 70], "argmaxi": 69, "90": 69, "renormalis": 69, "mutual": 69, "neither": [69, 70], "input_token": 69, "todo": 69, "edg": 69, "randn": [69, 71], "uniqu": 69, "return_count": 69, "set_nested_attr": 69, "prepend_space_to_answ": 69, "eleph": 69, "endoftext": [69, 70, 71], "14": [69, 70, 71, 72], "51": [69, 71], "0th": [69, 70], "59": [69, 71, 72], "ground": [69, 70], "1th": [69, 70], "41": [69, 71], "tree": 69, "2th": [69, 70], "3th": [69, 70], "45": [69, 71], "car": 69, "4th": [69, 70], "13": [69, 70, 71], "92": [69, 70], "55": [69, 70, 71], "river": 69, "5th": [69, 70], "79": 69, "25": [69, 70, 71, 72], "street": 69, "6th": [69, 70], "77": 69, "21": [69, 70, 71], "7th": [69, 70], "75": 69, "hill": 69, "8th": [69, 70], "swing": 69, "9th": [69, 70], "46": [69, 71, 72], "61": [69, 71, 72], "park": [69, 70], "to_numpi": [69, 70, 71], "tokenize_and_concaten": 69, "max_length": 69, "column_nam": 69, "num_proc": 69, "eo": [69, 71], "reshap": [69, 70], "____": 69, "drop": [69, 71], "faster": [69, 70, 71], "parallelis": [69, 71], "chop": 69, "privileg": 69, "earli": [69, 71], "cnn": [69, 71], "bos_token_id": 69, "swap": [69, 70], "runtim": [70, 71], "hardwar": [70, 71], "pane": [70, 71], "sidebar": [70, 71], "navig": [70, 71], "vscode": [70, 71], "outlin": 70, "tab": 70, "dropdown": [70, 71], "arrow": [70, 71], "page": [70, 71], "ctrl": [70, 71], "in_colab": [70, 71], "circuitsvi": [70, 71], "node": [70, 71], "curl": [70, 71], "fssl": [70, 71], "deb": [70, 71], "nodesourc": [70, 71], "setup_16": [70, 71], "sudo": [70, 71], "bash": [70, 71], "apt": [70, 71], "nodej": [70, 71], "noqa": [70, 71], "ipython": [70, 71], "get_ipython": [70, 71], "ip": [70, 71], "extension_manag": [70, 71], "autoreload": [70, 71], "functool": [70, 71], "plotli": [70, 71], "express": [70, 71], "px": [70, 71], "pio": [70, 71], "attention_head": 70, "fancy_einsum": [70, 71], "ifram": 70, "differenti": [70, 71], "simplic": 70, "imshow": [70, 71], "color_continuous_midpoint": [70, 71], "color_continuous_scal": [70, 71], "rdbu": [70, 71], "scatter": [70, 71], "xaxi": [70, 71], "yaxi": [70, 71], "caxi": [70, 71], "color": [70, 71], "principl": [70, 71, 73], "fun": [70, 71, 73], "gap": [70, 71, 73], "plai": [70, 71, 73], "flow": [70, 71, 73], "toolkit": [70, 71], "stylist": 70, "slowli": 70, "convei": 70, "tag": 70, "asid": 70, "flavour": 70, "weed": 70, "star": 70, "capabl": [70, 71], "interview": [70, 71], "kevin": [70, 71], "wang": 70, "twitter": 70, "thread": 70, "overview": 70, "bottl": [70, 71], "milk": [70, 71], "26": [70, 71, 72], "Their": 70, "skimp": 70, "rigour": 70, "suggest": 70, "evid": 70, "80m": [70, 71], "simplif": 70, "nbval_ignore_output": [70, 71], "stabl": 70, "example_prompt": 70, "example_answ": 70, "39": [70, 71], "lt": [70, 71], "gt": [70, 71], "09": [70, 71], "70": 70, "07": [70, 71], "38": [70, 71], "67": 70, "35": [70, 71], "54": [70, 71], "11": [70, 71, 72], "84": [70, 71], "73": 70, "hi": [70, 71], "06": 70, "her": [70, 71], "74": 70, "52": [70, 71, 72], "49": [70, 71], "jesu": 70, "97": 70, "42": [70, 71, 72], "him": 70, "subword": 70, "frequent": 70, "substr": [70, 71], "headach": 70, "annoi": [70, 71], "devot": 70, "sensibl": 70, "later": [70, 71], "wherev": 70, "flesh": 70, "prompt_format": 70, "jame": 70, "dan": 70, "sid": 70, "appl": 70, "martin": 70, "ami": 70, "drink": 70, "correct_token": 70, "insert": 70, "filler": 70, "newlin": 70, "intellig": 70, "complic": 70, "aggreg": 70, "original_logit": 70, "upon": 70, "subject": [70, 71], "logits_to_ave_logit_diff": 70, "per_prompt": 70, "answer_logit": 70, "gather": 70, "answer_logit_diff": 70, "detach": [70, 71], "decim": [70, 71], "original_average_logit_diff": 70, "3370": 70, "2020": 70, "7090": 70, "7970": 70, "7200": 70, "2810": 70, "6010": 70, "7670": 70, "552": 70, "33": [70, 71], "dive": 70, "spend": [70, 71], "engag": 70, "decent": [70, 71], "hypothes": 70, "cheat": [70, 71], "hypothesi": 70, "scienc": 70, "belief": 70, "trap": 70, "flounder": 70, "dogmat": 70, "overconfid": 70, "unwil": 70, "contradict": 70, "flinch": 70, "disconfirm": 70, "focu": 70, "primit": 70, "nearbi": 70, "came": 70, "trigram": 70, "symmetri": 70, "cancel": 70, "inhibit": 70, "spoiler": 70, "simplist": 70, "importantli": [70, 71], "perfectli": [70, 71], "final_residual_stream": 70, "eleg": 70, "particularli": 70, "aspect": 70, "nicer": 70, "inde": 70, "log_prob": 70, "log_softmax": 70, "logsumexp": 70, "decid": 70, "pronoun": 70, "refin": 70, "friendlier": 70, "answer_residual_direct": 70, "logit_diff_direct": 70, "w_u_fold": 70, "unigram": [70, 71], "statist": [70, 71], "opposit": 70, "hook_normalis": 70, "sub_layer_typ": 70, "final_token_residual_stream": 70, "scaled_final_token_residual_stream": 70, "average_logit_diff": 70, "residual_stack_to_logit_diff": 70, "scaled_residual_stack": 70, "fascinatingli": 70, "utterli": 70, "unabl": 70, "hover": [70, 71], "n_pre": 70, "n_mid": 70, "n_post": 70, "middl": [70, 71], "accumulated_residu": 70, "logit_lens_logit_diff": 70, "arang": 70, "hover_nam": [70, 71], "terminologi": 70, "overload": 70, "kth": 70, "per_layer_residu": 70, "per_layer_logit_diff": 70, "independ": [70, 71, 73], "l9h6": 70, "l9h9": 70, "l10h7": 70, "l11h10": 70, "harm": 70, "strongli": 70, "observ": [70, 71], "144": 70, "claim": 70, "surpris": 70, "7x": 70, "per_head_residu": 70, "per_head_logit_diff": 70, "rearrang": 70, "weren": 70, "alan": [70, 71], "coonei": [70, 71], "illustr": [70, 71], "mistak": 70, "mayb": [70, 71], "sai": [70, 71], "summari": 70, "sole": 70, "visualize_attention_pattern": 70, "local_cach": 70, "local_token": 70, "max_width": 70, "700": 70, "isinst": 70, "batch_index": 70, "combin": [70, 71], "attention_head_nam": 70, "show_cod": 70, "title_html": 70, "br": 70, "div": 70, "width": [70, 71], "top_positive_logit_attr_head": 70, "positive_html": 70, "top_negative_logit_attr_head": 70, "negative_html": 70, "conceptu": 70, "clearli": 70, "compos": [70, 71], "ideal": [70, 71], "david": [70, 71], "bau": [70, 71], "meng": [70, 71], "trace": [70, 71], "anim": 70, "lai": 70, "pro": 70, "con": 70, "Or": 70, "bake": 70, "claus": 70, "tack": 70, "gaussian": 70, "nois": 70, "beforehand": 70, "19": [70, 71], "corrupted_prompt": [70, 71], "corrupted_logit": [70, 71], "corrupted_cach": 70, "corrupted_average_logit_diff": 70, "temporarili": [70, 71], "patch_residual_compon": 70, "corrupted_residual_compon": 70, "normalize_patched_logit_diff": 70, "patched_logit_diff": [70, 71], "wors": [70, 71], "patched_residual_stream_diff": 70, "hook_fn": 70, "patched_logit": [70, 71], "abus": 70, "prompt_position_label": 70, "tok": 70, "_": [70, 71], "enumer": [70, 71], "reus": 70, "patched_attn_diff": 70, "patched_mlp_diff": 70, "patched_attn_logit": 70, "patched_attn_logit_diff": 70, "patched_mlp_logit": 70, "patched_mlp_logit_diff": 70, "late": [70, 71], "contrast": 70, "statement": 70, "mlp0": 70, "destroi": 70, "frame": 70, "unprincipl": 70, "invers": [70, 71], "plausibli": 70, "dedic": 70, "overcom": 70, "love": 70, "someon": 70, "patch_head_vector": 70, "corrupted_head_vector": 70, "patched_head_z_diff": 70, "l8h6": 70, "l8h10": 70, "l7h9": 70, "l5h5": 70, "l6h9": 70, "l3h0": 70, "semi": 70, "disentangl": 70, "familiar": 70, "28": [70, 71, 72], "patched_head_v_diff": 70, "heatmap": 70, "29": [70, 71], "lesson": 70, "head_label": 70, "range_x": 70, "range_i": 70, "31": [70, 71], "patch_head_pattern": 70, "corrupted_head_pattern": 70, "patched_head_attn_diff": 70, "32": [70, 71, 72], "reconsolid": 70, "extend": 70, "l7h3": 70, "specul": 70, "mysteri": [70, 71], "top_heads_by_output_patch": 70, "first_mid_lay": 70, "first_late_lay": 70, "early_head": 70, "mid_head": 70, "logical_and": 70, "late_head": 70, "diagram": [70, 73], "l1h2": 70, "latest": 70, "definit": 70, "priori": 70, "stroke": 70, "didn": 70, "bracket": 70, "serv": [70, 71], "particip": 70, "behav": 70, "l5h0": 70, "wrote": [70, 71, 73], "overkil": 70, "simpler": 70, "repurpos": 70, "machineri": 70, "life": [70, 71], "built": 70, "34": [70, 71], "example_text": [70, 71], "seek": 70, "machin": [70, 71], "example_repeated_text": 70, "example_repeated_token": 70, "example_repeated_logit": 70, "example_repeated_cach": 70, "induction_head_label": 70, "81": 70, "65": 70, "800": 70, "accord": 70, "wildli": 70, "characteris": 70, "superfici": 70, "boost": [70, 71], "anti": 70, "suppress": [70, 71], "pick": [70, 71], "signal": 70, "hook_": 70, "hook_attn": 70, "token_po": 70, "metadata": 70, "36": [70, 71, 72], "prev_token_scor": 70, "prev_token_hook": 70, "dim1": [70, 71], "dim2": [70, 71], "duplicate_token_scor": 70, "duplicate_token_hook": 70, "induction_scor": [70, 71], "induction_hook": 70, "manual_se": [70, 71], "original_token": 70, "randint": [70, 71], "20000": [70, 71], "repeated_token": [70, 71], "pattern_filt": 70, "act_nam": [70, 71], "endswith": [70, 71], "hook_pattern": [70, 71], "0390": 70, "0310": 70, "1890": 70, "1720": 70, "0680": 70, "1570": 70, "0210": 70, "4820": 70, "0030": 70, "1320": 70, "0050": 70, "0020": 70, "0090": 70, "0040": 70, "0010": 70, "instantli": 70, "37": [70, 71], "seen": [70, 71], "mosaic": 70, "40": [70, 71, 72], "fascin": 70, "knock": 70, "naiv": [70, 71], "convers": 70, "flaw": 70, "knockout": 70, "send": 70, "redund": 70, "job": 70, "underestim": 70, "57": [70, 71], "99": [70, 71], "hook_z": [70, 71], "top_name_mov": 70, "top_name_mover_lay": 70, "top_name_mover_head": 70, "ablate_top_head_hook": 70, "ablated_logit": 70, "ablated_cach": 70, "2f": [70, 71], "l10h10": 70, "margin": 70, "obvious": 70, "per_head_ablated_residu": 70, "per_head_ablated_logit_diff": 70, "04": [70, 71], "uniformli": [70, 71], "042": 70, "5200": 70, "4700": 70, "8200": 70, "5100": 70, "2600": 70, "1800": 70, "4300": 70, "5700": 70, "3500": 70, "2900": 70, "6800": 70, "4900": 70, "8700": 70, "4200": 70, "reader": [70, 71], "gentler": 71, "tip": 71, "development_mod": 71, "in_github": 71, "getenv": 71, "github_act": 71, "render": 71, "argh": 71, "notebook_connect": 71, "cv": 71, "hello": 71, "auto": 71, "autograd": 71, "grad_mod": 71, "0x7f4db37a8590": 71, "speak": [71, 73], "human": [71, 73], "palm": [71, 73], "nor": [71, 73], "offend": [71, 73], "anthrop": [71, 73], "team": [71, 73], "got": [71, 73], "frustrat": [71, 73], "deepspe": [71, 73], "industri": [71, 73], "heavili": [71, 73], "credit": [71, 73], "nelson": [71, 73], "elhag": [71, 73], "chri": [71, 73], "olah": [71, 73], "model_description_text": 71, "hyper": 71, "1758": 71, "box": 71, "On": 71, "insid": 71, "kinda": 71, "gpt2_cache_no_batch_dim": 71, "gpt2_cach": 71, "gpt2_text": 71, "summar": 71, "supervis": 71, "taskspecif": 71, "gpt2_token": 71, "gpt2_logit": 71, "lock": 71, "grid": 71, "gpt2_str_token": 71, "cell": 71, "attn_hook_nam": 71, "attn_lay": 71, "gpt2_attn_cach": 71, "gpt2_attn": 71, "assert": 71, "neural": 71, "system": 71, "surgic": 71, "surround": 71, "current_activation_valu": 71, "new_activation_valu": 71, "substitut": 71, "relationship": 71, "underr": 71, "janki": 71, "shamelessli": 71, "probepoint": 71, "qualiti": 71, "head_ablation_hook": 71, "layer_to_abl": 71, "head_index_to_abl": 71, "original_loss": 71, "ablated_loss": 71, "3f": 71, "999": 71, "453": 71, "stai": 71, "clean_prompt": 71, "clean_token": 71, "logits_to_logit_diff": 71, "correct_answ": 71, "incorrect_answ": 71, "correct_index": 71, "incorrect_index": 71, "clean_logit": 71, "clean_logit_diff": 71, "corrupted_logit_diff": 71, "276": 71, "738": 71, "residual_stream_patching_hook": 71, "clean_resid_pr": 71, "num_posit": 71, "ioi_patching_result": 71, "temp_hook_fn": 71, "ish": 71, "token_label": 71, "workflow": 71, "michael": 71, "jordan": 71, "surnam": 71, "occurr": 71, "terribl": 71, "halfwai": 71, "input_tensor": 71, "random_token": 71, "repeated_logit": 71, "correct_log_prob": 71, "loss_by_posit": 71, "manipul": 71, "hook_funct": 71, "induction_score_stor": 71, "induction_score_hook": 71, "induction_strip": 71, "pattern_hook_names_filt": 71, "highli": 71, "stripe": 71, "induction_head_lay": 71, "induction_head_index": 71, "single_random_sequ": 71, "repeated_random_sequ": 71, "visualize_pattern_hook": 71, "3d": 71, "four": 71, "300m": 71, "soon": 71, "distilgpt": 71, "distilgpt2_induction_score_stor": 71, "classic": 71, "openai": 71, "85m": [71, 72], "700m": 71, "22b": 71, "300b": 71, "180b": 71, "600": 71, "265": 71, "108m": 71, "bookscorpu": 71, "free": 71, "512": [71, 72], "tractabl": 71, "motif": 71, "80": [71, 72], "shuffl": 71, "scan": 71, "40m": 71, "100m": 71, "200m": 71, "340m": [71, 72], "15b": [71, 72], "13m": [71, 72], "digress": 71, "usefulli": 71, "variengien": 71, "websit": 71, "cleantransformerdemo": 71, "new_activ": 71, "old_activ": 71, "remind": 71, "50267": 71, "named_paramet": 71, "startswith": 71, "fallback": 71, "spam": 71, "dest_posit": 71, "brown": 71, "fox": 71, "lazi": 71, "dog": 71, "num": 71, "print_name_shape_hook_funct": 71, "not_in_late_block_filt": 71, "hook_q": 71, "hook_v": 71, "hook_attn_scor": 71, "hook_attn_out": 71, "hook_resid_mid": 71, "hook_post": 71, "hook_mlp_out": 71, "hook_resid_post": 71, "preconcept": 71, "overhead": 71, "elementwis": 71, "consequ": 71, "rare": 71, "dramat": 71, "degre": 71, "punctuat": 71, "ass": 71, "randomredditor": 71, "unembed_bia": 71, "bias_valu": 71, "bias_indic": 71, "repr": 71, "03": 71, "98": 71, "68": 71, "48": [71, 72], "47": 71, "72": [71, 72], "44": [71, 72], "82": 71, "\u30b5\u30fc\u30c6\u30a3": 71, "83": 71, "x18": 71, "x14": 71, "\u9f8d": 71, "x1b": 71, "x05": 71, "x00": 71, "x06": 71, "x07": 71, "x0c": 71, "x02": 71, "oreandonlin": 71, "x11": 71, "x10": 71, "favour": 71, "6x": 71, "john_bia": 71, "mary_bia": 71, "4f": 71, "exp": 71, "8995": 71, "6034": 71, "6550x": 71, "finit": 71, "invert": 71, "de": 71, "uncommon": 71, "iz": 71, "charact": 71, "example_text_str_token": 71, "example_text_token": 71, "50256": 71, "464": 71, "717": 71, "1517": 71, "345": 71, "761": 71, "284": 71, "3785": 71, "503": 71, "318": 71, "1635": 71, "4919": 71, "1243": 71, "389": 71, "11241": 71, "1143": 71, "4600": 71, "19849": 71, "1462": 71, "62": 71, "2536": 71, "482": 71, "641": 71, "63": 71, "30778": 71, "257": 71, "4731": 71, "656": 71, "262": 71, "16326": 71, "292": 71, "1351": 71, "286": 71, "850": 71, "37336": 71, "25666": 71, "290": 71, "523": 71, "8781": 71, "7301": 71, "644": 71, "2420": 71, "3073": 71, "588": 71, "1675": 71, "10176": 71, "428": 71, "1309": 71, "338": 71, "779": 71, "340": 71, "319": 71, "7322": 71, "signifi": 71, "example_multi_text": 71, "cat": 71, "sat": 71, "mat": 71, "example_multi_text_token": 71, "3797": 71, "3332": 71, "2603": 71, "1107": 71, "1327": 71, "th": 71, "cat_text": 71, "cat_logit": 71, "cat_prob": 71, "capital_the_token_index": 71, "ascii": 71, "squeez": 71, "annoy": 71, "arithmet": 71, "impress": 71, "2342": 71, "2017": 71, "21445": 71, "1000000": 71, "999999": 71, "214": 71, "000000": 71, "9999": 71, "tim": 71, "ne": 71, "el": 71, "messier": 71, "takeawai": 71, "unexpect": 71, "notic": 71, "trip": 71, "confusingli": 71, "forth": 71, "ioi_logits_with_bo": 71, "clair": 71, "mary_logit_with_bo": 71, "claire_logit_with_bo": 71, "ioi_logits_without_bo": 71, "mary_logit_without_bo": 71, "claire_logit_without_bo": 71, "754": 71, "782": 71, "air": 71, "understood": 71, "requisit": 71, "attention_scor": 71, "ab_factor": 71, "9105": 71, "linalg": 71, "eig": 71, "2877e": 71, "00": 71, "8626e": 71, "3121e": 71, "9038e": 71, "08": 71, "1527e": 71, "2877": 71, "3121": 71, "3126e": 71, "3963e": 71, "2029e": 71, "7690e": 71, "2164e": 71, "3126": 71, "3963": 71, "43": 71, "300": 71, "abc_factor": 71, "unfactor": 71, "160": 71, "0830": 71, "ab_unfactor": 71, "isclos": 71, "subspac": 71, "coincid": 71, "negat": 71, "proxi": 71, "lambda_i": 71, "ov_circuit_all_head": 71, "ov_circuit_all_heads_eigenvalu": 71, "complex64": 71, "ov_copying_scor": 71, "zmax": 71, "zmin": 71, "l11h11": 71, "imag": 71, "imaginari": 71, "full_ov_circuit": 71, "full_ov_circuit_eigenvalu": 71, "full_ov_copying_scor": 71, "interestingli": 71, "correl": 71, "outlier": 71, "53": 71, "ansh": 71, "radhakrishnan": 71, "establish": 71, "presid": 71, "barack": 71, "obama": 71, "caught": 71, "embarrass": 71, "scandal": 71, "nthe": 71, "financi": 71, "wife": 71, "chelsea": 71, "she": 71, "woman": 71, "lightweight": 71, "squarethenadd": 71, "hook_squar": 71, "twolayermodel": 71, "layer1": 71, "layer2": 71, "hook_in": 71, "hook_mid": 71, "hook_out": 71, "x_in": 71, "x_mid": 71, "x_out": 71, "model_out": 71, "cache_object": 71, "56": [71, 72], "780": 71, "784": 71, "set_to_zero_hook": 71, "num_checkpoint": 71, "piecewis": 71, "schedul": 71, "crash": 71, "11b": [71, 72], "centr": 71, "hoc": 71, "count": 71, "58": 71, "checkpoint_label": 71, "log_i": 71, "marker": 71, "brief": 71, "suddenli": 71, "500": 71, "visibl": 71, "curv": 71, "briefli": 71, "deliber": 71, "justic": 71, "chosen": 71, "60": [71, 72], "500m": 71, "arbitrarili": 71, "fast": 71, "checkpoint_indic": 71, "checkpointed_model": 71, "tokens_trained_on": 71, "model_for_this_checkpoint": 71, "tokens_seen_for_this_checkpoint": 71, "induction_loss_for_this_checkpoint": 71, "contextualis": 71, "95": 71, "log_x": 71, "302m": 72, "4096": 72, "708m": 72, "1280": 72, "5120": 72, "1600": 72, "6400": 72, "42m": 72, "2048": 72, "50272": 72, "8192": 72, "2560": 72, "10240": 72, "128": 72, "16384": 72, "20480": 72, "7168": 72, "28672": 72, "9216": 72, "36864": 72, "50400": 72, "6144": 72, "50432": 72, "96": 72, "24576": 72, "2m": 72, "50304": 72, "7m": 72, "805m": 72, "50688": 72, "50278": 72, "736": 72, "2944": 72, "101m": 72, "197m": 72, "1536": 72, "48262": 72, "4m": 72, "0m": 72, "50277": 72, "524k": 72, "50259": 72, "32000": 72, "11008": 72, "13824": 72, "6656": 72, "17920": 72, "22016": 72, "78b": 72, "32016": 72, "128256": 72, "14336": 72, "25m": 72, "28996": 72, "393k": 72, "6m": 72, "131072": 72, "47b": 72, "32768": 72, "250880": 72, "679m": 72, "0b": 72, "49280": 72, "151936": 72, "5504": 72, "152064": 72, "13696": 72, "308m": 72, "2816": 72, "6912": 72, "391m": 72, "896": 72, "4864": 72, "8960": 72, "3584": 72, "18944": 72, "27648": 72, "80b": 72, "29568": 72, "51200": 72, "32064": 72, "100352": 72, "256000": 72, "2304": 72, "gelu_pytorch_tanh": 72, "4608": 72, "64000": 72, "39b": 72, "32128": 72, "100000": 72, "formerli": 73, "transfer": 73, "courtesi": 73, "austin": 73, "kozlowski": 73}, "objects": {"transformer_lens": [[10, 0, 0, "-", "ActivationCache"], [11, 0, 0, "-", "FactoredMatrix"], [12, 0, 0, "-", "HookedEncoder"], [13, 0, 0, "-", "HookedEncoderDecoder"], [14, 0, 0, "-", "HookedTransformer"], [15, 0, 0, "-", "HookedTransformerConfig"], [16, 0, 0, "-", "SVDInterpreter"], [35, 0, 0, "-", "evals"], [36, 0, 0, "-", "head_detector"], [37, 0, 0, "-", "hook_points"], [38, 0, 0, "-", "loading_from_pretrained"], [39, 0, 0, "-", "past_key_value_caching"], [40, 0, 0, "-", "patching"], [63, 0, 0, "-", "train"], [69, 0, 0, "-", "utils"]], "transformer_lens.ActivationCache": [[10, 1, 1, "", "ActivationCache"]], "transformer_lens.ActivationCache.ActivationCache": [[10, 2, 1, "", "accumulated_resid"], [10, 2, 1, "", "apply_ln_to_stack"], [10, 2, 1, "", "apply_slice_to_batch_dim"], [10, 2, 1, "", "compute_head_results"], [10, 2, 1, "", "decompose_resid"], [10, 2, 1, "", "get_full_resid_decomposition"], [10, 2, 1, "", "get_neuron_results"], [10, 2, 1, "", "items"], [10, 2, 1, "", "keys"], [10, 2, 1, "", "logit_attrs"], [10, 2, 1, "", "remove_batch_dim"], [10, 2, 1, "", "stack_activation"], [10, 2, 1, "", "stack_head_results"], [10, 2, 1, "", "stack_neuron_results"], [10, 2, 1, "", "to"], [10, 2, 1, "", "toggle_autodiff"], [10, 2, 1, "", "values"]], "transformer_lens.FactoredMatrix": [[11, 1, 1, "", "FactoredMatrix"]], "transformer_lens.FactoredMatrix.FactoredMatrix": [[11, 3, 1, "", "AB"], [11, 3, 1, "", "BA"], [11, 3, 1, "", "S"], [11, 3, 1, "", "T"], [11, 3, 1, "", "U"], [11, 3, 1, "", "Vh"], [11, 2, 1, "", "collapse_l"], [11, 2, 1, "", "collapse_r"], [11, 3, 1, "", "eigenvalues"], [11, 2, 1, "", "get_corner"], [11, 2, 1, "", "make_even"], [11, 3, 1, "", "ndim"], [11, 2, 1, "", "norm"], [11, 3, 1, "", "pair"], [11, 2, 1, "", "svd"], [11, 2, 1, "", "unsqueeze"]], "transformer_lens.HookedEncoder": [[12, 1, 1, "", "HookedEncoder"]], "transformer_lens.HookedEncoder.HookedEncoder": [[12, 3, 1, "", "OV"], [12, 3, 1, "", "QK"], [12, 3, 1, "", "W_E"], [12, 3, 1, "", "W_E_pos"], [12, 3, 1, "", "W_K"], [12, 3, 1, "", "W_O"], [12, 3, 1, "", "W_Q"], [12, 3, 1, "", "W_U"], [12, 3, 1, "", "W_V"], [12, 3, 1, "", "W_in"], [12, 3, 1, "", "W_out"], [12, 3, 1, "", "W_pos"], [12, 2, 1, "", "all_head_labels"], [12, 3, 1, "", "b_K"], [12, 3, 1, "", "b_O"], [12, 3, 1, "", "b_Q"], [12, 3, 1, "", "b_U"], [12, 3, 1, "", "b_V"], [12, 3, 1, "", "b_in"], [12, 3, 1, "", "b_out"], [12, 2, 1, "", "cpu"], [12, 2, 1, "", "cuda"], [12, 2, 1, "", "forward"], [12, 2, 1, "", "from_pretrained"], [12, 2, 1, "", "mps"], [12, 2, 1, "", "run_with_cache"], [12, 2, 1, "", "to"]], "transformer_lens.HookedEncoderDecoder": [[13, 1, 1, "", "HookedEncoderDecoder"]], "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder": [[13, 3, 1, "", "OV"], [13, 3, 1, "", "QK"], [13, 3, 1, "", "W_E"], [13, 3, 1, "", "W_K"], [13, 3, 1, "", "W_O"], [13, 3, 1, "", "W_Q"], [13, 3, 1, "", "W_U"], [13, 3, 1, "", "W_V"], [13, 3, 1, "", "W_in"], [13, 3, 1, "", "W_out"], [13, 3, 1, "", "W_pos"], [13, 2, 1, "", "all_head_labels"], [13, 3, 1, "", "b_K"], [13, 3, 1, "", "b_O"], [13, 3, 1, "", "b_Q"], [13, 3, 1, "", "b_U"], [13, 3, 1, "", "b_V"], [13, 3, 1, "", "b_in"], [13, 3, 1, "", "b_out"], [13, 2, 1, "", "cpu"], [13, 2, 1, "", "cuda"], [13, 2, 1, "", "forward"], [13, 2, 1, "", "from_pretrained"], [13, 2, 1, "", "generate"], [13, 2, 1, "", "mps"], [13, 2, 1, "", "run_with_cache"], [13, 2, 1, "", "to"], [13, 2, 1, "", "to_tokens"]], "transformer_lens.HookedTransformer": [[14, 1, 1, "", "HookedTransformer"], [14, 1, 1, "", "Output"]], "transformer_lens.HookedTransformer.HookedTransformer": [[14, 3, 1, "", "OV"], [14, 3, 1, "", "QK"], [14, 3, 1, "", "W_E"], [14, 3, 1, "", "W_E_pos"], [14, 3, 1, "", "W_K"], [14, 3, 1, "", "W_O"], [14, 3, 1, "", "W_Q"], [14, 3, 1, "", "W_U"], [14, 3, 1, "", "W_V"], [14, 3, 1, "", "W_gate"], [14, 3, 1, "", "W_in"], [14, 3, 1, "", "W_out"], [14, 3, 1, "", "W_pos"], [14, 2, 1, "", "__init__"], [14, 2, 1, "", "accumulated_bias"], [14, 2, 1, "", "all_composition_scores"], [14, 2, 1, "", "all_head_labels"], [14, 3, 1, "", "b_K"], [14, 3, 1, "", "b_O"], [14, 3, 1, "", "b_Q"], [14, 3, 1, "", "b_U"], [14, 3, 1, "", "b_V"], [14, 3, 1, "", "b_in"], [14, 3, 1, "", "b_out"], [14, 2, 1, "", "center_unembed"], [14, 2, 1, "", "center_writing_weights"], [14, 2, 1, "", "check_hooks_to_add"], [14, 2, 1, "", "cpu"], [14, 2, 1, "", "cuda"], [14, 2, 1, "", "fold_layer_norm"], [14, 2, 1, "", "fold_value_biases"], [14, 2, 1, "", "forward"], [14, 2, 1, "", "from_pretrained"], [14, 2, 1, "", "from_pretrained_no_processing"], [14, 2, 1, "", "generate"], [14, 2, 1, "", "get_pos_offset"], [14, 2, 1, "", "get_residual"], [14, 2, 1, "", "get_token_position"], [14, 2, 1, "", "init_weights"], [14, 2, 1, "", "input_to_embed"], [14, 4, 1, "", "ln_final"], [14, 2, 1, "", "load_and_process_state_dict"], [14, 2, 1, "", "load_sample_training_dataset"], [14, 2, 1, "", "loss_fn"], [14, 2, 1, "", "move_model_modules_to_device"], [14, 2, 1, "", "mps"], [14, 2, 1, "", "process_weights_"], [14, 2, 1, "", "refactor_factored_attn_matrices"], [14, 2, 1, "", "run_with_cache"], [14, 2, 1, "", "sample_datapoint"], [14, 2, 1, "", "set_tokenizer"], [14, 2, 1, "", "set_ungroup_grouped_query_attention"], [14, 2, 1, "", "set_use_attn_in"], [14, 2, 1, "", "set_use_attn_result"], [14, 2, 1, "", "set_use_hook_mlp_in"], [14, 2, 1, "", "set_use_split_qkv_input"], [14, 2, 1, "", "to"], [14, 2, 1, "", "to_single_str_token"], [14, 2, 1, "", "to_single_token"], [14, 2, 1, "", "to_str_tokens"], [14, 2, 1, "", "to_string"], [14, 2, 1, "", "to_tokens"], [14, 2, 1, "", "tokens_to_residual_directions"]], "transformer_lens.HookedTransformer.Output": [[14, 4, 1, "", "logits"], [14, 4, 1, "", "loss"]], "transformer_lens.HookedTransformerConfig": [[15, 1, 1, "", "HookedTransformerConfig"]], "transformer_lens.HookedTransformerConfig.HookedTransformerConfig": [[15, 4, 1, "", "NTK_by_parts_factor"], [15, 4, 1, "", "NTK_by_parts_high_freq_factor"], [15, 4, 1, "", "NTK_by_parts_low_freq_factor"], [15, 4, 1, "", "act_fn"], [15, 4, 1, "", "attention_dir"], [15, 4, 1, "", "attn_only"], [15, 4, 1, "", "attn_scale"], [15, 4, 1, "", "attn_scores_soft_cap"], [15, 4, 1, "", "attn_types"], [15, 4, 1, "", "checkpoint_index"], [15, 4, 1, "", "checkpoint_label_type"], [15, 4, 1, "", "checkpoint_value"], [15, 4, 1, "", "d_head"], [15, 4, 1, "", "d_mlp"], [15, 4, 1, "", "d_model"], [15, 4, 1, "", "d_vocab"], [15, 4, 1, "", "d_vocab_out"], [15, 4, 1, "", "decoder_start_token_id"], [15, 4, 1, "", "default_prepend_bos"], [15, 4, 1, "", "device"], [15, 4, 1, "", "dtype"], [15, 4, 1, "", "eps"], [15, 4, 1, "", "experts_per_token"], [15, 4, 1, "", "final_rms"], [15, 4, 1, "", "from_checkpoint"], [15, 2, 1, "", "from_dict"], [15, 4, 1, "", "gated_mlp"], [15, 4, 1, "", "init_mode"], [15, 4, 1, "", "init_weights"], [15, 4, 1, "", "initializer_range"], [15, 2, 1, "", "is_layer_norm_activation"], [15, 4, 1, "", "load_in_4bit"], [15, 4, 1, "", "model_name"], [15, 4, 1, "", "n_ctx"], [15, 4, 1, "", "n_devices"], [15, 4, 1, "", "n_heads"], [15, 4, 1, "", "n_key_value_heads"], [15, 4, 1, "", "n_layers"], [15, 4, 1, "", "n_params"], [15, 4, 1, "", "normalization_type"], [15, 4, 1, "", "num_experts"], [15, 4, 1, "", "original_architecture"], [15, 4, 1, "", "output_logits_soft_cap"], [15, 4, 1, "", "parallel_attn_mlp"], [15, 4, 1, "", "positional_embedding_type"], [15, 4, 1, "", "post_embedding_ln"], [15, 4, 1, "", "relative_attention_max_distance"], [15, 4, 1, "", "relative_attention_num_buckets"], [15, 4, 1, "", "rotary_adjacent_pairs"], [15, 4, 1, "", "rotary_base"], [15, 4, 1, "", "rotary_dim"], [15, 4, 1, "", "scale_attn_by_inverse_layer_idx"], [15, 4, 1, "", "seed"], [15, 2, 1, "", "set_seed_everywhere"], [15, 4, 1, "", "tie_word_embeddings"], [15, 2, 1, "", "to_dict"], [15, 4, 1, "", "tokenizer_name"], [15, 4, 1, "", "tokenizer_prepends_bos"], [15, 4, 1, "", "trust_remote_code"], [15, 4, 1, "", "ungroup_grouped_query_attention"], [15, 2, 1, "", "unwrap"], [15, 4, 1, "", "use_NTK_by_parts_rope"], [15, 4, 1, "", "use_attn_in"], [15, 4, 1, "", "use_attn_result"], [15, 4, 1, "", "use_attn_scale"], [15, 4, 1, "", "use_hook_mlp_in"], [15, 4, 1, "", "use_hook_tokens"], [15, 4, 1, "", "use_local_attn"], [15, 4, 1, "", "use_normalization_before_and_after"], [15, 4, 1, "", "use_split_qkv_input"], [15, 4, 1, "", "window_size"]], "transformer_lens.SVDInterpreter": [[16, 1, 1, "", "SVDInterpreter"]], "transformer_lens.SVDInterpreter.SVDInterpreter": [[16, 2, 1, "", "get_singular_vectors"]], "transformer_lens.components": [[18, 0, 0, "-", "abstract_attention"], [19, 0, 0, "-", "attention"], [20, 0, 0, "-", "bert_block"], [21, 0, 0, "-", "bert_embed"], [22, 0, 0, "-", "bert_mlm_head"], [23, 0, 0, "-", "embed"], [24, 0, 0, "-", "grouped_query_attention"], [25, 0, 0, "-", "layer_norm"], [26, 0, 0, "-", "layer_norm_pre"], [27, 0, 0, "-", "pos_embed"], [28, 0, 0, "-", "rms_norm"], [29, 0, 0, "-", "rms_norm_pre"], [30, 0, 0, "-", "t5_attention"], [31, 0, 0, "-", "t5_block"], [32, 0, 0, "-", "token_typed_embed"], [33, 0, 0, "-", "transformer_block"], [34, 0, 0, "-", "unembed"]], "transformer_lens.components.abstract_attention": [[18, 1, 1, "", "AbstractAttention"]], "transformer_lens.components.abstract_attention.AbstractAttention": [[18, 3, 1, "", "OV"], [18, 3, 1, "", "QK"], [18, 2, 1, "", "__init__"], [18, 4, 1, "", "alibi"], [18, 2, 1, "", "apply_causal_mask"], [18, 2, 1, "", "apply_rotary"], [18, 2, 1, "", "calculate_attention_scores"], [18, 2, 1, "", "calculate_qkv_matrices"], [18, 2, 1, "", "calculate_sin_cos_rotary"], [18, 2, 1, "", "calculate_z_scores"], [18, 2, 1, "", "create_alibi_bias"], [18, 2, 1, "", "create_alibi_multipliers"], [18, 2, 1, "", "create_alibi_slope"], [18, 2, 1, "", "forward"], [18, 2, 1, "", "rotate_every_two"]], "transformer_lens.components.attention": [[19, 1, 1, "", "Attention"]], "transformer_lens.components.attention.Attention": [[19, 2, 1, "", "__init__"]], "transformer_lens.components.bert_block": [[20, 1, 1, "", "BertBlock"]], "transformer_lens.components.bert_block.BertBlock": [[20, 2, 1, "", "forward"]], "transformer_lens.components.bert_embed": [[21, 1, 1, "", "BertEmbed"]], "transformer_lens.components.bert_embed.BertEmbed": [[21, 2, 1, "", "forward"]], "transformer_lens.components.bert_mlm_head": [[22, 1, 1, "", "BertMLMHead"]], "transformer_lens.components.bert_mlm_head.BertMLMHead": [[22, 2, 1, "", "forward"]], "transformer_lens.components.embed": [[23, 1, 1, "", "Embed"]], "transformer_lens.components.embed.Embed": [[23, 2, 1, "", "forward"]], "transformer_lens.components.grouped_query_attention": [[24, 1, 1, "", "GroupedQueryAttention"]], "transformer_lens.components.grouped_query_attention.GroupedQueryAttention": [[24, 3, 1, "", "W_K"], [24, 3, 1, "", "W_V"], [24, 2, 1, "", "__init__"], [24, 3, 1, "", "b_K"], [24, 3, 1, "", "b_V"], [24, 2, 1, "", "calculate_attention_scores"], [24, 2, 1, "", "calculate_qkv_matrices"], [24, 2, 1, "", "calculate_z_scores"]], "transformer_lens.components.layer_norm": [[25, 1, 1, "", "LayerNorm"]], "transformer_lens.components.layer_norm.LayerNorm": [[25, 2, 1, "", "__init__"], [25, 2, 1, "", "forward"]], "transformer_lens.components.layer_norm_pre": [[26, 1, 1, "", "LayerNormPre"]], "transformer_lens.components.layer_norm_pre.LayerNormPre": [[26, 2, 1, "", "__init__"], [26, 2, 1, "", "forward"]], "transformer_lens.components.pos_embed": [[27, 1, 1, "", "PosEmbed"]], "transformer_lens.components.pos_embed.PosEmbed": [[27, 2, 1, "", "forward"]], "transformer_lens.components.rms_norm": [[28, 1, 1, "", "RMSNorm"]], "transformer_lens.components.rms_norm.RMSNorm": [[28, 2, 1, "", "__init__"], [28, 2, 1, "", "forward"]], "transformer_lens.components.rms_norm_pre": [[29, 1, 1, "", "RMSNormPre"]], "transformer_lens.components.rms_norm_pre.RMSNormPre": [[29, 2, 1, "", "__init__"], [29, 2, 1, "", "forward"]], "transformer_lens.components.t5_attention": [[30, 1, 1, "", "T5Attention"]], "transformer_lens.components.t5_attention.T5Attention": [[30, 2, 1, "", "compute_relative_attention_bias"]], "transformer_lens.components.t5_block": [[31, 1, 1, "", "T5Block"]], "transformer_lens.components.t5_block.T5Block": [[31, 2, 1, "", "forward"]], "transformer_lens.components.token_typed_embed": [[32, 1, 1, "", "TokenTypeEmbed"]], "transformer_lens.components.token_typed_embed.TokenTypeEmbed": [[32, 2, 1, "", "forward"]], "transformer_lens.components.transformer_block": [[33, 1, 1, "", "TransformerBlock"]], "transformer_lens.components.transformer_block.TransformerBlock": [[33, 2, 1, "", "apply_mlp"], [33, 2, 1, "", "forward"], [33, 4, 1, "", "ln1"], [33, 4, 1, "", "ln2"], [33, 4, 1, "", "mlp"]], "transformer_lens.components.unembed": [[34, 1, 1, "", "Unembed"]], "transformer_lens.components.unembed.Unembed": [[34, 2, 1, "", "forward"]], "transformer_lens.evals": [[35, 1, 1, "", "IOIDataset"], [35, 5, 1, "", "evaluate"], [35, 5, 1, "", "evaluate_on_dataset"], [35, 5, 1, "", "induction_loss"], [35, 5, 1, "", "ioi_eval"], [35, 5, 1, "", "make_code_data_loader"], [35, 5, 1, "", "make_owt_data_loader"], [35, 5, 1, "", "make_pile_data_loader"], [35, 5, 1, "", "make_wiki_data_loader"], [35, 5, 1, "", "sanity_check"]], "transformer_lens.evals.IOIDataset": [[35, 2, 1, "", "get_default_names"], [35, 2, 1, "", "get_default_nouns"], [35, 2, 1, "", "get_default_templates"], [35, 2, 1, "", "get_sample"]], "transformer_lens.head_detector": [[36, 5, 1, "", "compute_head_attention_similarity_score"], [36, 5, 1, "", "detect_head"], [36, 5, 1, "", "get_duplicate_token_head_detection_pattern"], [36, 5, 1, "", "get_induction_head_detection_pattern"], [36, 5, 1, "", "get_previous_token_head_detection_pattern"], [36, 5, 1, "", "get_supported_heads"]], "transformer_lens.hook_points": [[37, 4, 1, "", "HookFunction"], [37, 1, 1, "", "HookPoint"], [37, 1, 1, "", "HookedRootModule"], [37, 1, 1, "", "LensHandle"]], "transformer_lens.hook_points.HookPoint": [[37, 2, 1, "", "add_hook"], [37, 2, 1, "", "add_perma_hook"], [37, 2, 1, "", "clear_context"], [37, 2, 1, "", "forward"], [37, 2, 1, "", "layer"], [37, 2, 1, "", "remove_hooks"]], "transformer_lens.hook_points.HookedRootModule": [[37, 2, 1, "", "add_caching_hooks"], [37, 2, 1, "", "add_hook"], [37, 2, 1, "", "add_perma_hook"], [37, 2, 1, "", "cache_all"], [37, 2, 1, "", "cache_some"], [37, 2, 1, "", "check_and_add_hook"], [37, 2, 1, "", "check_hooks_to_add"], [37, 2, 1, "", "clear_contexts"], [37, 2, 1, "", "get_caching_hooks"], [37, 4, 1, "", "hook_dict"], [37, 2, 1, "", "hook_points"], [37, 2, 1, "", "hooks"], [37, 4, 1, "", "mod_dict"], [37, 4, 1, "", "name"], [37, 2, 1, "", "remove_all_hook_fns"], [37, 2, 1, "", "reset_hooks"], [37, 2, 1, "", "run_with_cache"], [37, 2, 1, "", "run_with_hooks"], [37, 2, 1, "", "setup"]], "transformer_lens.hook_points.LensHandle": [[37, 4, 1, "", "context_level"], [37, 4, 1, "", "hook"], [37, 4, 1, "", "is_permanent"]], "transformer_lens.loading_from_pretrained": [[38, 1, 1, "", "Config"], [38, 6, 1, "", "MODEL_ALIASES"], [38, 6, 1, "", "NON_HF_HOSTED_MODEL_NAMES"], [38, 6, 1, "", "OFFICIAL_MODEL_NAMES"], [38, 5, 1, "", "get_checkpoint_labels"], [38, 5, 1, "", "get_num_params_of_pretrained"], [38, 5, 1, "", "get_pretrained_model_config"]], "transformer_lens.loading_from_pretrained.Config": [[38, 4, 1, "", "d_head"], [38, 4, 1, "", "d_mlp"], [38, 4, 1, "", "d_model"], [38, 4, 1, "", "d_vocab"], [38, 4, 1, "", "debug"], [38, 4, 1, "", "init_range"], [38, 4, 1, "", "layer_norm_eps"], [38, 4, 1, "", "n_ctx"], [38, 4, 1, "", "n_heads"], [38, 4, 1, "", "n_layers"]], "transformer_lens.past_key_value_caching": [[39, 1, 1, "", "HookedTransformerKeyValueCache"], [39, 1, 1, "", "HookedTransformerKeyValueCacheEntry"]], "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache": [[39, 2, 1, "", "append_attention_mask"], [39, 4, 1, "", "entries"], [39, 2, 1, "", "freeze"], [39, 4, 1, "", "frozen"], [39, 2, 1, "", "init_cache"], [39, 4, 1, "", "previous_attention_mask"], [39, 2, 1, "", "unfreeze"]], "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCacheEntry": [[39, 2, 1, "", "append"], [39, 4, 1, "", "frozen"], [39, 2, 1, "", "init_cache_entry"], [39, 4, 1, "", "past_keys"], [39, 4, 1, "", "past_values"]], "transformer_lens.patching": [[40, 5, 1, "", "generic_activation_patch"], [40, 5, 1, "", "get_act_patch_attn_head_all_pos_every"], [40, 5, 1, "", "get_act_patch_attn_head_by_pos_every"], [40, 5, 1, "", "get_act_patch_attn_head_k_all_pos"], [40, 5, 1, "", "get_act_patch_attn_head_k_by_pos"], [40, 5, 1, "", "get_act_patch_attn_head_out_all_pos"], [40, 5, 1, "", "get_act_patch_attn_head_out_by_pos"], [40, 5, 1, "", "get_act_patch_attn_head_pattern_all_pos"], [40, 5, 1, "", "get_act_patch_attn_head_pattern_by_pos"], [40, 5, 1, "", "get_act_patch_attn_head_pattern_dest_src_pos"], [40, 5, 1, "", "get_act_patch_attn_head_q_all_pos"], [40, 5, 1, "", "get_act_patch_attn_head_q_by_pos"], [40, 5, 1, "", "get_act_patch_attn_head_v_all_pos"], [40, 5, 1, "", "get_act_patch_attn_head_v_by_pos"], [40, 5, 1, "", "get_act_patch_attn_out"], [40, 5, 1, "", "get_act_patch_block_every"], [40, 5, 1, "", "get_act_patch_mlp_out"], [40, 5, 1, "", "get_act_patch_resid_mid"], [40, 5, 1, "", "get_act_patch_resid_pre"], [40, 5, 1, "", "layer_head_dest_src_pos_pattern_patch_setter"], [40, 5, 1, "", "layer_head_pattern_patch_setter"], [40, 5, 1, "", "layer_head_pos_pattern_patch_setter"], [40, 5, 1, "", "layer_head_vector_patch_setter"], [40, 5, 1, "", "layer_pos_head_vector_patch_setter"], [40, 5, 1, "", "layer_pos_patch_setter"]], "transformer_lens.pretrained.weight_conversions": [[43, 0, 0, "-", "bert"], [44, 0, 0, "-", "bloom"], [45, 0, 0, "-", "coder"], [46, 0, 0, "-", "gemma"], [47, 0, 0, "-", "gpt2"], [48, 0, 0, "-", "gptj"], [49, 0, 0, "-", "llama"], [50, 0, 0, "-", "mingpt"], [51, 0, 0, "-", "mistral"], [52, 0, 0, "-", "mixtral"], [53, 0, 0, "-", "nanogpt"], [54, 0, 0, "-", "neel_solu_old"], [55, 0, 0, "-", "neo"], [56, 0, 0, "-", "neox"], [57, 0, 0, "-", "opt"], [58, 0, 0, "-", "phi"], [59, 0, 0, "-", "phi3"], [60, 0, 0, "-", "qwen"], [61, 0, 0, "-", "qwen2"], [62, 0, 0, "-", "t5"]], "transformer_lens.pretrained.weight_conversions.bloom": [[44, 5, 1, "", "convert_bloom_weights"]], "transformer_lens.pretrained.weight_conversions.coder": [[45, 5, 1, "", "convert_coder_weights"]], "transformer_lens.pretrained.weight_conversions.mistral": [[51, 5, 1, "", "convert_mistral_weights"]], "transformer_lens.pretrained.weight_conversions.mixtral": [[52, 5, 1, "", "convert_mixtral_weights"]], "transformer_lens.pretrained.weight_conversions.phi": [[58, 5, 1, "", "convert_phi_weights"]], "transformer_lens.pretrained.weight_conversions.phi3": [[59, 5, 1, "", "convert_phi3_weights"]], "transformer_lens.pretrained.weight_conversions.qwen": [[60, 5, 1, "", "convert_qwen_weights"]], "transformer_lens.pretrained.weight_conversions.qwen2": [[61, 5, 1, "", "convert_qwen2_weights"]], "transformer_lens.pretrained.weight_conversions.t5": [[62, 5, 1, "", "convert_t5_weights"]], "transformer_lens.train": [[63, 1, 1, "", "HookedTransformerTrainConfig"], [63, 5, 1, "", "train"]], "transformer_lens.train.HookedTransformerTrainConfig": [[63, 4, 1, "", "batch_size"], [63, 4, 1, "", "device"], [63, 4, 1, "", "lr"], [63, 4, 1, "", "max_grad_norm"], [63, 4, 1, "", "max_steps"], [63, 4, 1, "", "momentum"], [63, 4, 1, "", "num_epochs"], [63, 4, 1, "", "optimizer_name"], [63, 4, 1, "", "print_every"], [63, 4, 1, "", "save_dir"], [63, 4, 1, "", "save_every"], [63, 4, 1, "", "seed"], [63, 4, 1, "", "wandb"], [63, 4, 1, "", "wandb_project_name"], [63, 4, 1, "", "warmup_steps"], [63, 4, 1, "", "weight_decay"]], "transformer_lens.utilities": [[65, 0, 0, "-", "activation_functions"], [66, 0, 0, "-", "addmm"], [67, 0, 0, "-", "attention"], [68, 0, 0, "-", "devices"]], "transformer_lens.utilities.addmm": [[66, 5, 1, "", "batch_addmm"], [66, 5, 1, "", "vanilla_addmm"]], "transformer_lens.utilities.attention": [[67, 5, 1, "", "complex_attn_linear"], [67, 5, 1, "", "simple_attn_linear"]], "transformer_lens.utilities.devices": [[68, 6, 1, "", "AvailableDeviceMemory"], [68, 5, 1, "", "calculate_available_device_cuda_memory"], [68, 5, 1, "", "determine_available_memory_for_available_devices"], [68, 5, 1, "", "get_best_available_cuda_device"], [68, 5, 1, "", "get_best_available_device"], [68, 5, 1, "", "get_device_for_block_index"], [68, 5, 1, "", "move_to_and_update_config"], [68, 5, 1, "", "sort_devices_based_on_available_memory"]], "transformer_lens.utils": [[69, 1, 1, "", "LocallyOverridenDefaults"], [69, 1, 1, "", "Slice"], [69, 6, 1, "", "SliceInput"], [69, 5, 1, "", "calc_fan_in_and_fan_out"], [69, 5, 1, "", "composition_scores"], [69, 5, 1, "", "download_file_from_hf"], [69, 5, 1, "", "gelu_fast"], [69, 5, 1, "", "gelu_new"], [69, 5, 1, "", "get_act_name"], [69, 5, 1, "", "get_attention_mask"], [69, 5, 1, "", "get_corner"], [69, 5, 1, "", "get_cumsum_along_dim"], [69, 5, 1, "", "get_dataset"], [69, 5, 1, "", "get_device"], [69, 5, 1, "", "get_input_with_manually_prepended_bos"], [69, 5, 1, "", "get_nested_attr"], [69, 5, 1, "", "get_offset_position_ids"], [69, 5, 1, "", "get_tokenizer_with_bos"], [69, 5, 1, "", "get_tokens_with_bos_removed"], [69, 5, 1, "", "init_kaiming_normal_"], [69, 5, 1, "", "init_kaiming_uniform_"], [69, 5, 1, "", "init_xavier_normal_"], [69, 5, 1, "", "init_xavier_uniform_"], [69, 5, 1, "", "is_lower_triangular"], [69, 5, 1, "", "is_square"], [69, 5, 1, "", "keep_single_column"], [69, 5, 1, "", "lm_accuracy"], [69, 5, 1, "", "lm_cross_entropy_loss"], [69, 5, 1, "", "override_or_use_default_value"], [69, 5, 1, "", "print_gpu_mem"], [69, 5, 1, "", "remove_batch_dim"], [69, 5, 1, "", "repeat_along_head_dimension"], [69, 5, 1, "", "sample_logits"], [69, 5, 1, "", "set_nested_attr"], [69, 5, 1, "", "solu"], [69, 5, 1, "", "test_prompt"], [69, 5, 1, "", "to_numpy"], [69, 5, 1, "", "tokenize_and_concatenate"], [69, 5, 1, "", "transpose"]], "transformer_lens.utils.LocallyOverridenDefaults": [[69, 2, 1, "", "__init__"]], "transformer_lens.utils.Slice": [[69, 2, 1, "", "__init__"], [69, 2, 1, "", "apply"], [69, 2, 1, "", "indices"], [69, 4, 1, "", "slice"], [69, 2, 1, "", "unwrap"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"citat": 0, "contribut": 1, "setup": [1, 70, 71], "devcontain": 1, "manual": 1, "test": [1, 5], "run": [1, 71], "format": 1, "document": 1, "docstr": 1, "style": 1, "guid": 1, "section": 1, "order": 1, "support": 1, "sphinx": 1, "properti": [1, 72], "refer": 1, "other": [1, 71], "function": [1, 70], "class": [1, 71], "math": 1, "markup": 1, "galleri": 2, "get": [3, 4], "start": [3, 4, 7], "advic": 3, "read": [3, 70], "code": 3, "instal": 3, "huggingfac": 3, "gate": 3, "access": [3, 71], "mechanist": [4, 73], "interpret": [4, 71, 73], "transformerlen": [5, 73], "2": 5, "0": 5, "first": 5, "an": [5, 71], "introduct": [5, 70, 71], "adopt": 5, "semant": 5, "version": 5, "deprec": 5, "roadmap": 5, "immedi": 5, "within": 5, "next": 5, "month": 5, "mid": 5, "term": 5, "3": 5, "perform": 5, "streamlin": 5, "ad": 5, "new": 5, "model": [5, 71, 72, 73], "long": 5, "year": 5, "integr": 5, "contributor": 5, "dev": 5, "branch": 5, "coverag": 5, "compon": [5, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "refactor": 5, "conclus": 5, "appendix": 5, "special": 6, "case": 6, "mixtur": 6, "expert": 6, "error": 6, "rate": 6, "tutori": 7, "where": 7, "To": 7, "demo": [7, 70, 71], "transform": [8, 71], "len": [8, 70, 71], "api": 8, "content": 8, "transformer_len": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "submodul": [9, 17, 42, 64], "subpackag": [9, 41], "activationcach": 10, "factoredmatrix": 11, "hookedencod": 12, "hookedencoderdecod": 13, "hookedtransform": 14, "hookedtransformerconfig": 15, "svdinterpret": 16, "abstract_attent": 18, "attent": [19, 67, 70], "bert_block": 20, "bert_emb": 21, "bert_mlm_head": 22, "emb": 23, "grouped_query_attent": 24, "layer_norm": 25, "layer_norm_pr": 26, "pos_emb": 27, "rms_norm": 28, "rms_norm_pr": 29, "t5_attent": 30, "t5_block": 31, "token_typed_emb": 32, "transformer_block": 33, "unemb": 34, "eval": 35, "head_detector": 36, "hook_point": 37, "loading_from_pretrain": 38, "past_key_value_cach": 39, "patch": [40, 70, 71], "pretrain": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "weight_convers": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62], "bert": 43, "bloom": 44, "coder": 45, "gemma": 46, "gpt2": 47, "gptj": 48, "llama": 49, "mingpt": 50, "mistral": 51, "mixtral": 52, "nanogpt": 53, "neel_solu_old": 54, "neo": 55, "neox": 56, "opt": 57, "phi": 58, "phi3": 59, "qwen": 60, "qwen2": 61, "t5": 62, "train": [63, 71], "util": [64, 65, 66, 67, 68, 69], "activation_funct": 65, "addmm": 66, "devic": 68, "exploratori": 70, "analysi": 70, "tip": 70, "thi": 70, "environ": 70, "ignor": 70, "import": [70, 71], "pytorch": 70, "plot": 70, "helper": 70, "indirect": [70, 71], "object": [70, 71], "identif": [70, 71], "brainstorm": 70, "what": 70, "": 70, "actual": 70, "go": 70, "On": 70, "option": 70, "direct": 70, "logit": 70, "attribut": 70, "layer": 70, "head": [70, 71], "activ": [70, 71], "residu": 70, "stream": 70, "decompos": 70, "consolid": 70, "understand": 70, "visual": 70, "pattern": 70, "compar": 70, "paper": 70, "bonu": 70, "explor": 70, "anomali": 70, "earli": 70, "ar": 70, "induct": [70, 71], "implic": 70, "backup": 70, "name": [70, 71], "mover": 70, "main": 71, "notebook": 71, "load": 71, "cach": 71, "all": 71, "hook": 71, "interven": 71, "task": 71, "avail": 71, "overview": 71, "open": 71, "sourc": 71, "librari": [71, 73], "some": 71, "friendli": 71, "i": 71, "ve": 71, "includ": 71, "resourc": 71, "architectur": 71, "paramet": 71, "fold": 71, "layernorm": 71, "For": 71, "curiou": 71, "featur": 71, "deal": 71, "token": 71, "gotcha": 71, "prepend_bo": 71, "factor": 71, "matrix": 71, "basic": 71, "exampl": 71, "medium": 71, "eigenvalu": 71, "copi": 71, "score": 71, "gener": [71, 73], "text": 71, "point": 71, "toi": 71, "pre": 71, "checkpoint": 71, "phase": 71, "transit": 71, "tabl": 72, "A": 73, "languag": 73}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"Citation": [[0, "citation"]], "Contributing": [[1, "contributing"]], "Setup": [[1, "setup"], [70, "Setup"], [71, "Setup"]], "DevContainer": [[1, "devcontainer"]], "Manual Setup": [[1, "manual-setup"]], "Testing": [[1, "testing"]], "Running the tests": [[1, "running-the-tests"]], "Formatting": [[1, "formatting"]], "Documentation": [[1, "documentation"]], "Docstring Style Guide": [[1, "docstring-style-guide"]], "Sections and Order": [[1, "sections-and-order"]], "Supported Sphinx Properties": [[1, "supported-sphinx-properties"]], "References to Other Functions/Classes": [[1, "references-to-other-functions-classes"]], "Maths": [[1, "maths"]], "Markup": [[1, "markup"]], "Gallery": [[2, "gallery"]], "Getting Started": [[3, "getting-started"]], "Advice for Reading the Code": [[3, "advice-for-reading-the-code"]], "Installation": [[3, "installation"]], "Huggingface Gated Access": [[3, "huggingface-gated-access"]], "Getting Started in Mechanistic Interpretability": [[4, "getting-started-in-mechanistic-interpretability"]], "TransformerLens 2.0": [[5, "transformerlens-2-0"]], "First, an introduction": [[5, "first-an-introduction"]], "Adopting Semantic Versioning": [[5, "adopting-semantic-versioning"]], "Deprecations": [[5, "deprecations"]], "Roadmap": [[5, "roadmap"]], "Immediate - within the next month": [[5, "immediate-within-the-next-month"]], "Mid-term - within the next 3 months": [[5, "mid-term-within-the-next-3-months"]], "Performance": [[5, "performance"]], "Streamlining Adding New Models": [[5, "streamlining-adding-new-models"]], "Long-term - within the next year": [[5, "long-term-within-the-next-year"]], "Model Testing": [[5, "model-testing"]], "Model Integration": [[5, "model-integration"]], "Contributors": [[5, "contributors"]], "New Dev Branches": [[5, "new-dev-branches"]], "Integration Tests": [[5, "integration-tests"]], "Test Coverage": [[5, "test-coverage"]], "Components Refactor": [[5, "components-refactor"]], "Conclusion": [[5, "conclusion"]], "Appendix": [[5, "appendix"]], "Semantic Versioning": [[5, "semantic-versioning"]], "Special Cases": [[6, "special-cases"]], "Mixture of Experts error rates": [[6, "mixture-of-experts-error-rates"]], "Tutorials": [[7, "tutorials"]], "Where To Start": [[7, "where-to-start"]], "Demos": [[7, "demos"]], "Transformer Lens API": [[8, "transformer-lens-api"]], "Contents": [[8, "contents"]], "transformer_lens": [[9, "transformer-lens"]], "Submodules": [[9, "submodules"], [17, "submodules"], [42, "submodules"], [64, "submodules"]], "Subpackages": [[9, "subpackages"], [41, "subpackages"]], "transformer_lens.ActivationCache": [[10, "module-transformer_lens.ActivationCache"]], "transformer_lens.FactoredMatrix": [[11, "module-transformer_lens.FactoredMatrix"]], "transformer_lens.HookedEncoder": [[12, "module-transformer_lens.HookedEncoder"]], "transformer_lens.HookedEncoderDecoder": [[13, "module-transformer_lens.HookedEncoderDecoder"]], "transformer_lens.HookedTransformer": [[14, "module-transformer_lens.HookedTransformer"]], "transformer_lens.HookedTransformerConfig": [[15, "module-transformer_lens.HookedTransformerConfig"]], "transformer_lens.SVDInterpreter": [[16, "module-transformer_lens.SVDInterpreter"]], "transformer_lens.components": [[17, "transformer-lens-components"]], "transformer_lens.components.abstract_attention": [[18, "module-transformer_lens.components.abstract_attention"]], "transformer_lens.components.attention": [[19, "module-transformer_lens.components.attention"]], "transformer_lens.components.bert_block": [[20, "module-transformer_lens.components.bert_block"]], "transformer_lens.components.bert_embed": [[21, "module-transformer_lens.components.bert_embed"]], "transformer_lens.components.bert_mlm_head": [[22, "module-transformer_lens.components.bert_mlm_head"]], "transformer_lens.components.embed": [[23, "module-transformer_lens.components.embed"]], "transformer_lens.components.grouped_query_attention": [[24, "module-transformer_lens.components.grouped_query_attention"]], "transformer_lens.components.layer_norm": [[25, "module-transformer_lens.components.layer_norm"]], "transformer_lens.components.layer_norm_pre": [[26, "module-transformer_lens.components.layer_norm_pre"]], "transformer_lens.components.pos_embed": [[27, "module-transformer_lens.components.pos_embed"]], "transformer_lens.components.rms_norm": [[28, "module-transformer_lens.components.rms_norm"]], "transformer_lens.components.rms_norm_pre": [[29, "module-transformer_lens.components.rms_norm_pre"]], "transformer_lens.components.t5_attention": [[30, "module-transformer_lens.components.t5_attention"]], "transformer_lens.components.t5_block": [[31, "module-transformer_lens.components.t5_block"]], "transformer_lens.components.token_typed_embed": [[32, "module-transformer_lens.components.token_typed_embed"]], "transformer_lens.components.transformer_block": [[33, "module-transformer_lens.components.transformer_block"]], "transformer_lens.components.unembed": [[34, "module-transformer_lens.components.unembed"]], "transformer_lens.evals": [[35, "module-transformer_lens.evals"]], "transformer_lens.head_detector": [[36, "module-transformer_lens.head_detector"]], "transformer_lens.hook_points": [[37, "module-transformer_lens.hook_points"]], "transformer_lens.loading_from_pretrained": [[38, "module-transformer_lens.loading_from_pretrained"]], "transformer_lens.past_key_value_caching": [[39, "module-transformer_lens.past_key_value_caching"]], "transformer_lens.patching": [[40, "module-transformer_lens.patching"]], "transformer_lens.pretrained": [[41, "transformer-lens-pretrained"]], "transformer_lens.pretrained.weight_conversions": [[42, "transformer-lens-pretrained-weight-conversions"]], "transformer_lens.pretrained.weight_conversions.bert": [[43, "module-transformer_lens.pretrained.weight_conversions.bert"]], "transformer_lens.pretrained.weight_conversions.bloom": [[44, "module-transformer_lens.pretrained.weight_conversions.bloom"]], "transformer_lens.pretrained.weight_conversions.coder": [[45, "module-transformer_lens.pretrained.weight_conversions.coder"]], "transformer_lens.pretrained.weight_conversions.gemma": [[46, "module-transformer_lens.pretrained.weight_conversions.gemma"]], "transformer_lens.pretrained.weight_conversions.gpt2": [[47, "module-transformer_lens.pretrained.weight_conversions.gpt2"]], "transformer_lens.pretrained.weight_conversions.gptj": [[48, "module-transformer_lens.pretrained.weight_conversions.gptj"]], "transformer_lens.pretrained.weight_conversions.llama": [[49, "module-transformer_lens.pretrained.weight_conversions.llama"]], "transformer_lens.pretrained.weight_conversions.mingpt": [[50, "module-transformer_lens.pretrained.weight_conversions.mingpt"]], "transformer_lens.pretrained.weight_conversions.mistral": [[51, "module-transformer_lens.pretrained.weight_conversions.mistral"]], "transformer_lens.pretrained.weight_conversions.mixtral": [[52, "module-transformer_lens.pretrained.weight_conversions.mixtral"]], "transformer_lens.pretrained.weight_conversions.nanogpt": [[53, "module-transformer_lens.pretrained.weight_conversions.nanogpt"]], "transformer_lens.pretrained.weight_conversions.neel_solu_old": [[54, "module-transformer_lens.pretrained.weight_conversions.neel_solu_old"]], "transformer_lens.pretrained.weight_conversions.neo": [[55, "module-transformer_lens.pretrained.weight_conversions.neo"]], "transformer_lens.pretrained.weight_conversions.neox": [[56, "module-transformer_lens.pretrained.weight_conversions.neox"]], "transformer_lens.pretrained.weight_conversions.opt": [[57, "module-transformer_lens.pretrained.weight_conversions.opt"]], "transformer_lens.pretrained.weight_conversions.phi": [[58, "module-transformer_lens.pretrained.weight_conversions.phi"]], "transformer_lens.pretrained.weight_conversions.phi3": [[59, "module-transformer_lens.pretrained.weight_conversions.phi3"]], "transformer_lens.pretrained.weight_conversions.qwen": [[60, "module-transformer_lens.pretrained.weight_conversions.qwen"]], "transformer_lens.pretrained.weight_conversions.qwen2": [[61, "module-transformer_lens.pretrained.weight_conversions.qwen2"]], "transformer_lens.pretrained.weight_conversions.t5": [[62, "module-transformer_lens.pretrained.weight_conversions.t5"]], "transformer_lens.train": [[63, "module-transformer_lens.train"]], "transformer_lens.utilities": [[64, "transformer-lens-utilities"]], "transformer_lens.utilities.activation_functions": [[65, "module-transformer_lens.utilities.activation_functions"]], "transformer_lens.utilities.addmm": [[66, "module-transformer_lens.utilities.addmm"]], "transformer_lens.utilities.attention": [[67, "module-transformer_lens.utilities.attention"]], "transformer_lens.utilities.devices": [[68, "module-transformer_lens.utilities.devices"]], "transformer_lens.utils": [[69, "module-transformer_lens.utils"]], "Exploratory Analysis Demo": [[70, "Exploratory-Analysis-Demo"]], "Tips for Reading This": [[70, "Tips-for-Reading-This"]], "Environment Setup (ignore)": [[70, "Environment-Setup-(ignore)"]], "Imports": [[70, "Imports"]], "PyTorch Setup": [[70, "PyTorch-Setup"]], "Plotting Helper Functions (ignore)": [[70, "Plotting-Helper-Functions-(ignore)"]], "Introduction": [[70, "Introduction"], [71, "Introduction"]], "Indirect Object Identification": [[70, "Indirect-Object-Identification"]], "Brainstorm What\u2019s Actually Going On (Optional)": [[70, "Brainstorm-What's-Actually-Going-On-(Optional)"]], "Direct Logit Attribution": [[70, "Direct-Logit-Attribution"]], "Logit Lens": [[70, "Logit-Lens"]], "Layer Attribution": [[70, "Layer-Attribution"]], "Head Attribution": [[70, "Head-Attribution"]], "Attention Analysis": [[70, "Attention-Analysis"]], "Activation Patching": [[70, "Activation-Patching"]], "Residual Stream": [[70, "Residual-Stream"]], "Layers": [[70, "Layers"]], "Heads": [[70, "Heads"]], "Decomposing Heads": [[70, "Decomposing-Heads"]], "Consolidating Understanding": [[70, "Consolidating-Understanding"]], "Visualizing Attention Patterns": [[70, "Visualizing-Attention-Patterns"]], "Comparing to the Paper": [[70, "Comparing-to-the-Paper"]], "Bonus: Exploring Anomalies": [[70, "Bonus:-Exploring-Anomalies"]], "Early Heads are Induction Heads(?!)": [[70, "Early-Heads-are-Induction-Heads(?!)"]], "Implications": [[70, "Implications"]], "Backup Name Mover Heads": [[70, "Backup-Name-Mover-Heads"]], "Transformer Lens Main Demo Notebook": [[71, "Transformer-Lens-Main-Demo-Notebook"]], "Loading and Running Models": [[71, "Loading-and-Running-Models"]], "Caching all Activations": [[71, "Caching-all-Activations"]], "Hooks: Intervening on Activations": [[71, "Hooks:-Intervening-on-Activations"]], "Activation Patching on the Indirect Object Identification Task": [[71, "Activation-Patching-on-the-Indirect-Object-Identification-Task"]], "Hooks: Accessing Activations": [[71, "Hooks:-Accessing-Activations"]], "Available Models": [[71, "Available-Models"]], "An overview of the important open source models in the library": [[71, "An-overview-of-the-important-open-source-models-in-the-library"]], "An overview of some interpretability-friendly models I\u2019ve trained and included": [[71, "An-overview-of-some-interpretability-friendly-models-I've-trained-and-included"]], "Other Resources:": [[71, "Other-Resources:"]], "Transformer architecture": [[71, "Transformer-architecture"]], "Parameter Names": [[71, "Parameter-Names"]], "Activation + Hook Names": [[71, "Activation-+-Hook-Names"]], "Folding LayerNorm (For the Curious)": [[71, "Folding-LayerNorm-(For-the-Curious)"]], "Features": [[71, "Features"]], "Dealing with tokens": [[71, "Dealing-with-tokens"]], "Gotcha: prepend_bos": [[71, "Gotcha:-prepend_bos"]], "Factored Matrix Class": [[71, "Factored-Matrix-Class"]], "Basic Examples": [[71, "Basic-Examples"]], "Medium Example: Eigenvalue Copying Scores": [[71, "Medium-Example:-Eigenvalue-Copying-Scores"]], "Generating Text": [[71, "Generating-Text"]], "Hook Points": [[71, "Hook-Points"]], "Toy Example": [[71, "Toy-Example"]], "Loading Pre-Trained Checkpoints": [[71, "Loading-Pre-Trained-Checkpoints"]], "Example: Induction Head Phase Transition": [[71, "Example:-Induction-Head-Phase-Transition"]], "Model Properties Table": [[72, "model-properties-table"]], "TransformerLens": [[73, "transformerlens"]], "A Library for Mechanistic Interpretability of Generative Language Models": [[73, "a-library-for-mechanistic-interpretability-of-generative-language-models"]]}, "indexentries": {"activationcache (class in transformer_lens.activationcache)": [[10, "transformer_lens.ActivationCache.ActivationCache"]], "accumulated_resid() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.accumulated_resid"]], "apply_ln_to_stack() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.apply_ln_to_stack"]], "apply_slice_to_batch_dim() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.apply_slice_to_batch_dim"]], "compute_head_results() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.compute_head_results"]], "decompose_resid() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.decompose_resid"]], "get_full_resid_decomposition() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.get_full_resid_decomposition"]], "get_neuron_results() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.get_neuron_results"]], "items() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.items"]], "keys() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.keys"]], "logit_attrs() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.logit_attrs"]], "module": [[10, "module-transformer_lens.ActivationCache"], [11, "module-transformer_lens.FactoredMatrix"], [12, "module-transformer_lens.HookedEncoder"], [13, "module-transformer_lens.HookedEncoderDecoder"], [14, "module-transformer_lens.HookedTransformer"], [15, "module-transformer_lens.HookedTransformerConfig"], [16, "module-transformer_lens.SVDInterpreter"], [18, "module-transformer_lens.components.abstract_attention"], [19, "module-transformer_lens.components.attention"], [20, "module-transformer_lens.components.bert_block"], [21, "module-transformer_lens.components.bert_embed"], [22, "module-transformer_lens.components.bert_mlm_head"], [23, "module-transformer_lens.components.embed"], [24, "module-transformer_lens.components.grouped_query_attention"], [25, "module-transformer_lens.components.layer_norm"], [26, "module-transformer_lens.components.layer_norm_pre"], [27, "module-transformer_lens.components.pos_embed"], [28, "module-transformer_lens.components.rms_norm"], [29, "module-transformer_lens.components.rms_norm_pre"], [30, "module-transformer_lens.components.t5_attention"], [31, "module-transformer_lens.components.t5_block"], [32, "module-transformer_lens.components.token_typed_embed"], [33, "module-transformer_lens.components.transformer_block"], [34, "module-transformer_lens.components.unembed"], [35, "module-transformer_lens.evals"], [36, "module-transformer_lens.head_detector"], [37, "module-transformer_lens.hook_points"], [38, "module-transformer_lens.loading_from_pretrained"], [39, "module-transformer_lens.past_key_value_caching"], [40, "module-transformer_lens.patching"], [43, "module-transformer_lens.pretrained.weight_conversions.bert"], [44, "module-transformer_lens.pretrained.weight_conversions.bloom"], [45, "module-transformer_lens.pretrained.weight_conversions.coder"], [46, "module-transformer_lens.pretrained.weight_conversions.gemma"], [47, "module-transformer_lens.pretrained.weight_conversions.gpt2"], [48, "module-transformer_lens.pretrained.weight_conversions.gptj"], [49, "module-transformer_lens.pretrained.weight_conversions.llama"], [50, "module-transformer_lens.pretrained.weight_conversions.mingpt"], [51, "module-transformer_lens.pretrained.weight_conversions.mistral"], [52, "module-transformer_lens.pretrained.weight_conversions.mixtral"], [53, "module-transformer_lens.pretrained.weight_conversions.nanogpt"], [54, "module-transformer_lens.pretrained.weight_conversions.neel_solu_old"], [55, "module-transformer_lens.pretrained.weight_conversions.neo"], [56, "module-transformer_lens.pretrained.weight_conversions.neox"], [57, "module-transformer_lens.pretrained.weight_conversions.opt"], [58, "module-transformer_lens.pretrained.weight_conversions.phi"], [59, "module-transformer_lens.pretrained.weight_conversions.phi3"], [60, "module-transformer_lens.pretrained.weight_conversions.qwen"], [61, "module-transformer_lens.pretrained.weight_conversions.qwen2"], [62, "module-transformer_lens.pretrained.weight_conversions.t5"], [63, "module-transformer_lens.train"], [65, "module-transformer_lens.utilities.activation_functions"], [66, "module-transformer_lens.utilities.addmm"], [67, "module-transformer_lens.utilities.attention"], [68, "module-transformer_lens.utilities.devices"], [69, "module-transformer_lens.utils"]], "remove_batch_dim() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.remove_batch_dim"]], "stack_activation() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.stack_activation"]], "stack_head_results() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.stack_head_results"]], "stack_neuron_results() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.stack_neuron_results"]], "to() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.to"]], "toggle_autodiff() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.toggle_autodiff"]], "transformer_lens.activationcache": [[10, "module-transformer_lens.ActivationCache"]], "values() (transformer_lens.activationcache.activationcache method)": [[10, "transformer_lens.ActivationCache.ActivationCache.values"]], "ab (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.AB"]], "ba (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.BA"]], "factoredmatrix (class in transformer_lens.factoredmatrix)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix"]], "s (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.S"]], "t (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.T"]], "u (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.U"]], "vh (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.Vh"]], "collapse_l() (transformer_lens.factoredmatrix.factoredmatrix method)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.collapse_l"]], "collapse_r() (transformer_lens.factoredmatrix.factoredmatrix method)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.collapse_r"]], "eigenvalues (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.eigenvalues"]], "get_corner() (transformer_lens.factoredmatrix.factoredmatrix method)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.get_corner"]], "make_even() (transformer_lens.factoredmatrix.factoredmatrix method)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.make_even"]], "ndim (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.ndim"]], "norm() (transformer_lens.factoredmatrix.factoredmatrix method)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.norm"]], "pair (transformer_lens.factoredmatrix.factoredmatrix property)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.pair"]], "svd() (transformer_lens.factoredmatrix.factoredmatrix method)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.svd"]], "transformer_lens.factoredmatrix": [[11, "module-transformer_lens.FactoredMatrix"]], "unsqueeze() (transformer_lens.factoredmatrix.factoredmatrix method)": [[11, "transformer_lens.FactoredMatrix.FactoredMatrix.unsqueeze"]], "hookedencoder (class in transformer_lens.hookedencoder)": [[12, "transformer_lens.HookedEncoder.HookedEncoder"]], "ov (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.OV"]], "qk (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.QK"]], "w_e (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_E"]], "w_e_pos (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_E_pos"]], "w_k (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_K"]], "w_o (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_O"]], "w_q (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_Q"]], "w_u (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_U"]], "w_v (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_V"]], "w_in (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_in"]], "w_out (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_out"]], "w_pos (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.W_pos"]], "all_head_labels() (transformer_lens.hookedencoder.hookedencoder method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.all_head_labels"]], "b_k (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.b_K"]], "b_o (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.b_O"]], "b_q (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.b_Q"]], "b_u (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.b_U"]], "b_v (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.b_V"]], "b_in (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.b_in"]], "b_out (transformer_lens.hookedencoder.hookedencoder property)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.b_out"]], "cpu() (transformer_lens.hookedencoder.hookedencoder method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.cpu"]], "cuda() (transformer_lens.hookedencoder.hookedencoder method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.cuda"]], "forward() (transformer_lens.hookedencoder.hookedencoder method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.forward"]], "from_pretrained() (transformer_lens.hookedencoder.hookedencoder class method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.from_pretrained"]], "mps() (transformer_lens.hookedencoder.hookedencoder method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.mps"]], "run_with_cache() (transformer_lens.hookedencoder.hookedencoder method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.run_with_cache"]], "to() (transformer_lens.hookedencoder.hookedencoder method)": [[12, "transformer_lens.HookedEncoder.HookedEncoder.to"]], "transformer_lens.hookedencoder": [[12, "module-transformer_lens.HookedEncoder"]], "hookedencoderdecoder (class in transformer_lens.hookedencoderdecoder)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder"]], "ov (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.OV"]], "qk (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.QK"]], "w_e (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_E"]], "w_k (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_K"]], "w_o (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_O"]], "w_q (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_Q"]], "w_u (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_U"]], "w_v (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_V"]], "w_in (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_in"]], "w_out (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_out"]], "w_pos (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.W_pos"]], "all_head_labels() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.all_head_labels"]], "b_k (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.b_K"]], "b_o (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.b_O"]], "b_q (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.b_Q"]], "b_u (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.b_U"]], "b_v (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.b_V"]], "b_in (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.b_in"]], "b_out (transformer_lens.hookedencoderdecoder.hookedencoderdecoder property)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.b_out"]], "cpu() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.cpu"]], "cuda() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.cuda"]], "forward() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.forward"]], "from_pretrained() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder class method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.from_pretrained"]], "generate() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.generate"]], "mps() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.mps"]], "run_with_cache() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.run_with_cache"]], "to() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.to"]], "to_tokens() (transformer_lens.hookedencoderdecoder.hookedencoderdecoder method)": [[13, "transformer_lens.HookedEncoderDecoder.HookedEncoderDecoder.to_tokens"]], "transformer_lens.hookedencoderdecoder": [[13, "module-transformer_lens.HookedEncoderDecoder"]], "hookedtransformer (class in transformer_lens.hookedtransformer)": [[14, "transformer_lens.HookedTransformer.HookedTransformer"]], "ov (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.OV"]], "output (class in transformer_lens.hookedtransformer)": [[14, "transformer_lens.HookedTransformer.Output"]], "qk (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.QK"]], "w_e (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_E"]], "w_e_pos (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_E_pos"]], "w_k (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_K"]], "w_o (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_O"]], "w_q (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_Q"]], "w_u (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_U"]], "w_v (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_V"]], "w_gate (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_gate"]], "w_in (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_in"]], "w_out (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_out"]], "w_pos (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.W_pos"]], "__init__() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.__init__"]], "accumulated_bias() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.accumulated_bias"]], "all_composition_scores() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.all_composition_scores"]], "all_head_labels() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.all_head_labels"]], "b_k (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.b_K"]], "b_o (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.b_O"]], "b_q (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.b_Q"]], "b_u (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.b_U"]], "b_v (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.b_V"]], "b_in (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.b_in"]], "b_out (transformer_lens.hookedtransformer.hookedtransformer property)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.b_out"]], "center_unembed() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.center_unembed"]], "center_writing_weights() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.center_writing_weights"]], "check_hooks_to_add() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.check_hooks_to_add"]], "cpu() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.cpu"]], "cuda() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.cuda"]], "fold_layer_norm() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.fold_layer_norm"]], "fold_value_biases() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.fold_value_biases"]], "forward() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.forward"]], "from_pretrained() (transformer_lens.hookedtransformer.hookedtransformer class method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.from_pretrained"]], "from_pretrained_no_processing() (transformer_lens.hookedtransformer.hookedtransformer class method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.from_pretrained_no_processing"]], "generate() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.generate"]], "get_pos_offset() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.get_pos_offset"]], "get_residual() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.get_residual"]], "get_token_position() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.get_token_position"]], "init_weights() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.init_weights"]], "input_to_embed() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.input_to_embed"]], "ln_final (transformer_lens.hookedtransformer.hookedtransformer attribute)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.ln_final"]], "load_and_process_state_dict() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.load_and_process_state_dict"]], "load_sample_training_dataset() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.load_sample_training_dataset"]], "logits (transformer_lens.hookedtransformer.output attribute)": [[14, "transformer_lens.HookedTransformer.Output.logits"]], "loss (transformer_lens.hookedtransformer.output attribute)": [[14, "transformer_lens.HookedTransformer.Output.loss"]], "loss_fn() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.loss_fn"]], "move_model_modules_to_device() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.move_model_modules_to_device"]], "mps() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.mps"]], "process_weights_() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.process_weights_"]], "refactor_factored_attn_matrices() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.refactor_factored_attn_matrices"]], "run_with_cache() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.run_with_cache"]], "sample_datapoint() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.sample_datapoint"]], "set_tokenizer() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.set_tokenizer"]], "set_ungroup_grouped_query_attention() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.set_ungroup_grouped_query_attention"]], "set_use_attn_in() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.set_use_attn_in"]], "set_use_attn_result() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.set_use_attn_result"]], "set_use_hook_mlp_in() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.set_use_hook_mlp_in"]], "set_use_split_qkv_input() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.set_use_split_qkv_input"]], "to() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.to"]], "to_single_str_token() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.to_single_str_token"]], "to_single_token() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.to_single_token"]], "to_str_tokens() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.to_str_tokens"]], "to_string() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.to_string"]], "to_tokens() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.to_tokens"]], "tokens_to_residual_directions() (transformer_lens.hookedtransformer.hookedtransformer method)": [[14, "transformer_lens.HookedTransformer.HookedTransformer.tokens_to_residual_directions"]], "transformer_lens.hookedtransformer": [[14, "module-transformer_lens.HookedTransformer"]], "hookedtransformerconfig (class in transformer_lens.hookedtransformerconfig)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig"]], "ntk_by_parts_factor (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.NTK_by_parts_factor"]], "ntk_by_parts_high_freq_factor (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.NTK_by_parts_high_freq_factor"]], "ntk_by_parts_low_freq_factor (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.NTK_by_parts_low_freq_factor"]], "act_fn (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.act_fn"]], "attention_dir (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.attention_dir"]], "attn_only (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.attn_only"]], "attn_scale (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.attn_scale"]], "attn_scores_soft_cap (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.attn_scores_soft_cap"]], "attn_types (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.attn_types"]], "checkpoint_index (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.checkpoint_index"]], "checkpoint_label_type (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.checkpoint_label_type"]], "checkpoint_value (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.checkpoint_value"]], "d_head (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.d_head"]], "d_mlp (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.d_mlp"]], "d_model (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.d_model"]], "d_vocab (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.d_vocab"]], "d_vocab_out (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.d_vocab_out"]], "decoder_start_token_id (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.decoder_start_token_id"]], "default_prepend_bos (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.default_prepend_bos"]], "device (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.device"]], "dtype (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.dtype"]], "eps (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.eps"]], "experts_per_token (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.experts_per_token"]], "final_rms (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.final_rms"]], "from_checkpoint (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.from_checkpoint"]], "from_dict() (transformer_lens.hookedtransformerconfig.hookedtransformerconfig class method)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.from_dict"]], "gated_mlp (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.gated_mlp"]], "init_mode (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.init_mode"]], "init_weights (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.init_weights"]], "initializer_range (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.initializer_range"]], "is_layer_norm_activation() (transformer_lens.hookedtransformerconfig.hookedtransformerconfig method)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.is_layer_norm_activation"]], "load_in_4bit (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.load_in_4bit"]], "model_name (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.model_name"]], "n_ctx (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.n_ctx"]], "n_devices (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.n_devices"]], "n_heads (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.n_heads"]], "n_key_value_heads (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.n_key_value_heads"]], "n_layers (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.n_layers"]], "n_params (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.n_params"]], "normalization_type (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.normalization_type"]], "num_experts (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.num_experts"]], "original_architecture (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.original_architecture"]], "output_logits_soft_cap (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.output_logits_soft_cap"]], "parallel_attn_mlp (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.parallel_attn_mlp"]], "positional_embedding_type (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.positional_embedding_type"]], "post_embedding_ln (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.post_embedding_ln"]], "relative_attention_max_distance (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.relative_attention_max_distance"]], "relative_attention_num_buckets (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.relative_attention_num_buckets"]], "rotary_adjacent_pairs (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.rotary_adjacent_pairs"]], "rotary_base (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.rotary_base"]], "rotary_dim (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.rotary_dim"]], "scale_attn_by_inverse_layer_idx (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.scale_attn_by_inverse_layer_idx"]], "seed (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.seed"]], "set_seed_everywhere() (transformer_lens.hookedtransformerconfig.hookedtransformerconfig method)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.set_seed_everywhere"]], "tie_word_embeddings (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.tie_word_embeddings"]], "to_dict() (transformer_lens.hookedtransformerconfig.hookedtransformerconfig method)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.to_dict"]], "tokenizer_name (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.tokenizer_name"]], "tokenizer_prepends_bos (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.tokenizer_prepends_bos"]], "transformer_lens.hookedtransformerconfig": [[15, "module-transformer_lens.HookedTransformerConfig"]], "trust_remote_code (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.trust_remote_code"]], "ungroup_grouped_query_attention (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.ungroup_grouped_query_attention"]], "unwrap() (transformer_lens.hookedtransformerconfig.hookedtransformerconfig class method)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.unwrap"]], "use_ntk_by_parts_rope (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_NTK_by_parts_rope"]], "use_attn_in (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_attn_in"]], "use_attn_result (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_attn_result"]], "use_attn_scale (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_attn_scale"]], "use_hook_mlp_in (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_hook_mlp_in"]], "use_hook_tokens (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_hook_tokens"]], "use_local_attn (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_local_attn"]], "use_normalization_before_and_after (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_normalization_before_and_after"]], "use_split_qkv_input (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.use_split_qkv_input"]], "window_size (transformer_lens.hookedtransformerconfig.hookedtransformerconfig attribute)": [[15, "transformer_lens.HookedTransformerConfig.HookedTransformerConfig.window_size"]], "svdinterpreter (class in transformer_lens.svdinterpreter)": [[16, "transformer_lens.SVDInterpreter.SVDInterpreter"]], "get_singular_vectors() (transformer_lens.svdinterpreter.svdinterpreter method)": [[16, "transformer_lens.SVDInterpreter.SVDInterpreter.get_singular_vectors"]], "transformer_lens.svdinterpreter": [[16, "module-transformer_lens.SVDInterpreter"]], "abstractattention (class in transformer_lens.components.abstract_attention)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention"]], "ov (transformer_lens.components.abstract_attention.abstractattention property)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.OV"]], "qk (transformer_lens.components.abstract_attention.abstractattention property)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.QK"]], "__init__() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.__init__"]], "alibi (transformer_lens.components.abstract_attention.abstractattention attribute)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.alibi"]], "apply_causal_mask() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.apply_causal_mask"]], "apply_rotary() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.apply_rotary"]], "calculate_attention_scores() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.calculate_attention_scores"]], "calculate_qkv_matrices() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.calculate_qkv_matrices"]], "calculate_sin_cos_rotary() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.calculate_sin_cos_rotary"]], "calculate_z_scores() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.calculate_z_scores"]], "create_alibi_bias() (transformer_lens.components.abstract_attention.abstractattention static method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.create_alibi_bias"]], "create_alibi_multipliers() (transformer_lens.components.abstract_attention.abstractattention static method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.create_alibi_multipliers"]], "create_alibi_slope() (transformer_lens.components.abstract_attention.abstractattention static method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.create_alibi_slope"]], "forward() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.forward"]], "rotate_every_two() (transformer_lens.components.abstract_attention.abstractattention method)": [[18, "transformer_lens.components.abstract_attention.AbstractAttention.rotate_every_two"]], "transformer_lens.components.abstract_attention": [[18, "module-transformer_lens.components.abstract_attention"]], "attention (class in transformer_lens.components.attention)": [[19, "transformer_lens.components.attention.Attention"]], "__init__() (transformer_lens.components.attention.attention method)": [[19, "transformer_lens.components.attention.Attention.__init__"]], "transformer_lens.components.attention": [[19, "module-transformer_lens.components.attention"]], "bertblock (class in transformer_lens.components.bert_block)": [[20, "transformer_lens.components.bert_block.BertBlock"]], "forward() (transformer_lens.components.bert_block.bertblock method)": [[20, "transformer_lens.components.bert_block.BertBlock.forward"]], "transformer_lens.components.bert_block": [[20, "module-transformer_lens.components.bert_block"]], "bertembed (class in transformer_lens.components.bert_embed)": [[21, "transformer_lens.components.bert_embed.BertEmbed"]], "forward() (transformer_lens.components.bert_embed.bertembed method)": [[21, "transformer_lens.components.bert_embed.BertEmbed.forward"]], "transformer_lens.components.bert_embed": [[21, "module-transformer_lens.components.bert_embed"]], "bertmlmhead (class in transformer_lens.components.bert_mlm_head)": [[22, "transformer_lens.components.bert_mlm_head.BertMLMHead"]], "forward() (transformer_lens.components.bert_mlm_head.bertmlmhead method)": [[22, "transformer_lens.components.bert_mlm_head.BertMLMHead.forward"]], "transformer_lens.components.bert_mlm_head": [[22, "module-transformer_lens.components.bert_mlm_head"]], "embed (class in transformer_lens.components.embed)": [[23, "transformer_lens.components.embed.Embed"]], "forward() (transformer_lens.components.embed.embed method)": [[23, "transformer_lens.components.embed.Embed.forward"]], "transformer_lens.components.embed": [[23, "module-transformer_lens.components.embed"]], "groupedqueryattention (class in transformer_lens.components.grouped_query_attention)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention"]], "w_k (transformer_lens.components.grouped_query_attention.groupedqueryattention property)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.W_K"]], "w_v (transformer_lens.components.grouped_query_attention.groupedqueryattention property)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.W_V"]], "__init__() (transformer_lens.components.grouped_query_attention.groupedqueryattention method)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.__init__"]], "b_k (transformer_lens.components.grouped_query_attention.groupedqueryattention property)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.b_K"]], "b_v (transformer_lens.components.grouped_query_attention.groupedqueryattention property)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.b_V"]], "calculate_attention_scores() (transformer_lens.components.grouped_query_attention.groupedqueryattention method)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.calculate_attention_scores"]], "calculate_qkv_matrices() (transformer_lens.components.grouped_query_attention.groupedqueryattention method)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.calculate_qkv_matrices"]], "calculate_z_scores() (transformer_lens.components.grouped_query_attention.groupedqueryattention method)": [[24, "transformer_lens.components.grouped_query_attention.GroupedQueryAttention.calculate_z_scores"]], "transformer_lens.components.grouped_query_attention": [[24, "module-transformer_lens.components.grouped_query_attention"]], "layernorm (class in transformer_lens.components.layer_norm)": [[25, "transformer_lens.components.layer_norm.LayerNorm"]], "__init__() (transformer_lens.components.layer_norm.layernorm method)": [[25, "transformer_lens.components.layer_norm.LayerNorm.__init__"]], "forward() (transformer_lens.components.layer_norm.layernorm method)": [[25, "transformer_lens.components.layer_norm.LayerNorm.forward"]], "transformer_lens.components.layer_norm": [[25, "module-transformer_lens.components.layer_norm"]], "layernormpre (class in transformer_lens.components.layer_norm_pre)": [[26, "transformer_lens.components.layer_norm_pre.LayerNormPre"]], "__init__() (transformer_lens.components.layer_norm_pre.layernormpre method)": [[26, "transformer_lens.components.layer_norm_pre.LayerNormPre.__init__"]], "forward() (transformer_lens.components.layer_norm_pre.layernormpre method)": [[26, "transformer_lens.components.layer_norm_pre.LayerNormPre.forward"]], "transformer_lens.components.layer_norm_pre": [[26, "module-transformer_lens.components.layer_norm_pre"]], "posembed (class in transformer_lens.components.pos_embed)": [[27, "transformer_lens.components.pos_embed.PosEmbed"]], "forward() (transformer_lens.components.pos_embed.posembed method)": [[27, "transformer_lens.components.pos_embed.PosEmbed.forward"]], "transformer_lens.components.pos_embed": [[27, "module-transformer_lens.components.pos_embed"]], "rmsnorm (class in transformer_lens.components.rms_norm)": [[28, "transformer_lens.components.rms_norm.RMSNorm"]], "__init__() (transformer_lens.components.rms_norm.rmsnorm method)": [[28, "transformer_lens.components.rms_norm.RMSNorm.__init__"]], "forward() (transformer_lens.components.rms_norm.rmsnorm method)": [[28, "transformer_lens.components.rms_norm.RMSNorm.forward"]], "transformer_lens.components.rms_norm": [[28, "module-transformer_lens.components.rms_norm"]], "rmsnormpre (class in transformer_lens.components.rms_norm_pre)": [[29, "transformer_lens.components.rms_norm_pre.RMSNormPre"]], "__init__() (transformer_lens.components.rms_norm_pre.rmsnormpre method)": [[29, "transformer_lens.components.rms_norm_pre.RMSNormPre.__init__"]], "forward() (transformer_lens.components.rms_norm_pre.rmsnormpre method)": [[29, "transformer_lens.components.rms_norm_pre.RMSNormPre.forward"]], "transformer_lens.components.rms_norm_pre": [[29, "module-transformer_lens.components.rms_norm_pre"]], "t5attention (class in transformer_lens.components.t5_attention)": [[30, "transformer_lens.components.t5_attention.T5Attention"]], "compute_relative_attention_bias() (transformer_lens.components.t5_attention.t5attention method)": [[30, "transformer_lens.components.t5_attention.T5Attention.compute_relative_attention_bias"]], "transformer_lens.components.t5_attention": [[30, "module-transformer_lens.components.t5_attention"]], "t5block (class in transformer_lens.components.t5_block)": [[31, "transformer_lens.components.t5_block.T5Block"]], "forward() (transformer_lens.components.t5_block.t5block method)": [[31, "transformer_lens.components.t5_block.T5Block.forward"]], "transformer_lens.components.t5_block": [[31, "module-transformer_lens.components.t5_block"]], "tokentypeembed (class in transformer_lens.components.token_typed_embed)": [[32, "transformer_lens.components.token_typed_embed.TokenTypeEmbed"]], "forward() (transformer_lens.components.token_typed_embed.tokentypeembed method)": [[32, "transformer_lens.components.token_typed_embed.TokenTypeEmbed.forward"]], "transformer_lens.components.token_typed_embed": [[32, "module-transformer_lens.components.token_typed_embed"]], "transformerblock (class in transformer_lens.components.transformer_block)": [[33, "transformer_lens.components.transformer_block.TransformerBlock"]], "apply_mlp() (transformer_lens.components.transformer_block.transformerblock method)": [[33, "transformer_lens.components.transformer_block.TransformerBlock.apply_mlp"]], "forward() (transformer_lens.components.transformer_block.transformerblock method)": [[33, "transformer_lens.components.transformer_block.TransformerBlock.forward"]], "ln1 (transformer_lens.components.transformer_block.transformerblock attribute)": [[33, "transformer_lens.components.transformer_block.TransformerBlock.ln1"]], "ln2 (transformer_lens.components.transformer_block.transformerblock attribute)": [[33, "transformer_lens.components.transformer_block.TransformerBlock.ln2"]], "mlp (transformer_lens.components.transformer_block.transformerblock attribute)": [[33, "transformer_lens.components.transformer_block.TransformerBlock.mlp"]], "transformer_lens.components.transformer_block": [[33, "module-transformer_lens.components.transformer_block"]], "unembed (class in transformer_lens.components.unembed)": [[34, "transformer_lens.components.unembed.Unembed"]], "forward() (transformer_lens.components.unembed.unembed method)": [[34, "transformer_lens.components.unembed.Unembed.forward"]], "transformer_lens.components.unembed": [[34, "module-transformer_lens.components.unembed"]], "ioidataset (class in transformer_lens.evals)": [[35, "transformer_lens.evals.IOIDataset"]], "evaluate() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.evaluate"]], "evaluate_on_dataset() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.evaluate_on_dataset"]], "get_default_names() (transformer_lens.evals.ioidataset static method)": [[35, "transformer_lens.evals.IOIDataset.get_default_names"]], "get_default_nouns() (transformer_lens.evals.ioidataset static method)": [[35, "transformer_lens.evals.IOIDataset.get_default_nouns"]], "get_default_templates() (transformer_lens.evals.ioidataset static method)": [[35, "transformer_lens.evals.IOIDataset.get_default_templates"]], "get_sample() (transformer_lens.evals.ioidataset method)": [[35, "transformer_lens.evals.IOIDataset.get_sample"]], "induction_loss() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.induction_loss"]], "ioi_eval() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.ioi_eval"]], "make_code_data_loader() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.make_code_data_loader"]], "make_owt_data_loader() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.make_owt_data_loader"]], "make_pile_data_loader() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.make_pile_data_loader"]], "make_wiki_data_loader() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.make_wiki_data_loader"]], "sanity_check() (in module transformer_lens.evals)": [[35, "transformer_lens.evals.sanity_check"]], "transformer_lens.evals": [[35, "module-transformer_lens.evals"]], "compute_head_attention_similarity_score() (in module transformer_lens.head_detector)": [[36, "transformer_lens.head_detector.compute_head_attention_similarity_score"]], "detect_head() (in module transformer_lens.head_detector)": [[36, "transformer_lens.head_detector.detect_head"]], "get_duplicate_token_head_detection_pattern() (in module transformer_lens.head_detector)": [[36, "transformer_lens.head_detector.get_duplicate_token_head_detection_pattern"]], "get_induction_head_detection_pattern() (in module transformer_lens.head_detector)": [[36, "transformer_lens.head_detector.get_induction_head_detection_pattern"]], "get_previous_token_head_detection_pattern() (in module transformer_lens.head_detector)": [[36, "transformer_lens.head_detector.get_previous_token_head_detection_pattern"]], "get_supported_heads() (in module transformer_lens.head_detector)": [[36, "transformer_lens.head_detector.get_supported_heads"]], "transformer_lens.head_detector": [[36, "module-transformer_lens.head_detector"]], "hookfunction (in module transformer_lens.hook_points)": [[37, "transformer_lens.hook_points.HookFunction"]], "hookpoint (class in transformer_lens.hook_points)": [[37, "transformer_lens.hook_points.HookPoint"]], "hookedrootmodule (class in transformer_lens.hook_points)": [[37, "transformer_lens.hook_points.HookedRootModule"]], "lenshandle (class in transformer_lens.hook_points)": [[37, "transformer_lens.hook_points.LensHandle"]], "add_caching_hooks() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.add_caching_hooks"]], "add_hook() (transformer_lens.hook_points.hookpoint method)": [[37, "transformer_lens.hook_points.HookPoint.add_hook"]], "add_hook() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.add_hook"]], "add_perma_hook() (transformer_lens.hook_points.hookpoint method)": [[37, "transformer_lens.hook_points.HookPoint.add_perma_hook"]], "add_perma_hook() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.add_perma_hook"]], "cache_all() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.cache_all"]], "cache_some() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.cache_some"]], "check_and_add_hook() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.check_and_add_hook"]], "check_hooks_to_add() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.check_hooks_to_add"]], "clear_context() (transformer_lens.hook_points.hookpoint method)": [[37, "transformer_lens.hook_points.HookPoint.clear_context"]], "clear_contexts() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.clear_contexts"]], "context_level (transformer_lens.hook_points.lenshandle attribute)": [[37, "transformer_lens.hook_points.LensHandle.context_level"]], "forward() (transformer_lens.hook_points.hookpoint method)": [[37, "transformer_lens.hook_points.HookPoint.forward"]], "get_caching_hooks() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.get_caching_hooks"]], "hook (transformer_lens.hook_points.lenshandle attribute)": [[37, "transformer_lens.hook_points.LensHandle.hook"]], "hook_dict (transformer_lens.hook_points.hookedrootmodule attribute)": [[37, "transformer_lens.hook_points.HookedRootModule.hook_dict"]], "hook_points() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.hook_points"]], "hooks() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.hooks"]], "is_permanent (transformer_lens.hook_points.lenshandle attribute)": [[37, "transformer_lens.hook_points.LensHandle.is_permanent"]], "layer() (transformer_lens.hook_points.hookpoint method)": [[37, "transformer_lens.hook_points.HookPoint.layer"]], "mod_dict (transformer_lens.hook_points.hookedrootmodule attribute)": [[37, "transformer_lens.hook_points.HookedRootModule.mod_dict"]], "name (transformer_lens.hook_points.hookedrootmodule attribute)": [[37, "transformer_lens.hook_points.HookedRootModule.name"]], "remove_all_hook_fns() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.remove_all_hook_fns"]], "remove_hooks() (transformer_lens.hook_points.hookpoint method)": [[37, "transformer_lens.hook_points.HookPoint.remove_hooks"]], "reset_hooks() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.reset_hooks"]], "run_with_cache() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.run_with_cache"]], "run_with_hooks() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.run_with_hooks"]], "setup() (transformer_lens.hook_points.hookedrootmodule method)": [[37, "transformer_lens.hook_points.HookedRootModule.setup"]], "transformer_lens.hook_points": [[37, "module-transformer_lens.hook_points"]], "config (class in transformer_lens.loading_from_pretrained)": [[38, "transformer_lens.loading_from_pretrained.Config"]], "model_aliases (in module transformer_lens.loading_from_pretrained)": [[38, "transformer_lens.loading_from_pretrained.MODEL_ALIASES"]], "non_hf_hosted_model_names (in module transformer_lens.loading_from_pretrained)": [[38, "transformer_lens.loading_from_pretrained.NON_HF_HOSTED_MODEL_NAMES"]], "official_model_names (in module transformer_lens.loading_from_pretrained)": [[38, "transformer_lens.loading_from_pretrained.OFFICIAL_MODEL_NAMES"]], "d_head (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.d_head"]], "d_mlp (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.d_mlp"]], "d_model (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.d_model"]], "d_vocab (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.d_vocab"]], "debug (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.debug"]], "get_checkpoint_labels() (in module transformer_lens.loading_from_pretrained)": [[38, "transformer_lens.loading_from_pretrained.get_checkpoint_labels"]], "get_num_params_of_pretrained() (in module transformer_lens.loading_from_pretrained)": [[38, "transformer_lens.loading_from_pretrained.get_num_params_of_pretrained"]], "get_pretrained_model_config() (in module transformer_lens.loading_from_pretrained)": [[38, "transformer_lens.loading_from_pretrained.get_pretrained_model_config"]], "init_range (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.init_range"]], "layer_norm_eps (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.layer_norm_eps"]], "n_ctx (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.n_ctx"]], "n_heads (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.n_heads"]], "n_layers (transformer_lens.loading_from_pretrained.config attribute)": [[38, "transformer_lens.loading_from_pretrained.Config.n_layers"]], "transformer_lens.loading_from_pretrained": [[38, "module-transformer_lens.loading_from_pretrained"]], "hookedtransformerkeyvaluecache (class in transformer_lens.past_key_value_caching)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache"]], "hookedtransformerkeyvaluecacheentry (class in transformer_lens.past_key_value_caching)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCacheEntry"]], "append() (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecacheentry method)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCacheEntry.append"]], "append_attention_mask() (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecache method)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache.append_attention_mask"]], "entries (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecache attribute)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache.entries"]], "freeze() (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecache method)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache.freeze"]], "frozen (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecache attribute)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache.frozen"]], "frozen (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecacheentry attribute)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCacheEntry.frozen"]], "init_cache() (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecache class method)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache.init_cache"]], "init_cache_entry() (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecacheentry class method)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCacheEntry.init_cache_entry"]], "past_keys (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecacheentry attribute)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCacheEntry.past_keys"]], "past_values (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecacheentry attribute)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCacheEntry.past_values"]], "previous_attention_mask (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecache attribute)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache.previous_attention_mask"]], "transformer_lens.past_key_value_caching": [[39, "module-transformer_lens.past_key_value_caching"]], "unfreeze() (transformer_lens.past_key_value_caching.hookedtransformerkeyvaluecache method)": [[39, "transformer_lens.past_key_value_caching.HookedTransformerKeyValueCache.unfreeze"]], "generic_activation_patch() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.generic_activation_patch"]], "get_act_patch_attn_head_all_pos_every() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_all_pos_every"]], "get_act_patch_attn_head_by_pos_every() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_by_pos_every"]], "get_act_patch_attn_head_k_all_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_k_all_pos"]], "get_act_patch_attn_head_k_by_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_k_by_pos"]], "get_act_patch_attn_head_out_all_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_out_all_pos"]], "get_act_patch_attn_head_out_by_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_out_by_pos"]], "get_act_patch_attn_head_pattern_all_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_pattern_all_pos"]], "get_act_patch_attn_head_pattern_by_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_pattern_by_pos"]], "get_act_patch_attn_head_pattern_dest_src_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_pattern_dest_src_pos"]], "get_act_patch_attn_head_q_all_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_q_all_pos"]], "get_act_patch_attn_head_q_by_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_q_by_pos"]], "get_act_patch_attn_head_v_all_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_v_all_pos"]], "get_act_patch_attn_head_v_by_pos() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_head_v_by_pos"]], "get_act_patch_attn_out() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_attn_out"]], "get_act_patch_block_every() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_block_every"]], "get_act_patch_mlp_out() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_mlp_out"]], "get_act_patch_resid_mid() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_resid_mid"]], "get_act_patch_resid_pre() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.get_act_patch_resid_pre"]], "layer_head_dest_src_pos_pattern_patch_setter() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.layer_head_dest_src_pos_pattern_patch_setter"]], "layer_head_pattern_patch_setter() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.layer_head_pattern_patch_setter"]], "layer_head_pos_pattern_patch_setter() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.layer_head_pos_pattern_patch_setter"]], "layer_head_vector_patch_setter() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.layer_head_vector_patch_setter"]], "layer_pos_head_vector_patch_setter() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.layer_pos_head_vector_patch_setter"]], "layer_pos_patch_setter() (in module transformer_lens.patching)": [[40, "transformer_lens.patching.layer_pos_patch_setter"]], "transformer_lens.patching": [[40, "module-transformer_lens.patching"]], "transformer_lens.pretrained.weight_conversions.bert": [[43, "module-transformer_lens.pretrained.weight_conversions.bert"]], "convert_bloom_weights() (in module transformer_lens.pretrained.weight_conversions.bloom)": [[44, "transformer_lens.pretrained.weight_conversions.bloom.convert_bloom_weights"]], "transformer_lens.pretrained.weight_conversions.bloom": [[44, "module-transformer_lens.pretrained.weight_conversions.bloom"]], "convert_coder_weights() (in module transformer_lens.pretrained.weight_conversions.coder)": [[45, "transformer_lens.pretrained.weight_conversions.coder.convert_coder_weights"]], "transformer_lens.pretrained.weight_conversions.coder": [[45, "module-transformer_lens.pretrained.weight_conversions.coder"]], "transformer_lens.pretrained.weight_conversions.gemma": [[46, "module-transformer_lens.pretrained.weight_conversions.gemma"]], "transformer_lens.pretrained.weight_conversions.gpt2": [[47, "module-transformer_lens.pretrained.weight_conversions.gpt2"]], "transformer_lens.pretrained.weight_conversions.gptj": [[48, "module-transformer_lens.pretrained.weight_conversions.gptj"]], "transformer_lens.pretrained.weight_conversions.llama": [[49, "module-transformer_lens.pretrained.weight_conversions.llama"]], "transformer_lens.pretrained.weight_conversions.mingpt": [[50, "module-transformer_lens.pretrained.weight_conversions.mingpt"]], "convert_mistral_weights() (in module transformer_lens.pretrained.weight_conversions.mistral)": [[51, "transformer_lens.pretrained.weight_conversions.mistral.convert_mistral_weights"]], "transformer_lens.pretrained.weight_conversions.mistral": [[51, "module-transformer_lens.pretrained.weight_conversions.mistral"]], "convert_mixtral_weights() (in module transformer_lens.pretrained.weight_conversions.mixtral)": [[52, "transformer_lens.pretrained.weight_conversions.mixtral.convert_mixtral_weights"]], "transformer_lens.pretrained.weight_conversions.mixtral": [[52, "module-transformer_lens.pretrained.weight_conversions.mixtral"]], "transformer_lens.pretrained.weight_conversions.nanogpt": [[53, "module-transformer_lens.pretrained.weight_conversions.nanogpt"]], "transformer_lens.pretrained.weight_conversions.neel_solu_old": [[54, "module-transformer_lens.pretrained.weight_conversions.neel_solu_old"]], "transformer_lens.pretrained.weight_conversions.neo": [[55, "module-transformer_lens.pretrained.weight_conversions.neo"]], "transformer_lens.pretrained.weight_conversions.neox": [[56, "module-transformer_lens.pretrained.weight_conversions.neox"]], "transformer_lens.pretrained.weight_conversions.opt": [[57, "module-transformer_lens.pretrained.weight_conversions.opt"]], "convert_phi_weights() (in module transformer_lens.pretrained.weight_conversions.phi)": [[58, "transformer_lens.pretrained.weight_conversions.phi.convert_phi_weights"]], "transformer_lens.pretrained.weight_conversions.phi": [[58, "module-transformer_lens.pretrained.weight_conversions.phi"]], "convert_phi3_weights() (in module transformer_lens.pretrained.weight_conversions.phi3)": [[59, "transformer_lens.pretrained.weight_conversions.phi3.convert_phi3_weights"]], "transformer_lens.pretrained.weight_conversions.phi3": [[59, "module-transformer_lens.pretrained.weight_conversions.phi3"]], "convert_qwen_weights() (in module transformer_lens.pretrained.weight_conversions.qwen)": [[60, "transformer_lens.pretrained.weight_conversions.qwen.convert_qwen_weights"]], "transformer_lens.pretrained.weight_conversions.qwen": [[60, "module-transformer_lens.pretrained.weight_conversions.qwen"]], "convert_qwen2_weights() (in module transformer_lens.pretrained.weight_conversions.qwen2)": [[61, "transformer_lens.pretrained.weight_conversions.qwen2.convert_qwen2_weights"]], "transformer_lens.pretrained.weight_conversions.qwen2": [[61, "module-transformer_lens.pretrained.weight_conversions.qwen2"]], "convert_t5_weights() (in module transformer_lens.pretrained.weight_conversions.t5)": [[62, "transformer_lens.pretrained.weight_conversions.t5.convert_t5_weights"]], "transformer_lens.pretrained.weight_conversions.t5": [[62, "module-transformer_lens.pretrained.weight_conversions.t5"]], "hookedtransformertrainconfig (class in transformer_lens.train)": [[63, "transformer_lens.train.HookedTransformerTrainConfig"]], "batch_size (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.batch_size"]], "device (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.device"]], "lr (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.lr"]], "max_grad_norm (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.max_grad_norm"]], "max_steps (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.max_steps"]], "momentum (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.momentum"]], "num_epochs (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.num_epochs"]], "optimizer_name (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.optimizer_name"]], "print_every (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.print_every"]], "save_dir (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.save_dir"]], "save_every (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.save_every"]], "seed (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.seed"]], "train() (in module transformer_lens.train)": [[63, "transformer_lens.train.train"]], "transformer_lens.train": [[63, "module-transformer_lens.train"]], "wandb (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.wandb"]], "wandb_project_name (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.wandb_project_name"]], "warmup_steps (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.warmup_steps"]], "weight_decay (transformer_lens.train.hookedtransformertrainconfig attribute)": [[63, "transformer_lens.train.HookedTransformerTrainConfig.weight_decay"]], "transformer_lens.utilities.activation_functions": [[65, "module-transformer_lens.utilities.activation_functions"]], "batch_addmm() (in module transformer_lens.utilities.addmm)": [[66, "transformer_lens.utilities.addmm.batch_addmm"]], "transformer_lens.utilities.addmm": [[66, "module-transformer_lens.utilities.addmm"]], "vanilla_addmm() (in module transformer_lens.utilities.addmm)": [[66, "transformer_lens.utilities.addmm.vanilla_addmm"]], "complex_attn_linear() (in module transformer_lens.utilities.attention)": [[67, "transformer_lens.utilities.attention.complex_attn_linear"]], "simple_attn_linear() (in module transformer_lens.utilities.attention)": [[67, "transformer_lens.utilities.attention.simple_attn_linear"]], "transformer_lens.utilities.attention": [[67, "module-transformer_lens.utilities.attention"]], "availabledevicememory (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.AvailableDeviceMemory"]], "calculate_available_device_cuda_memory() (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.calculate_available_device_cuda_memory"]], "determine_available_memory_for_available_devices() (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.determine_available_memory_for_available_devices"]], "get_best_available_cuda_device() (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.get_best_available_cuda_device"]], "get_best_available_device() (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.get_best_available_device"]], "get_device_for_block_index() (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.get_device_for_block_index"]], "move_to_and_update_config() (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.move_to_and_update_config"]], "sort_devices_based_on_available_memory() (in module transformer_lens.utilities.devices)": [[68, "transformer_lens.utilities.devices.sort_devices_based_on_available_memory"]], "transformer_lens.utilities.devices": [[68, "module-transformer_lens.utilities.devices"]], "locallyoverridendefaults (class in transformer_lens.utils)": [[69, "transformer_lens.utils.LocallyOverridenDefaults"]], "slice (class in transformer_lens.utils)": [[69, "transformer_lens.utils.Slice"]], "sliceinput (in module transformer_lens.utils)": [[69, "transformer_lens.utils.SliceInput"]], "__init__() (transformer_lens.utils.locallyoverridendefaults method)": [[69, "transformer_lens.utils.LocallyOverridenDefaults.__init__"]], "__init__() (transformer_lens.utils.slice method)": [[69, "transformer_lens.utils.Slice.__init__"]], "apply() (transformer_lens.utils.slice method)": [[69, "transformer_lens.utils.Slice.apply"]], "calc_fan_in_and_fan_out() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.calc_fan_in_and_fan_out"]], "composition_scores() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.composition_scores"]], "download_file_from_hf() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.download_file_from_hf"]], "gelu_fast() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.gelu_fast"]], "gelu_new() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.gelu_new"]], "get_act_name() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_act_name"]], "get_attention_mask() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_attention_mask"]], "get_corner() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_corner"]], "get_cumsum_along_dim() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_cumsum_along_dim"]], "get_dataset() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_dataset"]], "get_device() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_device"]], "get_input_with_manually_prepended_bos() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_input_with_manually_prepended_bos"]], "get_nested_attr() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_nested_attr"]], "get_offset_position_ids() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_offset_position_ids"]], "get_tokenizer_with_bos() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_tokenizer_with_bos"]], "get_tokens_with_bos_removed() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.get_tokens_with_bos_removed"]], "indices() (transformer_lens.utils.slice method)": [[69, "transformer_lens.utils.Slice.indices"]], "init_kaiming_normal_() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.init_kaiming_normal_"]], "init_kaiming_uniform_() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.init_kaiming_uniform_"]], "init_xavier_normal_() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.init_xavier_normal_"]], "init_xavier_uniform_() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.init_xavier_uniform_"]], "is_lower_triangular() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.is_lower_triangular"]], "is_square() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.is_square"]], "keep_single_column() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.keep_single_column"]], "lm_accuracy() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.lm_accuracy"]], "lm_cross_entropy_loss() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.lm_cross_entropy_loss"]], "override_or_use_default_value() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.override_or_use_default_value"]], "print_gpu_mem() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.print_gpu_mem"]], "remove_batch_dim() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.remove_batch_dim"]], "repeat_along_head_dimension() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.repeat_along_head_dimension"]], "sample_logits() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.sample_logits"]], "set_nested_attr() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.set_nested_attr"]], "slice (transformer_lens.utils.slice attribute)": [[69, "transformer_lens.utils.Slice.slice"]], "solu() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.solu"]], "test_prompt() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.test_prompt"]], "to_numpy() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.to_numpy"]], "tokenize_and_concatenate() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.tokenize_and_concatenate"]], "transformer_lens.utils": [[69, "module-transformer_lens.utils"]], "transpose() (in module transformer_lens.utils)": [[69, "transformer_lens.utils.transpose"]], "unwrap() (transformer_lens.utils.slice class method)": [[69, "transformer_lens.utils.Slice.unwrap"]]}})